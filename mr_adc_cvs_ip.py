# Copyright 2023 Prism Developers. All Rights Reserved.
#
# Licensed under the GNU General Public License v3.0;
# you may not use this file except in compliance with the License.
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied.
#
# See the License file for the specific language governing
# permissions and limitations.
#
# Available at https://github.com/sokolov-group/prism
#
# Authors: Alexander Yu. Sokolov <alexander.y.sokolov@gmail.com>
#          Carlos E. V. de Moura <carlosevmoura@gmail.com>
#

import numpy as np
import prism.mr_adc_overlap as mr_adc_overlap

import prism.lib.logger as logger
import prism.lib.tools as tools

def compute_excitation_manifolds(mr_adc):

    # MR-ADC(0) and MR-ADC(1)
    mr_adc.h0.n_c = mr_adc.ncvs

    ## Total dimension of h0
    mr_adc.h0.dim = mr_adc.h0.n_c

    mr_adc.h0.s_c = 0
    mr_adc.h0.f_c = mr_adc.h0.s_c + mr_adc.h0.n_c

    mr_adc.log.info("\nDimension of h0 excitation manifold:                       %d" % mr_adc.h0.dim)

    # MR-ADC(2)
    mr_adc.h1.dim = 0
    mr_adc.h_orth.dim = mr_adc.h0.dim

    if mr_adc.method in ("mr-adc(2)", "mr-adc(2)-x"):
        mr_adc.h1.n_caa      = mr_adc.ncvs * mr_adc.ncas * mr_adc.ncas
        mr_adc.h1.n_cce      = mr_adc.ncvs * mr_adc.ncvs * mr_adc.nextern
        mr_adc.h1.n_cce_tril = mr_adc.ncvs * (mr_adc.ncvs - 1) * mr_adc.nextern // 2
        mr_adc.h1.n_cae      = mr_adc.ncvs * mr_adc.ncas * mr_adc.nextern
        mr_adc.h1.n_cca      = mr_adc.ncvs * mr_adc.ncvs * mr_adc.ncas
        mr_adc.h1.n_cca_tril = mr_adc.ncvs * (mr_adc.ncvs - 1) * mr_adc.ncas // 2

        mr_adc.h1.dim_caa = 3 * mr_adc.h1.n_caa
        mr_adc.h1.dim_cce = mr_adc.h1.n_cce + mr_adc.h1.n_cce_tril
        mr_adc.h1.dim_cae = 3 * mr_adc.h1.n_cae
        mr_adc.h1.dim_cca = mr_adc.h1.n_cca + mr_adc.h1.n_cca_tril

        if mr_adc.nval > 0:
            mr_adc.h1.n_cve = mr_adc.ncvs * mr_adc.nval * mr_adc.nextern
            mr_adc.h1.n_cva = mr_adc.ncvs * mr_adc.nval * mr_adc.ncas

            mr_adc.h1.dim_cve = 3 * mr_adc.h1.n_cve
            mr_adc.h1.dim_cva = 3 * mr_adc.h1.n_cva

            mr_adc.h1.dim = (mr_adc.h1.dim_caa + mr_adc.h1.dim_cce + mr_adc.h1.dim_cve +
                             mr_adc.h1.dim_cae + mr_adc.h1.dim_cca + mr_adc.h1.dim_cva)
        else:
            mr_adc.h1.dim = (mr_adc.h1.dim_caa + mr_adc.h1.dim_cce +
                             mr_adc.h1.dim_cae + mr_adc.h1.dim_cca)

        if mr_adc.nval > 0:
            mr_adc.h1.s_caa = mr_adc.h0.f_c
            mr_adc.h1.f_caa = mr_adc.h1.s_caa + mr_adc.h1.dim_caa
            mr_adc.h1.s_cce = mr_adc.h1.f_caa
            mr_adc.h1.f_cce = mr_adc.h1.s_cce + mr_adc.h1.dim_cce
            mr_adc.h1.s_cve = mr_adc.h1.f_cce
            mr_adc.h1.f_cve = mr_adc.h1.s_cve + mr_adc.h1.dim_cve
            mr_adc.h1.s_cae = mr_adc.h1.f_cve
            mr_adc.h1.f_cae = mr_adc.h1.s_cae + mr_adc.h1.dim_cae
            mr_adc.h1.s_cca = mr_adc.h1.f_cae
            mr_adc.h1.f_cca = mr_adc.h1.s_cca + mr_adc.h1.dim_cca
            mr_adc.h1.s_cva = mr_adc.h1.f_cca
            mr_adc.h1.f_cva = mr_adc.h1.s_cva + mr_adc.h1.dim_cva

            # Spin-cases slices
            mr_adc.h1.s_caa__aaa = mr_adc.h1.s_caa
            mr_adc.h1.f_caa__aaa = mr_adc.h1.s_caa__aaa + mr_adc.h1.n_caa
            mr_adc.h1.s_caa__abb = mr_adc.h1.f_caa__aaa
            mr_adc.h1.f_caa__abb = mr_adc.h1.s_caa__abb + mr_adc.h1.n_caa
            mr_adc.h1.s_caa__bab = mr_adc.h1.f_caa__abb
            mr_adc.h1.f_caa__bab = mr_adc.h1.s_caa__bab + mr_adc.h1.n_caa

            mr_adc.h1.s_cce__aaa = mr_adc.h1.s_cce
            mr_adc.h1.f_cce__aaa = mr_adc.h1.s_cce__aaa + mr_adc.h1.n_cce_tril
            mr_adc.h1.s_cce__abb = mr_adc.h1.f_cce__aaa
            mr_adc.h1.f_cce__abb = mr_adc.h1.s_cce__abb + mr_adc.h1.n_cce

            mr_adc.h1.s_cve__aaa = mr_adc.h1.s_cve
            mr_adc.h1.f_cve__aaa = mr_adc.h1.s_cve__aaa + mr_adc.h1.n_cve
            mr_adc.h1.s_cve__abb = mr_adc.h1.f_cve__aaa
            mr_adc.h1.f_cve__abb = mr_adc.h1.s_cve__abb + mr_adc.h1.n_cve
            mr_adc.h1.s_cve__bab = mr_adc.h1.f_cve__abb
            mr_adc.h1.f_cve__bab = mr_adc.h1.s_cve__bab + mr_adc.h1.n_cve

            mr_adc.h1.s_cae__aaa = mr_adc.h1.s_cae
            mr_adc.h1.f_cae__aaa = mr_adc.h1.s_cae__aaa + mr_adc.h1.n_cae
            mr_adc.h1.s_cae__abb = mr_adc.h1.f_cae__aaa
            mr_adc.h1.f_cae__abb = mr_adc.h1.s_cae__abb + mr_adc.h1.n_cae
            mr_adc.h1.s_cae__bab = mr_adc.h1.f_cae__abb
            mr_adc.h1.f_cae__bab = mr_adc.h1.s_cae__bab + mr_adc.h1.n_cae

            mr_adc.h1.s_cca__aaa = mr_adc.h1.s_cca
            mr_adc.h1.f_cca__aaa = mr_adc.h1.s_cca__aaa + mr_adc.h1.n_cca_tril
            mr_adc.h1.s_cca__abb = mr_adc.h1.f_cca__aaa
            mr_adc.h1.f_cca__abb = mr_adc.h1.s_cca__abb + mr_adc.h1.n_cca

            mr_adc.h1.s_cva__aaa = mr_adc.h1.s_cva
            mr_adc.h1.f_cva__aaa = mr_adc.h1.s_cva__aaa + mr_adc.h1.n_cva
            mr_adc.h1.s_cva__abb = mr_adc.h1.f_cva__aaa
            mr_adc.h1.f_cva__abb = mr_adc.h1.s_cva__abb + mr_adc.h1.n_cva
            mr_adc.h1.s_cva__bab = mr_adc.h1.f_cva__abb
            mr_adc.h1.f_cva__bab = mr_adc.h1.s_cva__bab + mr_adc.h1.n_cva

        else:
            mr_adc.h1.s_caa = mr_adc.h0.f_c
            mr_adc.h1.f_caa = mr_adc.h1.s_caa + mr_adc.h1.dim_caa
            mr_adc.h1.s_cce = mr_adc.h1.f_caa
            mr_adc.h1.f_cce = mr_adc.h1.s_cce + mr_adc.h1.dim_cce
            mr_adc.h1.s_cae = mr_adc.h1.f_cce
            mr_adc.h1.f_cae = mr_adc.h1.s_cae + mr_adc.h1.dim_cae
            mr_adc.h1.s_cca = mr_adc.h1.f_cae
            mr_adc.h1.f_cca = mr_adc.h1.s_cca + mr_adc.h1.dim_cca

            #Spin-cases_ slices
            mr_adc.h1.s_caa__aaa = mr_adc.h1.s_caa
            mr_adc.h1.f_caa__aaa = mr_adc.h1.s_caa__aaa + mr_adc.h1.n_caa
            mr_adc.h1.s_caa__abb = mr_adc.h1.f_caa__aaa
            mr_adc.h1.f_caa__abb = mr_adc.h1.s_caa__abb + mr_adc.h1.n_caa
            mr_adc.h1.s_caa__bab = mr_adc.h1.f_caa__abb
            mr_adc.h1.f_caa__bab = mr_adc.h1.s_caa__bab + mr_adc.h1.n_caa

            mr_adc.h1.s_cce__aaa = mr_adc.h1.s_cce
            mr_adc.h1.f_cce__aaa = mr_adc.h1.s_cce__aaa + mr_adc.h1.n_cce_tril
            mr_adc.h1.s_cce__abb = mr_adc.h1.f_cce__aaa
            mr_adc.h1.f_cce__abb = mr_adc.h1.s_cce__abb + mr_adc.h1.n_cce

            mr_adc.h1.s_cae__aaa = mr_adc.h1.s_cae
            mr_adc.h1.f_cae__aaa = mr_adc.h1.s_cae__aaa + mr_adc.h1.n_cae
            mr_adc.h1.s_cae__abb = mr_adc.h1.f_cae__aaa
            mr_adc.h1.f_cae__abb = mr_adc.h1.s_cae__abb + mr_adc.h1.n_cae
            mr_adc.h1.s_cae__bab = mr_adc.h1.f_cae__abb
            mr_adc.h1.f_cae__bab = mr_adc.h1.s_cae__bab + mr_adc.h1.n_cae

            mr_adc.h1.s_cca__aaa = mr_adc.h1.s_cca
            mr_adc.h1.f_cca__aaa = mr_adc.h1.s_cca__aaa + mr_adc.h1.n_cca_tril
            mr_adc.h1.s_cca__abb = mr_adc.h1.f_cca__aaa
            mr_adc.h1.f_cca__abb = mr_adc.h1.s_cca__abb + mr_adc.h1.n_cca

        mr_adc.log.info("Dimension of h1 excitation manifold:                       %d" % mr_adc.h1.dim)

        # Overlap for c-caa
        mr_adc.S12.c_caa = mr_adc_overlap.compute_S12_0p_projector(mr_adc)
        if not hasattr(mr_adc.S12, "cae"):
            mr_adc.S12.cae = mr_adc_overlap.compute_S12_m1(mr_adc)
        if not hasattr(mr_adc.S12, "cca"):
            mr_adc.S12.cca = mr_adc_overlap.compute_S12_p1(mr_adc)

        # Determine dimensions of orthogonalized excitation spaces
        mr_adc.h_orth.n_c_caa    = mr_adc.ncvs * mr_adc.S12.c_caa.shape[1]
        mr_adc.h_orth.n_cce      = mr_adc.h1.n_cce
        mr_adc.h_orth.n_cce_tril = mr_adc.h1.n_cce_tril
        mr_adc.h_orth.n_cae      = mr_adc.ncvs * mr_adc.S12.cae.shape[1] * mr_adc.nextern
        mr_adc.h_orth.n_cca      = mr_adc.ncvs * mr_adc.ncvs * mr_adc.S12.cca.shape[1]
        mr_adc.h_orth.n_cca_tril = mr_adc.ncvs * (mr_adc.ncvs - 1) * mr_adc.S12.cca.shape[1] // 2

        mr_adc.h_orth.dim_c_caa = mr_adc.h_orth.n_c_caa
        mr_adc.h_orth.dim_cce   = mr_adc.h1.dim_cce
        mr_adc.h_orth.dim_cae   = 3 * mr_adc.h_orth.n_cae
        mr_adc.h_orth.dim_cca   = mr_adc.h_orth.n_cca_tril + mr_adc.h_orth.n_cca

        if mr_adc.nval > 0:
            mr_adc.h_orth.n_cve = mr_adc.h1.n_cve
            mr_adc.h_orth.n_cva = mr_adc.ncvs * mr_adc.nval * mr_adc.S12.cca.shape[1]

            mr_adc.h_orth.dim_cve = mr_adc.h1.dim_cve
            mr_adc.h_orth.dim_cva = 3 * mr_adc.h_orth.n_cva

            mr_adc.h_orth.dim = (mr_adc.h_orth.dim_c_caa + mr_adc.h_orth.dim_cce + mr_adc.h_orth.dim_cve +
                                 mr_adc.h_orth.dim_cae + mr_adc.h_orth.dim_cca + mr_adc.h_orth.dim_cva)
        else:
            mr_adc.h_orth.dim = (mr_adc.h_orth.dim_c_caa + mr_adc.h_orth.dim_cce +
                                 mr_adc.h_orth.dim_cae + mr_adc.h_orth.dim_cca)

        if mr_adc.nval > 0:
            mr_adc.h_orth.s_c_caa = 0
            mr_adc.h_orth.f_c_caa = mr_adc.h_orth.s_c_caa + mr_adc.h_orth.dim_c_caa
            mr_adc.h_orth.s_cce = mr_adc.h_orth.f_c_caa
            mr_adc.h_orth.f_cce = mr_adc.h_orth.s_cce + mr_adc.h_orth.dim_cce
            mr_adc.h_orth.s_cve = mr_adc.h_orth.f_cce
            mr_adc.h_orth.f_cve = mr_adc.h_orth.s_cve + mr_adc.h_orth.dim_cve
            mr_adc.h_orth.s_cae = mr_adc.h_orth.f_cve
            mr_adc.h_orth.f_cae = mr_adc.h_orth.s_cae + mr_adc.h_orth.dim_cae
            mr_adc.h_orth.s_cca = mr_adc.h_orth.f_cae
            mr_adc.h_orth.f_cca = mr_adc.h_orth.s_cca + mr_adc.h_orth.dim_cca
            mr_adc.h_orth.s_cva = mr_adc.h_orth.f_cca
            mr_adc.h_orth.f_cva = mr_adc.h_orth.s_cva + mr_adc.h_orth.dim_cva

            # Spin-cases slices
            mr_adc.h_orth.s_cce__aaa = mr_adc.h_orth.s_cce
            mr_adc.h_orth.f_cce__aaa = mr_adc.h_orth.s_cce__aaa + mr_adc.h_orth.n_cce_tril
            mr_adc.h_orth.s_cce__abb = mr_adc.h_orth.f_cce__aaa
            mr_adc.h_orth.f_cce__abb = mr_adc.h_orth.s_cce__abb + mr_adc.h_orth.n_cce

            mr_adc.h_orth.s_cve__aaa = mr_adc.h_orth.s_cve
            mr_adc.h_orth.f_cve__aaa = mr_adc.h_orth.s_cve__aaa + mr_adc.h_orth.n_cve
            mr_adc.h_orth.s_cve__abb = mr_adc.h_orth.f_cve__aaa
            mr_adc.h_orth.f_cve__abb = mr_adc.h_orth.s_cve__abb + mr_adc.h_orth.n_cve
            mr_adc.h_orth.s_cve__bab = mr_adc.h_orth.f_cve__abb
            mr_adc.h_orth.f_cve__bab = mr_adc.h_orth.s_cve__bab + mr_adc.h_orth.n_cve

            mr_adc.h_orth.s_cae__aaa = mr_adc.h_orth.s_cae
            mr_adc.h_orth.f_cae__aaa = mr_adc.h_orth.s_cae__aaa + mr_adc.h_orth.n_cae
            mr_adc.h_orth.s_cae__abb = mr_adc.h_orth.f_cae__aaa
            mr_adc.h_orth.f_cae__abb = mr_adc.h_orth.s_cae__abb + mr_adc.h_orth.n_cae
            mr_adc.h_orth.s_cae__bab = mr_adc.h_orth.f_cae__abb
            mr_adc.h_orth.f_cae__bab = mr_adc.h_orth.s_cae__bab + mr_adc.h_orth.n_cae

            mr_adc.h_orth.s_cca__aaa = mr_adc.h_orth.s_cca
            mr_adc.h_orth.f_cca__aaa = mr_adc.h_orth.s_cca__aaa + mr_adc.h_orth.n_cca_tril
            mr_adc.h_orth.s_cca__abb = mr_adc.h_orth.f_cca__aaa
            mr_adc.h_orth.f_cca__abb = mr_adc.h_orth.s_cca__abb + mr_adc.h_orth.n_cca

            mr_adc.h_orth.s_cva__aaa = mr_adc.h_orth.s_cva
            mr_adc.h_orth.f_cva__aaa = mr_adc.h_orth.s_cva__aaa + mr_adc.h_orth.n_cva
            mr_adc.h_orth.s_cva__abb = mr_adc.h_orth.f_cva__aaa
            mr_adc.h_orth.f_cva__abb = mr_adc.h_orth.s_cva__abb + mr_adc.h_orth.n_cva
            mr_adc.h_orth.s_cva__bab = mr_adc.h_orth.f_cva__abb
            mr_adc.h_orth.f_cva__bab = mr_adc.h_orth.s_cva__bab + mr_adc.h_orth.n_cva

        else:
            mr_adc.h_orth.s_c_caa = 0
            mr_adc.h_orth.f_c_caa = mr_adc.h_orth.s_c_caa + mr_adc.h_orth.dim_c_caa
            mr_adc.h_orth.s_cce = mr_adc.h_orth.f_c_caa
            mr_adc.h_orth.f_cce = mr_adc.h_orth.s_cce + mr_adc.h_orth.dim_cce
            mr_adc.h_orth.s_cae = mr_adc.h_orth.f_cce
            mr_adc.h_orth.f_cae = mr_adc.h_orth.s_cae + mr_adc.h_orth.dim_cae
            mr_adc.h_orth.s_cca = mr_adc.h_orth.f_cae
            mr_adc.h_orth.f_cca = mr_adc.h_orth.s_cca + mr_adc.h_orth.dim_cca

            # Spin-cases slices
            mr_adc.h_orth.s_cce__aaa = mr_adc.h_orth.s_cce
            mr_adc.h_orth.f_cce__aaa = mr_adc.h_orth.s_cce__aaa + mr_adc.h_orth.n_cce_tril
            mr_adc.h_orth.s_cce__abb = mr_adc.h_orth.f_cce__aaa
            mr_adc.h_orth.f_cce__abb = mr_adc.h_orth.s_cce__abb + mr_adc.h_orth.n_cce

            mr_adc.h_orth.s_cae__aaa = mr_adc.h_orth.s_cae
            mr_adc.h_orth.f_cae__aaa = mr_adc.h_orth.s_cae__aaa + mr_adc.h_orth.n_cae
            mr_adc.h_orth.s_cae__abb = mr_adc.h_orth.f_cae__aaa
            mr_adc.h_orth.f_cae__abb = mr_adc.h_orth.s_cae__abb + mr_adc.h_orth.n_cae
            mr_adc.h_orth.s_cae__bab = mr_adc.h_orth.f_cae__abb
            mr_adc.h_orth.f_cae__bab = mr_adc.h_orth.s_cae__bab + mr_adc.h_orth.n_cae

            mr_adc.h_orth.s_cca__aaa = mr_adc.h_orth.s_cca
            mr_adc.h_orth.f_cca__aaa = mr_adc.h_orth.s_cca__aaa + mr_adc.h_orth.n_cca_tril
            mr_adc.h_orth.s_cca__abb = mr_adc.h_orth.f_cca__aaa
            mr_adc.h_orth.f_cca__abb = mr_adc.h_orth.s_cca__abb + mr_adc.h_orth.n_cca

    mr_adc.log.info("Total dimension of the excitation manifold:                %d" % (mr_adc.h0.dim + mr_adc.h1.dim))
    mr_adc.log.info("Dimension of the orthogonalized excitation manifold:       %d" % (mr_adc.h_orth.dim))

    if (mr_adc.h_orth.dim < mr_adc.nroots):
        mr_adc.nroots = mr_adc.h_orth.dim

    return mr_adc

def compute_M_00(mr_adc):

    cput0 = (logger.process_clock(), logger.perf_counter())
    mr_adc.log.extra("\nComputing M(h0-h0) block...")

    # Einsum definition from kernel
    einsum = mr_adc.interface.einsum
    einsum_type = mr_adc.interface.einsum_type

    # Variables from kernel
    ncvs = mr_adc.ncvs
    nval = mr_adc.nval
    ncas = mr_adc.ncas
    nextern = mr_adc.nextern

    ## Molecular Orbitals Energies
    e_cvs = mr_adc.mo_energy.x
    e_val = mr_adc.mo_energy.v
    e_extern = mr_adc.mo_energy.e

    # M_00 Matrix
    # Compute 0th-order terms
    M_00  = einsum('J,IJ->IJ', e_cvs, np.identity(ncvs), optimize = einsum_type).copy()

    if mr_adc.method in ("mr-adc(2)", "mr-adc(2)-x"):

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        h_xa = mr_adc.h1eff.xa

        h_xe = mr_adc.h1eff.xe

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxxa = mr_adc.v2e.xxxa
        v_xxva = mr_adc.v2e.xxva
        v_vxxa = mr_adc.v2e.vxxa

        v_xxxe = mr_adc.v2e.xxxe
        v_xxve = mr_adc.v2e.xxve
        v_vxxe = mr_adc.v2e.vxxe

        v_xxae = mr_adc.v2e.xxae

        v_xaex = mr_adc.v2e.xaex

        v_xaxa = mr_adc.v2e.xaxa
        v_xava = mr_adc.v2e.xava

        v_xaxe = mr_adc.v2e.xaxe
        v_xave = mr_adc.v2e.xave
        v_vaxe = mr_adc.v2e.vaxe

        v_xaaa = mr_adc.v2e.xaaa

        v_xaae = mr_adc.v2e.xaae

        v_xeaa = mr_adc.v2e.xeaa

        ## Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        t1_xe = mr_adc.t1.xe
        t1_ve = mr_adc.t1.ve

        t1_xaea = mr_adc.t1.xaea
        t1_vaea = mr_adc.t1.vaea

        t1_xaae = mr_adc.t1.xaae
        t1_vaae = mr_adc.t1.vaae

        t1_xa = mr_adc.t1.xa
        t1_va = mr_adc.t1.va

        t1_xaaa = mr_adc.t1.xaaa
        t1_vaaa = mr_adc.t1.vaaa

        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        t1_xxaa = mr_adc.t1.xxaa
        t1_xvaa = mr_adc.t1.xvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        # Compute 2nd-order terms
        M_00 += einsum('Ia,Ja->IJ', h_xe, t1_xe, optimize = einsum_type)
        M_00 += einsum('Ix,Jx->IJ', h_xa, t1_xa, optimize = einsum_type)
        M_00 += einsum('Ja,Ia->IJ', h_xe, t1_xe, optimize = einsum_type)
        M_00 += einsum('Jx,Ix->IJ', h_xa, t1_xa, optimize = einsum_type)
        M_00 += 2 * einsum('Iixa,Jxia->IJ', t1_xxae, v_xaxe, optimize = einsum_type)
        M_00 -= einsum('Iixa,ixJa->IJ', t1_xxae, v_xaxe, optimize = einsum_type)
        M_00 += 2 * einsum('Iixy,Jxiy->IJ', t1_xxaa, v_xaxa, optimize = einsum_type)
        M_00 -= einsum('Iixy,Jyix->IJ', t1_xxaa, v_xaxa, optimize = einsum_type)
        M_00 += 2 * einsum('Iixa,Jxia->IJ', t1_xvae, v_xave, optimize = einsum_type)
        M_00 -= einsum('Iixa,ixJa->IJ', t1_xvae, v_vaxe, optimize = einsum_type)
        M_00 += 2 * einsum('Iixy,Jxiy->IJ', t1_xvaa, v_xava, optimize = einsum_type)
        M_00 -= einsum('Iixy,Jyix->IJ', t1_xvaa, v_xava, optimize = einsum_type)
        M_00 += 2 * einsum('Jixa,Ixia->IJ', t1_xxae, v_xaxe, optimize = einsum_type)
        M_00 -= einsum('Jixa,ixIa->IJ', t1_xxae, v_xaxe, optimize = einsum_type)
        M_00 += 2 * einsum('Jixy,Ixiy->IJ', t1_xxaa, v_xaxa, optimize = einsum_type)
        M_00 -= einsum('Jixy,Iyix->IJ', t1_xxaa, v_xaxa, optimize = einsum_type)
        M_00 += 2 * einsum('Jixa,Ixia->IJ', t1_xvae, v_xave, optimize = einsum_type)
        M_00 -= einsum('Jixa,ixIa->IJ', t1_xvae, v_vaxe, optimize = einsum_type)
        M_00 += 2 * einsum('Jixy,Ixiy->IJ', t1_xvaa, v_xava, optimize = einsum_type)
        M_00 -= einsum('Jixy,Iyix->IJ', t1_xvaa, v_xava, optimize = einsum_type)
        M_00 -= einsum('iIxa,Jxia->IJ', t1_xxae, v_xaxe, optimize = einsum_type)
        M_00 += 2 * einsum('iIxa,ixJa->IJ', t1_xxae, v_xaxe, optimize = einsum_type)
        M_00 -= einsum('iJxa,Ixia->IJ', t1_xxae, v_xaxe, optimize = einsum_type)
        M_00 += 2 * einsum('iJxa,ixIa->IJ', t1_xxae, v_xaxe, optimize = einsum_type)
        M_00 += 2 * einsum('ia,IJia->IJ', t1_xe, v_xxxe, optimize = einsum_type)
        M_00 += 2 * einsum('ia,JIia->IJ', t1_xe, v_xxxe, optimize = einsum_type)
        M_00 -= einsum('ia,iIJa->IJ', t1_xe, v_xxxe, optimize = einsum_type)
        M_00 -= einsum('ia,iJIa->IJ', t1_xe, v_xxxe, optimize = einsum_type)
        M_00 += 2 * einsum('ix,IJix->IJ', t1_xa, v_xxxa, optimize = einsum_type)
        M_00 += 2 * einsum('ix,JIix->IJ', t1_xa, v_xxxa, optimize = einsum_type)
        M_00 -= einsum('ix,iIJx->IJ', t1_xa, v_xxxa, optimize = einsum_type)
        M_00 -= einsum('ix,iJIx->IJ', t1_xa, v_xxxa, optimize = einsum_type)
        M_00 -= einsum('iIxa,Jxia->IJ', t1_vxae, v_xave, optimize = einsum_type)
        M_00 += 2 * einsum('iIxa,ixJa->IJ', t1_vxae, v_vaxe, optimize = einsum_type)
        M_00 -= einsum('iJxa,Ixia->IJ', t1_vxae, v_xave, optimize = einsum_type)
        M_00 += 2 * einsum('iJxa,ixIa->IJ', t1_vxae, v_vaxe, optimize = einsum_type)
        M_00 += 2 * einsum('ia,IJia->IJ', t1_ve, v_xxve, optimize = einsum_type)
        M_00 += 2 * einsum('ia,JIia->IJ', t1_ve, v_xxve, optimize = einsum_type)
        M_00 -= einsum('ia,iIJa->IJ', t1_ve, v_vxxe, optimize = einsum_type)
        M_00 -= einsum('ia,iJIa->IJ', t1_ve, v_vxxe, optimize = einsum_type)
        M_00 += 2 * einsum('ix,IJix->IJ', t1_va, v_xxva, optimize = einsum_type)
        M_00 += 2 * einsum('ix,JIix->IJ', t1_va, v_xxva, optimize = einsum_type)
        M_00 -= einsum('ix,iIJx->IJ', t1_va, v_vxxa, optimize = einsum_type)
        M_00 -= einsum('ix,iJIx->IJ', t1_va, v_vxxa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('I,Ia,Ja->IJ', e_cvs, t1_xe, t1_xe, optimize = einsum_type)
        M_00 -= einsum('I,Iixa,Jixa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,Iixa,iJxa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('I,Iixy,Jixy->IJ', e_cvs, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,Iixy,Jiyx->IJ', e_cvs, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 -= einsum('I,Iixa,Jixa->IJ', e_cvs, t1_xvae, t1_xvae, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,Iixa,iJxa->IJ', e_cvs, t1_xvae, t1_vxae, optimize = einsum_type)
        M_00 -= einsum('I,Iixy,Jixy->IJ', e_cvs, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,Iixy,Jiyx->IJ', e_cvs, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('I,Ix,Jx->IJ', e_cvs, t1_xa, t1_xa, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,iIxa,Jixa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('I,iIxa,iJxa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,iIxa,Jixa->IJ', e_cvs, t1_vxae, t1_xvae, optimize = einsum_type)
        M_00 -= einsum('I,iIxa,iJxa->IJ', e_cvs, t1_vxae, t1_vxae, optimize = einsum_type)
        M_00 -= 1/2 * einsum('J,Ia,Ja->IJ', e_cvs, t1_xe, t1_xe, optimize = einsum_type)
        M_00 -= einsum('J,Iixa,Jixa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,Iixa,iJxa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('J,Iixy,Jixy->IJ', e_cvs, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,Iixy,Jiyx->IJ', e_cvs, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 -= einsum('J,Iixa,Jixa->IJ', e_cvs, t1_xvae, t1_xvae, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,Iixa,iJxa->IJ', e_cvs, t1_xvae, t1_vxae, optimize = einsum_type)
        M_00 -= einsum('J,Iixy,Jixy->IJ', e_cvs, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,Iixy,Jiyx->IJ', e_cvs, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('J,Ix,Jx->IJ', e_cvs, t1_xa, t1_xa, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,iIxa,Jixa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('J,iIxa,iJxa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,iIxa,Jixa->IJ', e_cvs, t1_vxae, t1_xvae, optimize = einsum_type)
        M_00 -= einsum('J,iIxa,iJxa->IJ', e_cvs, t1_vxae, t1_vxae, optimize = einsum_type)
        M_00 += einsum('a,Ia,Ja->IJ', e_extern, t1_xe, t1_xe, optimize = einsum_type)
        M_00 += 2 * einsum('a,Iixa,Jixa->IJ', e_extern, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('a,Iixa,iJxa->IJ', e_extern, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 += 2 * einsum('a,Iixa,Jixa->IJ', e_extern, t1_xvae, t1_xvae, optimize = einsum_type)
        M_00 -= einsum('a,Iixa,iJxa->IJ', e_extern, t1_xvae, t1_vxae, optimize = einsum_type)
        M_00 -= einsum('a,iIxa,Jixa->IJ', e_extern, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 += 2 * einsum('a,iIxa,iJxa->IJ', e_extern, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('a,iIxa,Jixa->IJ', e_extern, t1_vxae, t1_xvae, optimize = einsum_type)
        M_00 += 2 * einsum('a,iIxa,iJxa->IJ', e_extern, t1_vxae, t1_vxae, optimize = einsum_type)
        M_00 -= einsum('i,Iixa,Jixa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Iixa,iJxa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('i,Iixy,Jixy->IJ', e_cvs, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Iixy,Jiyx->IJ', e_cvs, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 -= einsum('i,Jixa,Iixa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Jixa,iIxa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('i,Jixy,Iixy->IJ', e_cvs, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Jixy,Iiyx->IJ', e_cvs, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,iIxa,Jixa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('i,iIxa,iJxa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,iJxa,Iixa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('i,iJxa,iIxa->IJ', e_cvs, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('i,Iixa,Jixa->IJ', e_val, t1_xvae, t1_xvae, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Iixa,iJxa->IJ', e_val, t1_xvae, t1_vxae, optimize = einsum_type)
        M_00 -= einsum('i,Iixy,Jixy->IJ', e_val, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Iixy,Jiyx->IJ', e_val, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 -= einsum('i,Jixa,Iixa->IJ', e_val, t1_xvae, t1_xvae, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Jixa,iIxa->IJ', e_val, t1_xvae, t1_vxae, optimize = einsum_type)
        M_00 -= einsum('i,Jixy,Iixy->IJ', e_val, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Jixy,Iiyx->IJ', e_val, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,iIxa,Jixa->IJ', e_val, t1_vxae, t1_xvae, optimize = einsum_type)
        M_00 -= einsum('i,iIxa,iJxa->IJ', e_val, t1_vxae, t1_vxae, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,iJxa,Iixa->IJ', e_val, t1_vxae, t1_xvae, optimize = einsum_type)
        M_00 -= einsum('i,iJxa,iIxa->IJ', e_val, t1_vxae, t1_vxae, optimize = einsum_type)
        M_00 += einsum('Ia,Jxay,xy->IJ', h_xe, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ia,Jxya,xy->IJ', h_xe, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += einsum('Ix,Jyxz,yz->IJ', h_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ix,Jyzx,yz->IJ', h_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('Ja,Ixay,xy->IJ', h_xe, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ja,Ixya,xy->IJ', h_xe, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += einsum('Jx,Iyxz,yz->IJ', h_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Jx,Iyzx,yz->IJ', h_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('xy,Iixa,Jiya->IJ', h_aa, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('xy,Iixa,iJya->IJ', h_aa, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 += 2 * einsum('xy,Iixz,Jiyz->IJ', h_aa, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 -= einsum('xy,Iixz,Jizy->IJ', h_aa, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 -= einsum('xy,Iizx,Jiyz->IJ', h_aa, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 += 2 * einsum('xy,Iizx,Jizy->IJ', h_aa, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 += 2 * einsum('xy,Iixa,Jiya->IJ', h_aa, t1_xvae, t1_xvae, optimize = einsum_type)
        M_00 -= einsum('xy,Iixa,iJya->IJ', h_aa, t1_xvae, t1_vxae, optimize = einsum_type)
        M_00 += 2 * einsum('xy,Iixz,Jiyz->IJ', h_aa, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 -= einsum('xy,Iixz,Jizy->IJ', h_aa, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 -= einsum('xy,Iizx,Jiyz->IJ', h_aa, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 += 2 * einsum('xy,Iizx,Jizy->IJ', h_aa, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 += einsum('xy,Ix,Jy->IJ', h_aa, t1_xa, t1_xa, optimize = einsum_type)
        M_00 -= einsum('xy,iIxa,Jiya->IJ', h_aa, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 += 2 * einsum('xy,iIxa,iJya->IJ', h_aa, t1_xxae, t1_xxae, optimize = einsum_type)
        M_00 -= einsum('xy,iIxa,Jiya->IJ', h_aa, t1_vxae, t1_xvae, optimize = einsum_type)
        M_00 += 2 * einsum('xy,iIxa,iJya->IJ', h_aa, t1_vxae, t1_vxae, optimize = einsum_type)
        M_00 += einsum('Ia,Jaxy,xy->IJ', t1_xe, v_xeaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ia,Jxya,yx->IJ', t1_xe, v_xaae, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('Iixa,Jyia,xy->IJ', t1_xxae, v_xaxe, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('Iixa,iyJa,xy->IJ', t1_xxae, v_xaxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('Iixy,Jxiz,yz->IJ', t1_xxaa, v_xaxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('Iixy,Jyiz,xz->IJ', t1_xxaa, v_xaxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('Iixy,Jziw,xyzw->IJ', t1_xxaa, v_xaxa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('Iixy,Jzix,yz->IJ', t1_xxaa, v_xaxa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('Iixy,Jziy,xz->IJ', t1_xxaa, v_xaxa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('Iixa,Jyia,xy->IJ', t1_xvae, v_xave, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('Iixa,iyJa,xy->IJ', t1_xvae, v_vaxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('Iixy,Jxiz,yz->IJ', t1_xvaa, v_xava, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('Iixy,Jyiz,xz->IJ', t1_xvaa, v_xava, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('Iixy,Jziw,xyzw->IJ', t1_xvaa, v_xava, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('Iixy,Jzix,yz->IJ', t1_xvaa, v_xava, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('Iixy,Jziy,xz->IJ', t1_xvaa, v_xava, rdm_ca, optimize = einsum_type)
        M_00 += einsum('Ix,Jxyz,yz->IJ', t1_xa, v_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ix,Jyzx,zy->IJ', t1_xa, v_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('Ixay,Jazw,xwyz->IJ', t1_xaea, v_xeaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('Ixay,Jazy,xz->IJ', t1_xaea, v_xeaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ixay,Jyza,xz->IJ', t1_xaea, v_xaae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ixay,Jzwa,xzyw->IJ', t1_xaea, v_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ixya,Jazw,xwyz->IJ', t1_xaae, v_xeaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ixya,Jazy,xz->IJ', t1_xaae, v_xeaa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('Ixya,Jyza,xz->IJ', t1_xaae, v_xaae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ixya,Jzwa,xzwy->IJ', t1_xaae, v_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ixyz,Jwuy,xwzu->IJ', t1_xaaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ixyz,Jwuz,xwuy->IJ', t1_xaaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('Ixyz,Jwxu,yzwu->IJ', t1_xaaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('Ixyz,Jywu,xuzw->IJ', t1_xaaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('Ixyz,Jywz,xw->IJ', t1_xaaa, v_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ixyz,Jzwu,xuyw->IJ', t1_xaaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ixyz,Jzwy,xw->IJ', t1_xaaa, v_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('Ja,Iaxy,xy->IJ', t1_xe, v_xeaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Ja,Ixya,yx->IJ', t1_xe, v_xaae, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('Jixa,Iyia,xy->IJ', t1_xxae, v_xaxe, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('Jixa,iyIa,xy->IJ', t1_xxae, v_xaxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('Jixy,Ixiz,yz->IJ', t1_xxaa, v_xaxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('Jixy,Iyiz,xz->IJ', t1_xxaa, v_xaxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('Jixy,Iziw,xyzw->IJ', t1_xxaa, v_xaxa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('Jixy,Izix,yz->IJ', t1_xxaa, v_xaxa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('Jixy,Iziy,xz->IJ', t1_xxaa, v_xaxa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('Jixa,Iyia,xy->IJ', t1_xvae, v_xave, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('Jixa,iyIa,xy->IJ', t1_xvae, v_vaxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('Jixy,Ixiz,yz->IJ', t1_xvaa, v_xava, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('Jixy,Iyiz,xz->IJ', t1_xvaa, v_xava, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('Jixy,Iziw,xyzw->IJ', t1_xvaa, v_xava, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('Jixy,Izix,yz->IJ', t1_xvaa, v_xava, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('Jixy,Iziy,xz->IJ', t1_xvaa, v_xava, rdm_ca, optimize = einsum_type)
        M_00 += einsum('Jx,Ixyz,yz->IJ', t1_xa, v_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Jx,Iyzx,zy->IJ', t1_xa, v_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('Jxay,Iazw,xwyz->IJ', t1_xaea, v_xeaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('Jxay,Iazy,xz->IJ', t1_xaea, v_xeaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Jxay,Iyza,xz->IJ', t1_xaea, v_xaae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Jxay,Izwa,xzyw->IJ', t1_xaea, v_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Jxya,Iazw,xwyz->IJ', t1_xaae, v_xeaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Jxya,Iazy,xz->IJ', t1_xaae, v_xeaa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('Jxya,Iyza,xz->IJ', t1_xaae, v_xaae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Jxya,Izwa,xzwy->IJ', t1_xaae, v_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Jxyz,Iwuy,xwzu->IJ', t1_xaaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Jxyz,Iwuz,xwuy->IJ', t1_xaaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('Jxyz,Iwxu,yzwu->IJ', t1_xaaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('Jxyz,Iywu,xuzw->IJ', t1_xaaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('Jxyz,Iywz,xw->IJ', t1_xaaa, v_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Jxyz,Izwu,xuyw->IJ', t1_xaaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('Jxyz,Izwy,xw->IJ', t1_xaaa, v_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('iIxa,Jyia,xy->IJ', t1_xxae, v_xaxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('iIxa,iyJa,xy->IJ', t1_xxae, v_xaxe, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('iJxa,Iyia,xy->IJ', t1_xxae, v_xaxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('iJxa,iyIa,xy->IJ', t1_xxae, v_xaxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ix,IJiy,xy->IJ', t1_xa, v_xxxa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ix,JIiy,xy->IJ', t1_xa, v_xxxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ix,iIJy,xy->IJ', t1_xa, v_xxxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ix,iJIy,xy->IJ', t1_xa, v_xxxa, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('ixay,IJia,xy->IJ', t1_xaea, v_xxxe, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('ixay,JIia,yx->IJ', t1_xaea, v_xxxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixay,iIJa,yx->IJ', t1_xaea, v_xxxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixay,iJIa,xy->IJ', t1_xaea, v_xxxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixya,IJia,xy->IJ', t1_xaae, v_xxxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixya,JIia,yx->IJ', t1_xaae, v_xxxe, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ixya,iIJa,yx->IJ', t1_xaae, v_xxxe, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ixya,iJIa,xy->IJ', t1_xaae, v_xxxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixyz,IJiw,xwzy->IJ', t1_xaaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        M_00 += 2 * einsum('ixyz,IJiy,xz->IJ', t1_xaaa, v_xxxa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixyz,IJiz,xy->IJ', t1_xaaa, v_xxxa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixyz,JIiw,xwzy->IJ', t1_xaaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        M_00 += 2 * einsum('ixyz,JIiy,zx->IJ', t1_xaaa, v_xxxa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixyz,JIiz,yx->IJ', t1_xaaa, v_xxxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ixyz,iIJw,xwzy->IJ', t1_xaaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('ixyz,iIJy,zx->IJ', t1_xaaa, v_xxxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ixyz,iIJz,yx->IJ', t1_xaaa, v_xxxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ixyz,iJIw,xwzy->IJ', t1_xaaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('ixyz,iJIy,xz->IJ', t1_xaaa, v_xxxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ixyz,iJIz,xy->IJ', t1_xaaa, v_xxxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('iIxa,Jyia,xy->IJ', t1_vxae, v_xave, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('iIxa,iyJa,xy->IJ', t1_vxae, v_vaxe, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('iJxa,Iyia,xy->IJ', t1_vxae, v_xave, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('iJxa,iyIa,xy->IJ', t1_vxae, v_vaxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ix,IJiy,xy->IJ', t1_va, v_xxva, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ix,JIiy,xy->IJ', t1_va, v_xxva, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ix,iIJy,xy->IJ', t1_va, v_vxxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ix,iJIy,xy->IJ', t1_va, v_vxxa, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('ixay,IJia,xy->IJ', t1_vaea, v_xxve, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('ixay,JIia,yx->IJ', t1_vaea, v_xxve, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixay,iIJa,yx->IJ', t1_vaea, v_vxxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixay,iJIa,xy->IJ', t1_vaea, v_vxxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixya,IJia,xy->IJ', t1_vaae, v_xxve, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixya,JIia,yx->IJ', t1_vaae, v_xxve, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ixya,iIJa,yx->IJ', t1_vaae, v_vxxe, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ixya,iJIa,xy->IJ', t1_vaae, v_vxxe, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixyz,IJiw,xwzy->IJ', t1_vaaa, v_xxva, rdm_ccaa, optimize = einsum_type)
        M_00 += 2 * einsum('ixyz,IJiy,xz->IJ', t1_vaaa, v_xxva, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixyz,IJiz,xy->IJ', t1_vaaa, v_xxva, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixyz,JIiw,xwzy->IJ', t1_vaaa, v_xxva, rdm_ccaa, optimize = einsum_type)
        M_00 += 2 * einsum('ixyz,JIiy,zx->IJ', t1_vaaa, v_xxva, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('ixyz,JIiz,yx->IJ', t1_vaaa, v_xxva, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ixyz,iIJw,xwzy->IJ', t1_vaaa, v_vxxa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('ixyz,iIJy,zx->IJ', t1_vaaa, v_vxxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ixyz,iIJz,yx->IJ', t1_vaaa, v_vxxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ixyz,iJIw,xwzy->IJ', t1_vaaa, v_vxxa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('ixyz,iJIy,xz->IJ', t1_vaaa, v_vxxa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('ixyz,iJIz,xy->IJ', t1_vaaa, v_vxxa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('xa,IJya,xy->IJ', t1_ae, v_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xa,IyaJ,xy->IJ', t1_ae, v_xaex, rdm_ca, optimize = einsum_type)
        M_00 += einsum('xa,JIya,xy->IJ', t1_ae, v_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xa,JyaI,xy->IJ', t1_ae, v_xaex, rdm_ca, optimize = einsum_type)
        M_00 += einsum('xyza,IJwa,zwxy->IJ', t1_aaae, v_xxae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyza,IwaJ,zwxy->IJ', t1_aaae, v_xaex, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xyza,JIwa,zwxy->IJ', t1_aaae, v_xxae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyza,JwaI,zwxy->IJ', t1_aaae, v_xaex, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixz,Jiwy->IJ', v_aaaa, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 += 2 * einsum('xyzw,Iixz,Jiyw->IJ', v_aaaa, t1_xxaa, t1_xxaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixz,Jiwy->IJ', v_aaaa, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 += 2 * einsum('xyzw,Iixz,Jiyw->IJ', v_aaaa, t1_xvaa, t1_xvaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('I,Ia,Jxay,xy->IJ', e_cvs, t1_xe, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ia,Jxya,xy->IJ', e_cvs, t1_xe, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,Iixa,Jiya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('I,Iixa,iJya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,Iixy,Jixz,yz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('I,Iixy,Jiyz,xz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('I,Iixy,Jizw,xyzw->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('I,Iixy,Jizx,yz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,Iixy,Jizy,xz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,Iixa,Jiya,xy->IJ', e_cvs, t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('I,Iixa,iJya,xy->IJ', e_cvs, t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,Iixy,Jixz,yz->IJ', e_cvs, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('I,Iixy,Jiyz,xz->IJ', e_cvs, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('I,Iixy,Jizw,xyzw->IJ', e_cvs, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('I,Iixy,Jizx,yz->IJ', e_cvs, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,Iixy,Jizy,xz->IJ', e_cvs, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('I,Ix,Jyxz,yz->IJ', e_cvs, t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ix,Jyzx,yz->IJ', e_cvs, t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('I,Ixay,Ja,xy->IJ', e_cvs, t1_xaea, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('I,Ixay,Jzaw,xwyz->IJ', e_cvs, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('I,Ixay,Jzay,xz->IJ', e_cvs, t1_xaea, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ixay,Jzwa,xwyz->IJ', e_cvs, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ixay,Jzya,xz->IJ', e_cvs, t1_xaea, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ixya,Ja,xy->IJ', e_cvs, t1_xaae, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ixya,Jzaw,xwyz->IJ', e_cvs, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ixya,Jzay,xz->IJ', e_cvs, t1_xaae, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ixya,Jzwa,xwzy->IJ', e_cvs, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('I,Ixya,Jzya,xz->IJ', e_cvs, t1_xaae, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ixyz,Jwuy,xuzw->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ixyz,Jwuz,xuwy->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('I,Ixyz,Jwyu,xuzw->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('I,Ixyz,Jwyz,xw->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ixyz,Jwzu,xuyw->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ixyz,Jwzy,xw->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('I,Ixyz,Jxwu,yzwu->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('I,Ixyz,Jy,xz->IJ', e_cvs, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('I,Ixyz,Jz,xy->IJ', e_cvs, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('I,iIxa,Jiya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,iIxa,iJya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('I,iIxa,Jiya,xy->IJ', e_cvs, t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('I,iIxa,iJya,xy->IJ', e_cvs, t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('J,Ia,Jxay,xy->IJ', e_cvs, t1_xe, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ia,Jxya,xy->IJ', e_cvs, t1_xe, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,Iixa,Jiya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('J,Iixa,iJya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,Iixy,Jixz,yz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('J,Iixy,Jiyz,xz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('J,Iixy,Jizw,xyzw->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('J,Iixy,Jizx,yz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,Iixy,Jizy,xz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,Iixa,Jiya,xy->IJ', e_cvs, t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('J,Iixa,iJya,xy->IJ', e_cvs, t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,Iixy,Jixz,yz->IJ', e_cvs, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('J,Iixy,Jiyz,xz->IJ', e_cvs, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('J,Iixy,Jizw,xyzw->IJ', e_cvs, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('J,Iixy,Jizx,yz->IJ', e_cvs, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,Iixy,Jizy,xz->IJ', e_cvs, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('J,Ix,Jyxz,yz->IJ', e_cvs, t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ix,Jyzx,yz->IJ', e_cvs, t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('J,Ixay,Ja,xy->IJ', e_cvs, t1_xaea, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('J,Ixay,Jzaw,xwyz->IJ', e_cvs, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('J,Ixay,Jzay,xz->IJ', e_cvs, t1_xaea, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ixay,Jzwa,xwyz->IJ', e_cvs, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ixay,Jzya,xz->IJ', e_cvs, t1_xaea, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ixya,Ja,xy->IJ', e_cvs, t1_xaae, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ixya,Jzaw,xwyz->IJ', e_cvs, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ixya,Jzay,xz->IJ', e_cvs, t1_xaae, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ixya,Jzwa,xwzy->IJ', e_cvs, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('J,Ixya,Jzya,xz->IJ', e_cvs, t1_xaae, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ixyz,Jwuy,xuzw->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ixyz,Jwuz,xuwy->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('J,Ixyz,Jwyu,xuzw->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('J,Ixyz,Jwyz,xw->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ixyz,Jwzu,xuyw->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ixyz,Jwzy,xw->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('J,Ixyz,Jxwu,yzwu->IJ', e_cvs, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('J,Ixyz,Jy,xz->IJ', e_cvs, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('J,Ixyz,Jz,xy->IJ', e_cvs, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('J,iIxa,Jiya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,iIxa,iJya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('J,iIxa,Jiya,xy->IJ', e_cvs, t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('J,iIxa,iJya,xy->IJ', e_cvs, t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += einsum('a,Ia,Jxay,xy->IJ', e_extern, t1_xe, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('a,Ia,Jxya,xy->IJ', e_extern, t1_xe, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('a,Iixa,Jiya,xy->IJ', e_extern, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('a,Iixa,iJya,xy->IJ', e_extern, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('a,Iixa,Jiya,xy->IJ', e_extern, t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('a,Iixa,iJya,xy->IJ', e_extern, t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += einsum('a,Ixay,Ja,xy->IJ', e_extern, t1_xaea, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 += einsum('a,Ixay,Jzaw,xwyz->IJ', e_extern, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('a,Ixay,Jzay,xz->IJ', e_extern, t1_xaea, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('a,Ixay,Jzwa,xwyz->IJ', e_extern, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('a,Ixay,Jzya,xz->IJ', e_extern, t1_xaea, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('a,Ixya,Ja,xy->IJ', e_extern, t1_xaae, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('a,Ixya,Jzaw,xwyz->IJ', e_extern, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('a,Ixya,Jzay,xz->IJ', e_extern, t1_xaae, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('a,Ixya,Jzwa,xwzy->IJ', e_extern, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('a,Ixya,Jzya,xz->IJ', e_extern, t1_xaae, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('a,iIxa,Jiya,xy->IJ', e_extern, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('a,iIxa,iJya,xy->IJ', e_extern, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('a,iIxa,Jiya,xy->IJ', e_extern, t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('a,iIxa,iJya,xy->IJ', e_extern, t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Iixa,Jiya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,Iixa,iJya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Iixy,Jixz,yz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,Iixy,Jiyz,xz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,Iixy,Jizx,yz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Iixy,Jizy,xz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Jixa,Iiya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,Jixa,iIya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Jixy,Iixz,yz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,Jixy,Iiyz,xz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('i,Jixy,Iizw,xyzw->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,Jixy,Iizx,yz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Jixy,Iizy,xz->IJ', e_cvs, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,iIxa,Jiya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,iIxa,iJya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,iJxa,Iiya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,iJxa,iIya,xy->IJ', e_cvs, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Iixa,Jiya,xy->IJ', e_val, t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,Iixa,iJya,xy->IJ', e_val, t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Iixy,Jixz,yz->IJ', e_val, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,Iixy,Jiyz,xz->IJ', e_val, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,Iixy,Jizx,yz->IJ', e_val, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Iixy,Jizy,xz->IJ', e_val, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Jixa,Iiya,xy->IJ', e_val, t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,Jixa,iIya,xy->IJ', e_val, t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Jixy,Iixz,yz->IJ', e_val, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,Jixy,Iiyz,xz->IJ', e_val, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('i,Jixy,Iizw,xyzw->IJ', e_val, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,Jixy,Iizx,yz->IJ', e_val, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,Jixy,Iizy,xz->IJ', e_val, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,iIxa,Jiya,xy->IJ', e_val, t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,iIxa,iJya,xy->IJ', e_val, t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('i,iJxa,Iiya,xy->IJ', e_val, t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('i,iJxa,iIya,xy->IJ', e_val, t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Iixa,Jiza,yz->IJ', h_aa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Iixa,iJza,yz->IJ', h_aa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Iixz,Jiwu,yzwu->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xy,Iixz,Jiwy,zw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Iixz,Jiwz,yw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xy,Iixz,Jiyw,zw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Iixz,Jizw,yw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Iizx,Jiwu,yzuw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xy,Iizx,Jiwy,zw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Iizx,Jiwz,yw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xy,Iizx,Jiyw,zw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Iizx,Jizw,yw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Iixa,Jiza,yz->IJ', h_aa, t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Iixa,iJza,yz->IJ', h_aa, t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Iixz,Jiwu,yzwu->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xy,Iixz,Jiwy,zw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Iixz,Jiwz,yw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xy,Iixz,Jiyw,zw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Iixz,Jizw,yw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Iizx,Jiwu,yzuw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xy,Iizx,Jiwy,zw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Iizx,Jiwz,yw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xy,Iizx,Jiyw,zw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Iizx,Jizw,yw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Ix,Jzwy,zw->IJ', h_aa, t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('xy,Ix,Jzyw,zw->IJ', h_aa, t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Ixaz,Ja,yz->IJ', h_aa, t1_xaea, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Ixaz,Jwau,yuzw->IJ', h_aa, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Ixaz,Jwaz,yw->IJ', h_aa, t1_xaea, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Ixaz,Jwua,yuzw->IJ', h_aa, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Ixaz,Jwza,yw->IJ', h_aa, t1_xaea, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Ixza,Ja,yz->IJ', h_aa, t1_xaae, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Ixza,Jwau,yuzw->IJ', h_aa, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Ixza,Jwaz,yw->IJ', h_aa, t1_xaae, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Ixza,Jwua,yuwz->IJ', h_aa, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Ixza,Jwza,yw->IJ', h_aa, t1_xaae, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Ixzw,Juvw,yvuz->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Ixzw,Juvz,yvwu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Ixzw,Juwv,yvzu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Ixzw,Juwz,yu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Ixzw,Juzv,yvwu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Ixzw,Juzw,yu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Ixzw,Jw,yz->IJ', h_aa, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Ixzw,Jyuv,zwuv->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Ixzw,Jz,yw->IJ', h_aa, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xy,Izax,Ja,yz->IJ', h_aa, t1_xaea, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xy,Izax,Jwau,ywzu->IJ', h_aa, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xy,Izax,Jway,zw->IJ', h_aa, t1_xaea, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Izax,Jwua,ywzu->IJ', h_aa, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Izax,Jwya,zw->IJ', h_aa, t1_xaea, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Izwx,Juvw,yuzv->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Izwx,Juvy,zvuw->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xy,Izwx,Juwv,yuzv->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xy,Izwx,Juwy,zu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Izwx,Juyv,zvwu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Izwx,Juyw,zu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xy,Izwx,Jw,yz->IJ', h_aa, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Izwx,Jy,zw->IJ', h_aa, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Izwx,Jzuv,ywvu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Izxa,Ja,yz->IJ', h_aa, t1_xaae, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Izxa,Jwau,ywzu->IJ', h_aa, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Izxa,Jway,zw->IJ', h_aa, t1_xaae, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Izxa,Jwua,ywuz->IJ', h_aa, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xy,Izxa,Jwya,zw->IJ', h_aa, t1_xaae, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Izxw,Juvw,yuvz->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Izxw,Juvy,zvwu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Izxw,Juwv,yuzv->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Izxw,Juwy,zu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('xy,Izxw,Juyv,zvwu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xy,Izxw,Juyw,zu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Izxw,Jw,yz->IJ', h_aa, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('xy,Izxw,Jy,zw->IJ', h_aa, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Izxw,Jzuv,ywuv->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jixa,Iiza,yz->IJ', h_aa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jixa,iIza,yz->IJ', h_aa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jixz,Iiwu,yzwu->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jixz,Iiwz,yw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jixz,Iizw,yw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jizx,Iiwu,yzuw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jizx,Iiwz,yw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jizx,Iizw,yw->IJ', h_aa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jixa,Iiza,yz->IJ', h_aa, t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jixa,iIza,yz->IJ', h_aa, t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jixz,Iiwu,yzwu->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jixz,Iiwz,yw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jixz,Iizw,yw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jizx,Iiwu,yzuw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jizx,Iiwz,yw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jizx,Iizw,yw->IJ', h_aa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jxaz,Ia,yz->IJ', h_aa, t1_xaea, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jxaz,Iwau,yuzw->IJ', h_aa, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jxaz,Iwaz,yw->IJ', h_aa, t1_xaea, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jxaz,Iwua,yuzw->IJ', h_aa, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jxaz,Iwza,yw->IJ', h_aa, t1_xaea, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jxza,Ia,yz->IJ', h_aa, t1_xaae, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jxza,Iwau,yuzw->IJ', h_aa, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jxza,Iwaz,yw->IJ', h_aa, t1_xaae, t1_xaea, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jxza,Iwua,yuwz->IJ', h_aa, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jxza,Iwza,yw->IJ', h_aa, t1_xaae, t1_xaae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jxzw,Iuvw,yvuz->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jxzw,Iuvz,yvwu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jxzw,Iuwv,yvzu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jxzw,Iuwz,yu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jxzw,Iuzv,yvwu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jxzw,Iuzw,yu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jxzw,Iw,yz->IJ', h_aa, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,Jxzw,Iz,yw->IJ', h_aa, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xy,Jzax,Ia,yz->IJ', h_aa, t1_xaea, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xy,Jzax,Iwau,ywzu->IJ', h_aa, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Jzax,Iwua,ywzu->IJ', h_aa, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Jzwx,Iuvw,yuzv->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xy,Jzwx,Iuwv,yuzv->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xy,Jzwx,Iw,yz->IJ', h_aa, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jzwx,Izuv,ywvu->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Jzxa,Ia,yz->IJ', h_aa, t1_xaae, t1_xe, rdm_ca, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Jzxa,Iwau,ywzu->IJ', h_aa, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Jzxa,Iwua,ywuz->IJ', h_aa, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Jzxw,Iuvw,yuvz->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Jzxw,Iuwv,yuzv->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xy,Jzxw,Iw,yz->IJ', h_aa, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,Jzxw,Izuv,ywuv->IJ', h_aa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,iIxa,Jiza,yz->IJ', h_aa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,iIxa,iJza,yz->IJ', h_aa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,iJxa,Iiza,yz->IJ', h_aa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,iJxa,iIza,yz->IJ', h_aa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,iIxa,Jiza,yz->IJ', h_aa, t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,iIxa,iJza,yz->IJ', h_aa, t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xy,iJxa,Iiza,yz->IJ', h_aa, t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xy,iJxa,iIza,yz->IJ', h_aa, t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iiux,Jiuv,zvwy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iiux,Jiuw,zy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('xyzw,Iiux,Jiuy,zw->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iiux,Jivs,zvswuy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iiux,Jivu,zvwy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iiux,Jivw,zvyu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iiux,Jivy,zvwu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iiux,Jiwu,zy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iiux,Jiwv,zvuy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iiux,Jiwy,zu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iiux,Jiyu,zw->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iiux,Jiyv,zvwu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iiux,Jiyw,zu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iixa,Jiua,zuwy->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixa,Jiwa,zy->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('xyzw,Iixa,Jiya,zw->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iixa,iJua,zuwy->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixa,iJwa,zy->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixa,iJya,zw->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iixu,Jiuv,zvwy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixu,Jiuw,zy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixu,Jiuy,zw->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iixu,Jivs,zvsuwy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iixu,Jivs,zvsuyw->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iixu,Jivs,zvswuy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iixu,Jivs,zvswyu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iixu,Jivs,zvsyuw->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iixu,Jivs,zvsywu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iixu,Jivu,zvwy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixu,Jivw,zvuy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixu,Jivy,zvwu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixu,Jiwu,zy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixu,Jiwv,zvyu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixu,Jiwy,zu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('xyzw,Iixu,Jiyu,zw->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixu,Jiyv,zvwu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixu,Jiyw,zu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iixz,Jiuv,ywuv->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixz,Jiuw,yu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixz,Jiuy,wu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixz,Jiwu,yu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixz,Jiyu,wu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iiux,Jiuv,zvwy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iiux,Jiuw,zy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('xyzw,Iiux,Jiuy,zw->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iiux,Jivs,zvswuy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iiux,Jivu,zvwy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iiux,Jivw,zvyu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iiux,Jivy,zvwu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iiux,Jiwu,zy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iiux,Jiwv,zvuy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iiux,Jiwy,zu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iiux,Jiyu,zw->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iiux,Jiyv,zvwu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iiux,Jiyw,zu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iixa,Jiua,zuwy->IJ', v_aaaa, t1_xvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixa,Jiwa,zy->IJ', v_aaaa, t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('xyzw,Iixa,Jiya,zw->IJ', v_aaaa, t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iixa,iJua,zuwy->IJ', v_aaaa, t1_xvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixa,iJwa,zy->IJ', v_aaaa, t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixa,iJya,zw->IJ', v_aaaa, t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iixu,Jiuv,zvwy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixu,Jiuw,zy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixu,Jiuy,zw->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iixu,Jivs,zvsuwy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iixu,Jivs,zvsuyw->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iixu,Jivs,zvswuy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iixu,Jivs,zvswyu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iixu,Jivs,zvsyuw->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iixu,Jivs,zvsywu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iixu,Jivu,zvwy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixu,Jivw,zvuy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixu,Jivy,zvwu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixu,Jiwu,zy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixu,Jiwv,zvyu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixu,Jiwy,zu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('xyzw,Iixu,Jiyu,zw->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixu,Jiyv,zvwu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixu,Jiyw,zu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iixz,Jiuv,ywuv->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixz,Jiuw,yu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixz,Jiuy,wu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iixz,Jiwu,yu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xyzw,Iixz,Jiyu,wu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iuax,Ja,zuwy->IJ', v_aaaa, t1_xaea, t1_xe, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuax,Jvas,zusvwy->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuax,Jvas,zusvyw->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuax,Jvas,zuswvy->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/3 * einsum('xyzw,Iuax,Jvas,zuswyv->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuax,Jvas,zusyvw->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuax,Jvas,zusywv->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += einsum('xyzw,Iuax,Jvaw,zuvy->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xyzw,Iuax,Jvay,zuwv->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuax,Jvsa,zusvwy->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuax,Jvsa,zusvyw->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuax,Jvsa,zuswvy->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuax,Jvsa,zuswyv->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuax,Jvsa,zusyvw->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuax,Jvsa,zusywv->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuax,Jvwa,zuvy->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuax,Jvya,zuwv->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuax,Jzav,ywuv->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iuax,Jzva,ywuv->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuvx,Jstv,zutswy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuvx,Jstv,zutsyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuvx,Jstv,zutwsy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuvx,Jstv,zutwys->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuvx,Jstv,zutysw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuvx,Jstv,zutyws->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuvx,Jstw,zutsyv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuvx,Jsty,zutsvw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuvx,Jsty,zutswv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuvx,Jsty,zutvsw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuvx,Jsty,zutvws->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/3 * einsum('xyzw,Iuvx,Jsty,zutwsv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuvx,Jsty,zutwvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuvx,Jsvt,zutswy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuvx,Jsvt,zutsyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuvx,Jsvt,zutwsy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/3 * einsum('xyzw,Iuvx,Jsvt,zutwys->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuvx,Jsvt,zutysw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuvx,Jsvt,zutyws->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += einsum('xyzw,Iuvx,Jsvw,zusy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xyzw,Iuvx,Jsvy,zuws->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuvx,Jswt,zutsvy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuvx,Jswt,zutsyv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuvx,Jswt,zutvsy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/3 * einsum('xyzw,Iuvx,Jswt,zutvys->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuvx,Jswt,zutysv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuvx,Jswt,zutyvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuvx,Jswv,zusy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuvx,Jswy,zuvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuvx,Jsyt,zutwvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuvx,Jsyv,zuws->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuvx,Jsyw,zusv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iuvx,Just,zstwvy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iuvx,Jv,zuwy->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuvx,Jw,zuvy->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuvx,Jy,zuwv->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuvx,Jzst,ywvstu->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuvx,Jzst,ywvsut->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuvx,Jzst,ywvtsu->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuvx,Jzst,ywvtus->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuvx,Jzst,ywvust->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/3 * einsum('xyzw,Iuvx,Jzst,ywvuts->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iuvx,Jzsv,ywus->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuvx,Jzvs,ywus->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xyzw,Iuxa,Ja,zuwy->IJ', v_aaaa, t1_xaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuxa,Jvas,zusvwy->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuxa,Jvas,zusvyw->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuxa,Jvas,zuswvy->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuxa,Jvas,zuswyv->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuxa,Jvas,zusyvw->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuxa,Jvas,zusywv->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxa,Jvaw,zuvy->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxa,Jvay,zuwv->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xyzw,Iuxa,Jvsa,zuswvy->IJ', v_aaaa, t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxa,Jvwa,zuyv->IJ', v_aaaa, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xyzw,Iuxa,Jvya,zuwv->IJ', v_aaaa, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iuxa,Jzav,ywuv->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iuxa,Jzva,ywvu->IJ', v_aaaa, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xyzw,Iuxv,Jstv,zutwsy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/3 * einsum('xyzw,Iuxv,Jstw,zutsvy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuxv,Jstw,zutsyv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuxv,Jstw,zutvsy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuxv,Jstw,zutvys->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuxv,Jstw,zutysv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuxv,Jstw,zutyvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxv,Jsty,zutwvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuxv,Jsvt,zutswy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuxv,Jsvt,zutsyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuxv,Jsvt,zutwsy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Iuxv,Jsvt,zutwys->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuxv,Jsvt,zutysw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Iuxv,Jsvt,zutyws->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxv,Jsvw,zusy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxv,Jsvy,zuws->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxv,Jswt,zutyvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxv,Jswv,zuys->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxv,Jswy,zusv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xyzw,Iuxv,Jsyt,zutwvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += einsum('xyzw,Iuxv,Jsyv,zuws->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xyzw,Iuxv,Jsyw,zusv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iuxv,Just,zstvwy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iuxv,Just,zstvyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iuxv,Just,zstwvy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Iuxv,Just,zstwyv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iuxv,Just,zstyvw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Iuxv,Just,zstywv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xyzw,Iuxv,Jv,zuwy->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxv,Jw,zuyv->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xyzw,Iuxv,Jy,zuwv->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Iuxv,Jzst,ywvstu->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iuxv,Jzsv,ywsu->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iuxv,Jzvs,ywus->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Iuxz,Juvs,ywvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxz,Jvsw,yvsu->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxz,Jvsy,wvus->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxz,Jvws,yvus->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxz,Jvwy,uv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('xyzw,Iuxz,Jvys,wvus->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xyzw,Iuxz,Jvyw,uv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Iuxz,Jw,yu->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('xyzw,Iuxz,Jy,wu->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ix,Juvw,zvuy->IJ', v_aaaa, t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ix,Juvy,zvwu->IJ', v_aaaa, t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ix,Juwv,zvyu->IJ', v_aaaa, t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ix,Juwy,zu->IJ', v_aaaa, t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('xyzw,Ix,Juyv,zvwu->IJ', v_aaaa, t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += einsum('xyzw,Ix,Juyw,zu->IJ', v_aaaa, t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ix,Jw,zy->IJ', v_aaaa, t1_xa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 += einsum('xyzw,Ix,Jy,zw->IJ', v_aaaa, t1_xa, t1_xa, rdm_ca, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Ix,Jzuv,ywuv->IJ', v_aaaa, t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ixau,Ja,zuwy->IJ', v_aaaa, t1_xaea, t1_xe, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixau,Jvas,zuvswy->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixau,Jvas,zuvsyw->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixau,Jvas,zuvwsy->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/3 * einsum('xyzw,Ixau,Jvas,zuvwys->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixau,Jvas,zuvysw->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixau,Jvas,zuvyws->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ixau,Jvau,zvwy->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ixau,Jvaz,ywuv->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixau,Jvsa,zuvswy->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixau,Jvsa,zuvsyw->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixau,Jvsa,zuvwsy->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixau,Jvsa,zuvwys->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixau,Jvsa,zuvysw->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixau,Jvsa,zuvyws->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixau,Jvua,zvwy->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixau,Jvza,ywuv->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixua,Ja,zuwy->IJ', v_aaaa, t1_xaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixua,Jvas,zuvswy->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixua,Jvas,zuvsyw->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixua,Jvas,zuvwsy->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixua,Jvas,zuvwys->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixua,Jvas,zuvysw->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixua,Jvas,zuvyws->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixua,Jvau,zvwy->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixua,Jvaz,ywuv->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixua,Jvsa,zuvwsy->IJ', v_aaaa, t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ixua,Jvua,zvwy->IJ', v_aaaa, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixua,Jvza,ywvu->IJ', v_aaaa, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixuv,Jstu,zvstwy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixuv,Jstu,zvstyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixuv,Jstu,zvswty->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixuv,Jstu,zvswyt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixuv,Jstu,zvsytw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixuv,Jstu,zvsywt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixuv,Jstv,zuswty->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Ixuv,Jstz,ywtvsu->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixuv,Jsut,zvstwy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixuv,Jsut,zvstyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixuv,Jsut,zvswty->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/3 * einsum('xyzw,Ixuv,Jsut,zvswyt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixuv,Jsut,zvsytw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixuv,Jsut,zvsywt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ixuv,Jsuv,zswy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ixuv,Jsuz,ywvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixuv,Jsvt,zustwy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixuv,Jsvt,zustyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixuv,Jsvt,zuswty->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixuv,Jsvt,zuswyt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixuv,Jsvt,zusytw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Ixuv,Jsvt,zusywt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixuv,Jsvu,zswy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixuv,Jsvz,ywus->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Ixuv,Jszt,ywtsuv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Ixuv,Jszt,ywtsvu->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Ixuv,Jszt,ywtusv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Ixuv,Jszt,ywtuvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Ixuv,Jszt,ywtvsu->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/3 * einsum('xyzw,Ixuv,Jszt,ywtvus->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixuv,Jszu,ywvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixuv,Jszv,ywsu->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ixuv,Ju,zvwy->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Ixuv,Jv,zuwy->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixuv,Jwst,zuvsty->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixuv,Jwst,zuvsyt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/3 * einsum('xyzw,Ixuv,Jwst,zuvtsy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixuv,Jwst,zuvtys->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixuv,Jwst,zuvyst->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Ixuv,Jwst,zuvyts->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Ixuv,Jyst,zuvwst->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Ixuv,Jz,ywvu->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Jiux,Iiuv,zvwy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jiux,Iivs,zvswuy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jiux,Iivu,zvwy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Jixa,Iiua,zuwy->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jixa,iIua,zuwy->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jixu,Iiuv,zvwy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jixu,Iivs,zvsuwy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jixu,Iivs,zvsuyw->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jixu,Iivs,zvswuy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jixu,Iivs,zvswyu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jixu,Iivs,zvsyuw->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jixu,Iivs,zvsywu->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Jixu,Iivu,zvwy->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jixz,Iiuv,ywuv->IJ', v_aaaa, t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Jiux,Iiuv,zvwy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jiux,Iivs,zvswuy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jiux,Iivu,zvwy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Jixa,Iiua,zuwy->IJ', v_aaaa, t1_xvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jixa,iIua,zuwy->IJ', v_aaaa, t1_xvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jixu,Iiuv,zvwy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jixu,Iivs,zvsuwy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jixu,Iivs,zvsuyw->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jixu,Iivs,zvswuy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jixu,Iivs,zvswyu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jixu,Iivs,zvsyuw->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jixu,Iivs,zvsywu->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Jixu,Iivu,zvwy->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jixz,Iiuv,ywuv->IJ', v_aaaa, t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Juax,Ia,zuwy->IJ', v_aaaa, t1_xaea, t1_xe, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juax,Ivas,zusvwy->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juax,Ivas,zusvyw->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juax,Ivas,zuswvy->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/3 * einsum('xyzw,Juax,Ivas,zuswyv->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juax,Ivas,zusyvw->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juax,Ivas,zusywv->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juax,Ivsa,zusvwy->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juax,Ivsa,zusvyw->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juax,Ivsa,zuswvy->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juax,Ivsa,zuswyv->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juax,Ivsa,zusyvw->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juax,Ivsa,zusywv->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juvx,Istv,zutswy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juvx,Istv,zutsyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juvx,Istv,zutwsy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juvx,Istv,zutwys->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juvx,Istv,zutysw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juvx,Istv,zutyws->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juvx,Isvt,zutswy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juvx,Isvt,zutsyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juvx,Isvt,zutwsy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/3 * einsum('xyzw,Juvx,Isvt,zutwys->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juvx,Isvt,zutysw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juvx,Isvt,zutyws->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Juvx,Iust,zstwvy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,Juvx,Iv,zuwy->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xyzw,Juxa,Ia,zuwy->IJ', v_aaaa, t1_xaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juxa,Ivas,zusvwy->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juxa,Ivas,zusvyw->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juxa,Ivas,zuswvy->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juxa,Ivas,zuswyv->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juxa,Ivas,zusyvw->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juxa,Ivas,zusywv->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xyzw,Juxa,Ivsa,zuswvy->IJ', v_aaaa, t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xyzw,Juxv,Istv,zutwsy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juxv,Isvt,zutswy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juxv,Isvt,zutsyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juxv,Isvt,zutwsy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/6 * einsum('xyzw,Juxv,Isvt,zutwys->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juxv,Isvt,zutysw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/12 * einsum('xyzw,Juxv,Isvt,zutyws->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Juxv,Iust,zstvwy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Juxv,Iust,zstvyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Juxv,Iust,zstwvy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Juxv,Iust,zstwyv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Juxv,Iust,zstyvw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Juxv,Iust,zstywv->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/4 * einsum('xyzw,Juxv,Iv,zuwy->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Juxz,Iuvs,ywvs->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Jxau,Ia,zuwy->IJ', v_aaaa, t1_xaea, t1_xe, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxau,Ivas,zuvswy->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxau,Ivas,zuvsyw->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxau,Ivas,zuvwsy->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/3 * einsum('xyzw,Jxau,Ivas,zuvwys->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxau,Ivas,zuvysw->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxau,Ivas,zuvyws->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Jxau,Ivau,zvwy->IJ', v_aaaa, t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxau,Ivsa,zuvswy->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxau,Ivsa,zuvsyw->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxau,Ivsa,zuvwsy->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxau,Ivsa,zuvwys->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxau,Ivsa,zuvysw->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxau,Ivsa,zuvyws->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jxau,Ivua,zvwy->IJ', v_aaaa, t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jxua,Ia,zuwy->IJ', v_aaaa, t1_xaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxua,Ivas,zuvswy->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxua,Ivas,zuvsyw->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxua,Ivas,zuvwsy->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxua,Ivas,zuvwys->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxua,Ivas,zuvysw->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxua,Ivas,zuvyws->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jxua,Ivau,zvwy->IJ', v_aaaa, t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jxua,Ivsa,zuvwsy->IJ', v_aaaa, t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Jxua,Ivua,zvwy->IJ', v_aaaa, t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxuv,Istu,zvstwy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxuv,Istu,zvstyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxuv,Istu,zvswty->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxuv,Istu,zvswyt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxuv,Istu,zvsytw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxuv,Istu,zvsywt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jxuv,Istv,zuswty->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxuv,Isut,zvstwy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxuv,Isut,zvstyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxuv,Isut,zvswty->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/3 * einsum('xyzw,Jxuv,Isut,zvswyt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxuv,Isut,zvsytw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxuv,Isut,zvsywt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Jxuv,Isuv,zswy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxuv,Isvt,zustwy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxuv,Isvt,zustyw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxuv,Isvt,zuswty->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/6 * einsum('xyzw,Jxuv,Isvt,zuswyt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxuv,Isvt,zusytw->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 -= 1/12 * einsum('xyzw,Jxuv,Isvt,zusywt->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jxuv,Isvu,zswy->IJ', v_aaaa, t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,Jxuv,Iu,zvwy->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,Jxuv,Iv,zuwy->IJ', v_aaaa, t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,iIxa,Jiua,zuwy->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,iIxa,Jiwa,zy->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xyzw,iIxa,Jiya,zw->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,iIxa,iJua,zuwy->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,iIxa,iJwa,zy->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('xyzw,iIxa,iJya,zw->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,iJxa,Iiua,zuwy->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,iJxa,iIua,zuwy->IJ', v_aaaa, t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,iIxa,Jiua,zuwy->IJ', v_aaaa, t1_vxae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        M_00 += 1/2 * einsum('xyzw,iIxa,Jiwa,zy->IJ', v_aaaa, t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 -= einsum('xyzw,iIxa,Jiya,zw->IJ', v_aaaa, t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,iIxa,iJua,zuwy->IJ', v_aaaa, t1_vxae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        M_00 -= einsum('xyzw,iIxa,iJwa,zy->IJ', v_aaaa, t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += 2 * einsum('xyzw,iIxa,iJya,zw->IJ', v_aaaa, t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        M_00 += 1/4 * einsum('xyzw,iJxa,Iiua,zuwy->IJ', v_aaaa, t1_vxae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        M_00 -= 1/2 * einsum('xyzw,iJxa,iIua,zuwy->IJ', v_aaaa, t1_vxae, t1_vxae, rdm_ccaa, optimize = einsum_type)

        if ncvs > 0 and nextern > 0:
            chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 3)
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Molecular Orbitals Energies
                e_extern = mr_adc.mo_energy.e[s_chunk:f_chunk]

                ## Amplitudes
                t1_xxee_ab = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
                t1_xxee_ba = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

                M_00 += 1/2 * einsum('i,Iiab,Jiba->IJ', e_cvs, t1_xxee_ab, t1_xxee_ba, optimize = einsum_type)
                M_00 += 1/2 * einsum('i,Jiab,Iiba->IJ', e_cvs, t1_xxee_ab, t1_xxee_ba, optimize = einsum_type)
                M_00 += 1/2 * einsum('I,Iiab,Jiba->IJ', e_cvs, t1_xxee_ab, t1_xxee_ba, optimize = einsum_type)
                M_00 += 1/2 * einsum('J,Iiab,Jiba->IJ', e_cvs, t1_xxee_ab, t1_xxee_ba, optimize = einsum_type)
                M_00 -= einsum('a,Iiab,Jiba->IJ', e_extern, t1_xxee_ab, t1_xxee_ba, optimize = einsum_type)
                M_00 -= einsum('a,Iiba,Jiab->IJ', e_extern, t1_xxee_ba, t1_xxee_ab, optimize = einsum_type)
                mr_adc.log.timer_debug("contracting t1.xxee", *cput1)
                del(t1_xxee_ab, t1_xxee_ba)

        if ncvs > 0 and nextern > 0 and nval > 0:
            chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 3)
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("t1.xvee v2e.xeve [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Molecular Orbitals Energies
                e_extern = mr_adc.mo_energy.e[s_chunk:f_chunk]

                ## Two-electron integrals
                v_xeve = mr_adc.v2e.xeve[:,s_chunk:f_chunk]

                ## Amplitudes
                t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

                M_00 -= einsum('I,Iiab,Jiab->IJ', e_cvs, t1_xvee, t1_xvee, optimize = einsum_type)
                M_00 -= einsum('J,Iiab,Jiab->IJ', e_cvs, t1_xvee, t1_xvee, optimize = einsum_type)
                M_00 += 2 * einsum('a,Iiab,Jiab->IJ', e_extern, t1_xvee, t1_xvee, optimize = einsum_type)
                M_00 -= einsum('i,Iiab,Jiab->IJ', e_val, t1_xvee, t1_xvee, optimize = einsum_type)
                M_00 -= einsum('i,Jiab,Iiab->IJ', e_val, t1_xvee, t1_xvee, optimize = einsum_type)
                M_00 += 2 * einsum('Iiab,Jaib->IJ', t1_xvee, v_xeve, optimize = einsum_type)
                M_00 += 2 * einsum('Jiab,Iaib->IJ', t1_xvee, v_xeve, optimize = einsum_type)

                ## Molecular Orbitals Energies
                e_extern = mr_adc.mo_energy.e

                M_00 += 2 * einsum('a,Iiba,Jiba->IJ', e_extern, t1_xvee, t1_xvee, optimize = einsum_type)

                ## Two-electron integrals
                v_xeve = mr_adc.v2e.xeve[:,:,:,s_chunk:f_chunk]

                M_00 -= einsum('Iiab,Jbia->IJ', t1_xvee, v_xeve, optimize = einsum_type)
                M_00 -= einsum('Jiab,Ibia->IJ', t1_xvee, v_xeve, optimize = einsum_type)
                mr_adc.log.timer_debug("contracting t1.xvee v2e.xeve", *cput1)
                del(t1_xvee, v_xeve)

        if ncvs > 0 and nextern > 0 and nval > 0:
            chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 3)
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Molecular Orbitals Energies
                e_extern = mr_adc.mo_energy.e[s_chunk:f_chunk]

                ## Amplitudes
                t1_xvee_ab = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]
                t1_xvee_ba = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

                M_00 += 1/2 * einsum('I,Iiab,Jiba->IJ', e_cvs, t1_xvee_ab, t1_xvee_ba, optimize = einsum_type)
                M_00 += 1/2 * einsum('J,Iiab,Jiba->IJ', e_cvs, t1_xvee_ab, t1_xvee_ba, optimize = einsum_type)
                M_00 -= einsum('a,Iiab,Jiba->IJ', e_extern, t1_xvee_ab, t1_xvee_ba, optimize = einsum_type)
                M_00 -= einsum('a,Iiba,Jiab->IJ', e_extern, t1_xvee_ba, t1_xvee_ab, optimize = einsum_type)
                M_00 += 1/2 * einsum('i,Iiab,Jiba->IJ', e_val, t1_xvee_ab, t1_xvee_ba, optimize = einsum_type)
                M_00 += 1/2 * einsum('i,Jiab,Iiba->IJ', e_val, t1_xvee_ab, t1_xvee_ba, optimize = einsum_type)
                mr_adc.log.timer_debug("contracting t1.xvee", *cput1)
                del(t1_xvee_ab, t1_xvee_ba)

        if ncvs > 0 and nextern > 0 and ncas > 0:
            chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 3)
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Molecular Orbitals Energies
                e_extern = mr_adc.mo_energy.e[s_chunk:f_chunk]

                ## Amplitudes
                t1_xaee_ab = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
                t1_xaee_ba = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

                M_00 -= 1/2 * einsum('a,Ixab,Jyba,xy->IJ', e_extern, t1_xaee_ab, t1_xaee_ba, rdm_ca, optimize = einsum_type)
                M_00 -= 1/2 * einsum('a,Ixba,Jyab,xy->IJ', e_extern, t1_xaee_ba, t1_xaee_ab, rdm_ca, optimize = einsum_type)
                M_00 += 1/4 * einsum('xy,Ixab,Jzba,yz->IJ', h_aa, t1_xaee_ab, t1_xaee_ba, rdm_ca, optimize = einsum_type)
                M_00 += 1/4 * einsum('xy,Jxab,Izba,yz->IJ', h_aa, t1_xaee_ba, t1_xaee_ab, rdm_ca, optimize = einsum_type)
                M_00 += 1/4 * einsum('xyzw,Ixab,Juba,zuwy->IJ', v_aaaa, t1_xaee_ab, t1_xaee_ba, rdm_ccaa, optimize = einsum_type)
                M_00 += 1/4 * einsum('xyzw,Jxab,Iuba,zuwy->IJ', v_aaaa, t1_xaee_ba, t1_xaee_ab, rdm_ccaa, optimize = einsum_type)
                M_00 += 1/4 * einsum('I,Ixab,Jyba,xy->IJ', e_cvs, t1_xaee_ab, t1_xaee_ba, rdm_ca, optimize = einsum_type)
                M_00 += 1/4 * einsum('J,Ixab,Jyba,xy->IJ', e_cvs, t1_xaee_ab, t1_xaee_ba, rdm_ca, optimize = einsum_type)
                mr_adc.log.timer_debug("contracting t1.xaee", *cput1)
                del(t1_xaee_ab, t1_xaee_ba)

        if ncvs > 0 and nextern > 0:
            chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 3)
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("t1.xxee v2e.xexe [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Molecular Orbitals Energies
                e_extern = mr_adc.mo_energy.e[s_chunk:f_chunk]

                ## Two-electron integrals
                v_xexe = mr_adc.v2e.xexe[:,s_chunk:f_chunk]

                ## Amplitudes
                t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

                M_00 -= einsum('I,Iiab,Jiab->IJ', e_cvs, t1_xxee, t1_xxee, optimize = einsum_type)
                M_00 -= einsum('J,Iiab,Jiab->IJ', e_cvs, t1_xxee, t1_xxee, optimize = einsum_type)
                M_00 += 2 * einsum('a,Iiab,Jiab->IJ', e_extern, t1_xxee, t1_xxee, optimize = einsum_type)
                M_00 -= einsum('i,Iiab,Jiab->IJ', e_cvs, t1_xxee, t1_xxee, optimize = einsum_type)
                M_00 -= einsum('i,Jiab,Iiab->IJ', e_cvs, t1_xxee, t1_xxee, optimize = einsum_type)
                M_00 += 2 * einsum('Iiab,Jaib->IJ', t1_xxee, v_xexe, optimize = einsum_type)
                M_00 += 2 * einsum('Jiab,Iaib->IJ', t1_xxee, v_xexe, optimize = einsum_type)
                M_00 -= einsum('Iiab,iaJb->IJ', t1_xxee, v_xexe, optimize = einsum_type)
                M_00 -= einsum('Jiab,iaIb->IJ', t1_xxee, v_xexe, optimize = einsum_type)

                ## Molecular Orbitals Energies
                e_extern = mr_adc.mo_energy.e

                M_00 += 2 * einsum('a,Iiba,Jiba->IJ', e_extern, t1_xxee, t1_xxee, optimize = einsum_type)
                mr_adc.log.timer_debug("contracting t1.xxee v2e.xexe", *cput1)
                del(v_xexe, t1_xxee)

        if ncvs > 0 and nextern > 0:
            chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 3)
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("t1.xaee v2e.xeae [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Molecular Orbitals Energies
                e_extern = mr_adc.mo_energy.e[s_chunk:f_chunk]
                v_xeae = mr_adc.v2e.xeae[:,s_chunk:f_chunk]

                ## Amplitudes
                t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

                M_00 -= 1/2 * einsum('I,Ixab,Jyab,xy->IJ', e_cvs, t1_xaee, t1_xaee, rdm_ca, optimize = einsum_type)
                M_00 -= 1/2 * einsum('J,Ixab,Jyab,xy->IJ', e_cvs, t1_xaee, t1_xaee, rdm_ca, optimize = einsum_type)
                M_00 += einsum('a,Ixab,Jyab,xy->IJ', e_extern, t1_xaee, t1_xaee, rdm_ca, optimize = einsum_type)
                M_00 -= 1/2 * einsum('xy,Ixab,Jzab,yz->IJ', h_aa, t1_xaee, t1_xaee, rdm_ca, optimize = einsum_type)
                M_00 -= 1/2 * einsum('xy,Jxab,Izab,yz->IJ', h_aa, t1_xaee, t1_xaee, rdm_ca, optimize = einsum_type)
                M_00 -= 1/2 * einsum('xyzw,Ixab,Juab,zuwy->IJ', v_aaaa, t1_xaee, t1_xaee, rdm_ccaa, optimize = einsum_type)
                M_00 -= 1/2 * einsum('xyzw,Jxab,Iuab,zuwy->IJ', v_aaaa, t1_xaee, t1_xaee, rdm_ccaa, optimize = einsum_type)
                M_00 += einsum('Ixab,Jayb,xy->IJ', t1_xaee, v_xeae, rdm_ca, optimize = einsum_type)
                M_00 += einsum('Jxab,Iayb,xy->IJ', t1_xaee, v_xeae, rdm_ca, optimize = einsum_type)

                ## Two-electron integrals
                v_xeae = mr_adc.v2e.xeae[:,:,:,s_chunk:f_chunk]

                M_00 -= 1/2 * einsum('Ixab,Jbya,xy->IJ', t1_xaee, v_xeae, rdm_ca, optimize = einsum_type)
                M_00 -= 1/2 * einsum('Jxab,Ibya,xy->IJ', t1_xaee, v_xeae, rdm_ca, optimize = einsum_type)

                ## Molecular Orbitals Energies
                e_extern = mr_adc.mo_energy.e

                M_00 += einsum('a,Ixba,Jyba,xy->IJ', e_extern, t1_xaee, t1_xaee, rdm_ca, optimize = einsum_type)
                mr_adc.log.timer_debug("contracting t1.xaee v2e.xeae", *cput1)
                del(v_xeae, t1_xaee)

    mr_adc.M_00 = M_00

    mr_adc.log.timer("computing M(h0-h0) block", *cput0)

def compute_M_01(mr_adc):

    cput0 = (logger.process_clock(), logger.perf_counter())
    mr_adc.log.extra("\nComputing M(h0-h1) blocks...")

    # Variables from kernel
    nval = mr_adc.nval

    # Define functions to compute M_01 blocks
    def compute_M_01__C_CAA(mr_adc):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxaa = mr_adc.v2e.xxaa
        v_xaax = mr_adc.v2e.xaax

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        n_caa = mr_adc.h1.n_caa

        dim_caa = mr_adc.h1.dim_caa

        ## Oth-order
        M_c_caa__a_aaa  = 1/2 * einsum('K,IK,WZ->IKWZ', e_cvs, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        M_c_caa__a_aaa += 1/2 * einsum('Wx,IK,Zx->IKWZ', h_aa, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        M_c_caa__a_aaa -= 1/2 * einsum('Zx,IK,Wx->IKWZ', h_aa, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        M_c_caa__a_aaa += 1/2 * einsum('IK,Wxyz,Zyxz->IKWZ', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_caa__a_aaa -= 1/2 * einsum('IK,Zxyz,Wyxz->IKWZ', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)

        M_c_caa__a_abb  = 1/2 * einsum('K,IK,WZ->IKWZ', e_cvs, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        M_c_caa__a_abb += 1/2 * einsum('Wx,IK,Zx->IKWZ', h_aa, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        M_c_caa__a_abb -= 1/2 * einsum('Zx,IK,Wx->IKWZ', h_aa, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        M_c_caa__a_abb += 1/2 * einsum('IK,Wxyz,Zyxz->IKWZ', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_caa__a_abb -= 1/2 * einsum('IK,Zxyz,Wyxz->IKWZ', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)

        ## 1st-order
        M_c_caa__a_aaa += 1/2 * einsum('IKZx,Wx->IKWZ', v_xxaa, rdm_ca, optimize = einsum_type)
        M_c_caa__a_aaa += 1/2 * einsum('IKxy,WxZy->IKWZ', v_xxaa, rdm_ccaa, optimize = einsum_type)
        M_c_caa__a_aaa -= 1/2 * einsum('IxZK,Wx->IKWZ', v_xaax, rdm_ca, optimize = einsum_type)
        M_c_caa__a_aaa -= 1/6 * einsum('IxyK,WyZx->IKWZ', v_xaax, rdm_ccaa, optimize = einsum_type)
        M_c_caa__a_aaa += 1/6 * einsum('IxyK,WyxZ->IKWZ', v_xaax, rdm_ccaa, optimize = einsum_type)
        M_c_caa__a_aaa -= 1/2 * einsum('IKxy,xy,WZ->IKWZ', v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        M_c_caa__a_aaa += 1/4 * einsum('IxyK,yx,WZ->IKWZ', v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)

        M_c_caa__a_abb += 1/2 * einsum('IKZx,Wx->IKWZ', v_xxaa, rdm_ca, optimize = einsum_type)
        M_c_caa__a_abb += 1/2 * einsum('IKxy,WxZy->IKWZ', v_xxaa, rdm_ccaa, optimize = einsum_type)
        M_c_caa__a_abb -= 1/3 * einsum('IxyK,WyZx->IKWZ', v_xaax, rdm_ccaa, optimize = einsum_type)
        M_c_caa__a_abb -= 1/6 * einsum('IxyK,WyxZ->IKWZ', v_xaax, rdm_ccaa, optimize = einsum_type)
        M_c_caa__a_abb -= 1/2 * einsum('IKxy,xy,WZ->IKWZ', v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        M_c_caa__a_abb += 1/4 * einsum('IxyK,yx,WZ->IKWZ', v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)

        M_c_caa__a_bab =- 1/2 * einsum('IxZK,Wx->IKWZ', v_xaax, rdm_ca, optimize = einsum_type)
        M_c_caa__a_bab += 1/6 * einsum('IxyK,WyZx->IKWZ', v_xaax, rdm_ccaa, optimize = einsum_type)
        M_c_caa__a_bab += 1/3 * einsum('IxyK,WyxZ->IKWZ', v_xaax, rdm_ccaa, optimize = einsum_type)

        M_c_caa__a_aaa = M_c_caa__a_aaa.reshape(ncvs, -1)
        M_c_caa__a_abb = M_c_caa__a_abb.reshape(ncvs, -1)
        M_c_caa__a_bab = M_c_caa__a_bab.reshape(ncvs, -1)

        ## Building C-CAA matrix
        s_aaa = 0
        f_aaa = s_aaa + n_caa
        s_abb = f_aaa
        f_abb = s_abb + n_caa
        s_bab = f_abb
        f_bab = s_bab + n_caa

        M_c_caa = np.zeros((ncvs, dim_caa))
        M_c_caa[:, s_aaa:f_aaa] = M_c_caa__a_aaa.copy()
        M_c_caa[:, s_abb:f_abb] = M_c_caa__a_abb.copy()
        M_c_caa[:, s_bab:f_bab] = M_c_caa__a_bab.copy()

        mr_adc.log.timer_debug("computing M_01__C_CAA", *cput1)

        return M_c_caa

    def compute_M_01__C_CCE(mr_adc):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        h_xe = mr_adc.h1eff.xe

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxxe = mr_adc.v2e.xxxe

        v_xaae = mr_adc.v2e.xaae
        v_xeaa = mr_adc.v2e.xeaa

        ## Amplitudes
        t1_xe = mr_adc.t1.xe

        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        n_cce = mr_adc.h1.n_cce
        n_cce_tril = mr_adc.h1.n_cce_tril

        dim_cce = mr_adc.h1.dim_cce

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        M_c_cce__a_abb  = einsum('KILB->IKLB', v_xxxe, optimize = einsum_type).copy()
        M_c_cce__a_abb -= einsum('LB,IK->IKLB', h_xe, np.identity(ncvs), optimize = einsum_type)
        M_c_cce__a_abb -= einsum('B,IK,LB->IKLB', e_extern, np.identity(ncvs), t1_xe, optimize = einsum_type)
        M_c_cce__a_abb += einsum('L,IK,LB->IKLB', e_cvs, np.identity(ncvs), t1_xe, optimize = einsum_type)
        M_c_cce__a_abb -= einsum('IK,LBxy,yx->IKLB', np.identity(ncvs), v_xeaa, rdm_ca, optimize = einsum_type)
        M_c_cce__a_abb += 1/2 * einsum('IK,LxyB,xy->IKLB', np.identity(ncvs), v_xaae, rdm_ca, optimize = einsum_type)
        M_c_cce__a_abb -= einsum('B,IK,LxBy,yx->IKLB', e_extern, np.identity(ncvs), t1_xaea, rdm_ca, optimize = einsum_type)
        M_c_cce__a_abb += 1/2 * einsum('B,IK,LxyB,yx->IKLB', e_extern, np.identity(ncvs), t1_xaae, rdm_ca, optimize = einsum_type)
        M_c_cce__a_abb += einsum('L,IK,LxBy,yx->IKLB', e_cvs, np.identity(ncvs), t1_xaea, rdm_ca, optimize = einsum_type)
        M_c_cce__a_abb -= 1/2 * einsum('L,IK,LxyB,yx->IKLB', e_cvs, np.identity(ncvs), t1_xaae, rdm_ca, optimize = einsum_type)
        M_c_cce__a_abb += einsum('xy,IK,LxBz,yz->IKLB', h_aa, np.identity(ncvs), t1_xaea, rdm_ca, optimize = einsum_type)
        M_c_cce__a_abb -= 1/2 * einsum('xy,IK,LxzB,yz->IKLB', h_aa, np.identity(ncvs), t1_xaae, rdm_ca, optimize = einsum_type)
        M_c_cce__a_abb -= einsum('xy,IK,LzBx,yz->IKLB', h_aa, np.identity(ncvs), t1_xaea, rdm_ca, optimize = einsum_type)
        M_c_cce__a_abb += 1/2 * einsum('xy,IK,LzxB,yz->IKLB', h_aa, np.identity(ncvs), t1_xaae, rdm_ca, optimize = einsum_type)
        M_c_cce__a_abb += einsum('IK,LxBy,xzwu,ywzu->IKLB', np.identity(ncvs), t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cce__a_abb -= einsum('IK,LxBy,yzwu,xwzu->IKLB', np.identity(ncvs), t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cce__a_abb -= 1/2 * einsum('IK,LxyB,xzwu,ywzu->IKLB', np.identity(ncvs), t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cce__a_abb += 1/2 * einsum('IK,LxyB,yzwu,xwzu->IKLB', np.identity(ncvs), t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)

        M_c_cce__a_aaa = M_c_cce__a_abb - M_c_cce__a_abb.transpose(0,2,1,3)

        ## Reshape tensors to matrix form
        M_c_cce__a_aaa = M_c_cce__a_aaa[:, cvs_tril_ind[0], cvs_tril_ind[1]]

        M_c_cce__a_aaa = M_c_cce__a_aaa.reshape(ncvs, -1)
        M_c_cce__a_abb = M_c_cce__a_abb.reshape(ncvs, -1)

        ## Building C-CCE matrix
        s_aaa = 0
        f_aaa = s_aaa + n_cce_tril
        s_abb = f_aaa
        f_abb = s_abb + n_cce

        M_c_cce = np.zeros((ncvs, dim_cce))
        M_c_cce[:, s_aaa:f_aaa] = M_c_cce__a_aaa.copy()
        M_c_cce[:, s_abb:f_abb] = M_c_cce__a_abb.copy()

        mr_adc.log.timer_debug("computing M_01__C_CCE", *cput1)

        return M_c_cce

    def compute_M_01__C_CAE(mr_adc):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Molecular Orbitals Energies
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_ae = mr_adc.h1eff.ae

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa
        v_xxae = mr_adc.v2e.xxae
        v_xaex = mr_adc.v2e.xaex

        v_aaae = mr_adc.v2e.aaae

        ## Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        n_cae = mr_adc.h1.n_cae

        dim_cae = mr_adc.h1.dim_cae

        M_c_cae__a_aaa =- 1/2 * einsum('IxBK,Yx->IKYB', v_xaex, rdm_ca, optimize = einsum_type)
        M_c_cae__a_aaa += 1/2 * einsum('KIxB,Yx->IKYB', v_xxae, rdm_ca, optimize = einsum_type)
        M_c_cae__a_aaa -= 1/2 * einsum('xB,IK,Yx->IKYB', h_ae, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        M_c_cae__a_aaa -= 1/2 * einsum('IK,xyzB,Yyzx->IKYB', np.identity(ncvs), v_aaae, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_aaa -= 1/2 * einsum('B,IK,xB,Yx->IKYB', e_extern, np.identity(ncvs), t1_ae, rdm_ca, optimize = einsum_type)
        M_c_cae__a_aaa -= 1/2 * einsum('B,IK,xyzB,Yzyx->IKYB', e_extern, np.identity(ncvs), t1_aaae, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_aaa += 1/2 * einsum('xy,IK,xB,Yy->IKYB', h_aa, np.identity(ncvs), t1_ae, rdm_ca, optimize = einsum_type)
        M_c_cae__a_aaa += 1/2 * einsum('xy,IK,xzwB,Ywzy->IKYB', h_aa, np.identity(ncvs), t1_aaae, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_aaa -= 1/2 * einsum('xy,IK,zwxB,Yywz->IKYB', h_aa, np.identity(ncvs), t1_aaae, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_aaa += 1/2 * einsum('xy,IK,zxwB,Ywyz->IKYB', h_aa, np.identity(ncvs), t1_aaae, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_aaa += 1/2 * einsum('IK,xB,xyzw,Yzyw->IKYB', np.identity(ncvs), t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_aaa += 1/2 * einsum('IK,xyzB,xwuv,Yzuywv->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_aaa -= 1/6 * einsum('IK,xyzB,ywuv,Yzuvwx->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_aaa -= 1/6 * einsum('IK,xyzB,ywuv,Yzuvxw->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_aaa -= 1/6 * einsum('IK,xyzB,ywuv,Yzuwvx->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_aaa += 1/3 * einsum('IK,xyzB,ywuv,Yzuwxv->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_aaa -= 1/6 * einsum('IK,xyzB,ywuv,Yzuxvw->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_aaa -= 1/6 * einsum('IK,xyzB,ywuv,Yzuxwv->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_aaa += 1/2 * einsum('IK,xyzB,ywxu,Yzwu->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_aaa -= 1/2 * einsum('IK,xyzB,zwuv,Ywvyxu->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)

        M_c_cae__a_abb  = 1/2 * einsum('KIxB,Yx->IKYB', v_xxae, rdm_ca, optimize = einsum_type)
        M_c_cae__a_abb -= 1/2 * einsum('xB,IK,Yx->IKYB', h_ae, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        M_c_cae__a_abb -= 1/2 * einsum('IK,xyzB,Yyzx->IKYB', np.identity(ncvs), v_aaae, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_abb -= 1/2 * einsum('B,IK,xB,Yx->IKYB', e_extern, np.identity(ncvs), t1_ae, rdm_ca, optimize = einsum_type)
        M_c_cae__a_abb -= 1/2 * einsum('B,IK,xyzB,Yzyx->IKYB', e_extern, np.identity(ncvs), t1_aaae, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_abb += 1/2 * einsum('xy,IK,xB,Yy->IKYB', h_aa, np.identity(ncvs), t1_ae, rdm_ca, optimize = einsum_type)
        M_c_cae__a_abb += 1/2 * einsum('xy,IK,xzwB,Ywzy->IKYB', h_aa, np.identity(ncvs), t1_aaae, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_abb -= 1/2 * einsum('xy,IK,zwxB,Yywz->IKYB', h_aa, np.identity(ncvs), t1_aaae, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_abb += 1/2 * einsum('xy,IK,zxwB,Ywyz->IKYB', h_aa, np.identity(ncvs), t1_aaae, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_abb += 1/2 * einsum('IK,xB,xyzw,Yzyw->IKYB', np.identity(ncvs), t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_abb += 1/2 * einsum('IK,xyzB,xwuv,Yzuywv->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_abb -= 1/6 * einsum('IK,xyzB,ywuv,Yzuvwx->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_abb -= 1/6 * einsum('IK,xyzB,ywuv,Yzuvxw->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_abb -= 1/6 * einsum('IK,xyzB,ywuv,Yzuwvx->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_abb += 1/3 * einsum('IK,xyzB,ywuv,Yzuwxv->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_abb -= 1/6 * einsum('IK,xyzB,ywuv,Yzuxvw->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_abb -= 1/6 * einsum('IK,xyzB,ywuv,Yzuxwv->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cae__a_abb += 1/2 * einsum('IK,xyzB,ywxu,Yzwu->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cae__a_abb -= 1/2 * einsum('IK,xyzB,zwuv,Ywvyxu->IKYB', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)

        M_c_cae__a_bab = M_c_cae__a_aaa - M_c_cae__a_abb

        ## Reshape tensors to matrix form
        M_c_cae__a_aaa = M_c_cae__a_aaa.reshape(ncvs, -1)
        M_c_cae__a_abb = M_c_cae__a_abb.reshape(ncvs, -1)
        M_c_cae__a_bab = M_c_cae__a_bab.reshape(ncvs, -1)

        ## Building C-CAE matrix
        s_aaa = 0
        f_aaa = s_aaa + n_cae
        s_abb = f_aaa
        f_abb = s_abb + n_cae
        s_bab = f_abb
        f_bab = s_bab + n_cae

        M_c_cae = np.zeros((ncvs, dim_cae))
        M_c_cae[:, s_aaa:f_aaa] = M_c_cae__a_aaa.copy()
        M_c_cae[:, s_abb:f_abb] = M_c_cae__a_abb.copy()
        M_c_cae[:, s_bab:f_bab] = M_c_cae__a_bab.copy()

        mr_adc.log.timer_debug("computing M_01__C_CAE", *cput1)

        return M_c_cae

    def compute_M_01__C_CCA(mr_adc):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_xa = mr_adc.h1eff.xa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa
        v_xaaa = mr_adc.v2e.xaaa
        v_xxxa = mr_adc.v2e.xxxa

        ## Amplitudes
        t1_xa = mr_adc.t1.xa
        t1_xaaa = mr_adc.t1.xaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        n_cca = mr_adc.h1.n_cca
        n_cca_tril = mr_adc.h1.n_cca_tril

        dim_cca = mr_adc.h1.dim_cca

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        M_c_cca__a_abb  = einsum('KILY->IKLY', v_xxxa, optimize = einsum_type).copy()
        M_c_cca__a_abb -= einsum('LY,IK->IKLY', h_xa, np.identity(ncvs), optimize = einsum_type)
        M_c_cca__a_abb -= 1/2 * einsum('KILx,Yx->IKLY', v_xxxa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb += einsum('L,IK,LY->IKLY', e_cvs, np.identity(ncvs), t1_xa, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('Lx,IK,Yx->IKLY', h_xa, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb -= einsum('Yx,IK,Lx->IKLY', h_aa, np.identity(ncvs), t1_xa, optimize = einsum_type)
        M_c_cca__a_abb -= einsum('IK,LYxy,xy->IKLY', np.identity(ncvs), v_xaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('IK,LxyY,yx->IKLY', np.identity(ncvs), v_xaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('IK,Lxyz,Yyxz->IKLY', np.identity(ncvs), v_xaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb -= 1/2 * einsum('L,IK,Lx,Yx->IKLY', e_cvs, np.identity(ncvs), t1_xa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb += einsum('L,IK,LxYy,xy->IKLY', e_cvs, np.identity(ncvs), t1_xaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb -= 1/2 * einsum('L,IK,LxyY,xy->IKLY', e_cvs, np.identity(ncvs), t1_xaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb -= 1/2 * einsum('L,IK,Lxyz,Yxyz->IKLY', e_cvs, np.identity(ncvs), t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb -= einsum('Yx,IK,Lyxz,yz->IKLY', h_aa, np.identity(ncvs), t1_xaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('Yx,IK,Lyzx,yz->IKLY', h_aa, np.identity(ncvs), t1_xaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('xy,IK,Lx,Yy->IKLY', h_aa, np.identity(ncvs), t1_xa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb += einsum('xy,IK,LxYz,yz->IKLY', h_aa, np.identity(ncvs), t1_xaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb -= 1/2 * einsum('xy,IK,LxzY,yz->IKLY', h_aa, np.identity(ncvs), t1_xaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb -= 1/2 * einsum('xy,IK,Lxzw,Yyzw->IKLY', h_aa, np.identity(ncvs), t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb -= einsum('xy,IK,LzYx,yz->IKLY', h_aa, np.identity(ncvs), t1_xaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('xy,IK,Lzwx,Yzwy->IKLY', h_aa, np.identity(ncvs), t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('xy,IK,LzxY,yz->IKLY', h_aa, np.identity(ncvs), t1_xaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('xy,IK,Lzxw,Yzyw->IKLY', h_aa, np.identity(ncvs), t1_xaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb -= einsum('IK,Lx,Yxyz,yz->IKLY', np.identity(ncvs), t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('IK,Lx,Yyzx,zy->IKLY', np.identity(ncvs), t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('IK,Lx,xyzw,Yzyw->IKLY', np.identity(ncvs), t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb += einsum('IK,LxYy,xzwu,ywzu->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb -= einsum('IK,LxYy,yzwu,xwzu->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb -= 1/2 * einsum('IK,LxyY,xzwu,ywzu->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('IK,LxyY,yzwu,xwzu->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('IK,Lxyz,Ywuy,xwzu->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('IK,Lxyz,Ywuz,xwuy->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb -= 1/2 * einsum('IK,Lxyz,Ywxu,yzwu->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb -= einsum('IK,Lxyz,Yywu,xuzw->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb -= einsum('IK,Lxyz,Yywz,xw->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('IK,Lxyz,Yzwu,xuyw->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('IK,Lxyz,Yzwy,xw->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        M_c_cca__a_abb -= 1/2 * einsum('IK,Lxyz,xwuv,Ywvyzu->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cca__a_abb -= 1/6 * einsum('IK,Lxyz,ywuv,Yxuvwz->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cca__a_abb -= 1/6 * einsum('IK,Lxyz,ywuv,Yxuvzw->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cca__a_abb -= 1/6 * einsum('IK,Lxyz,ywuv,Yxuwvz->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cca__a_abb += 1/3 * einsum('IK,Lxyz,ywuv,Yxuwzv->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cca__a_abb -= 1/6 * einsum('IK,Lxyz,ywuv,Yxuzvw->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cca__a_abb -= 1/6 * einsum('IK,Lxyz,ywuv,Yxuzwv->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('IK,Lxyz,ywzu,Yxwu->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cca__a_abb += 1/2 * einsum('IK,Lxyz,zwuv,Yxuywv->IKLY', np.identity(ncvs), t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)

        M_c_cca__a_aaa = M_c_cca__a_abb - M_c_cca__a_abb.transpose(0,2,1,3)

        ## Reshape tensors to matrix form
        M_c_cca__a_aaa = M_c_cca__a_aaa[:, cvs_tril_ind[0], cvs_tril_ind[1]]

        M_c_cca__a_aaa = M_c_cca__a_aaa.reshape(ncvs, -1)
        M_c_cca__a_abb = M_c_cca__a_abb.reshape(ncvs, -1)

        ## Building C-CCA matrix
        s_aaa = 0
        f_aaa = s_aaa + n_cca_tril
        s_abb = f_aaa
        f_abb = s_abb + n_cca

        M_c_cca = np.zeros((ncvs, dim_cca))
        M_c_cca[:, s_aaa:f_aaa] = M_c_cca__a_aaa.copy()
        M_c_cca[:, s_abb:f_abb] = M_c_cca__a_abb.copy()

        mr_adc.log.timer_debug("computing M_01__C_CCA", *cput1)

        return M_c_cca

    def compute_M_01__C_CVE(mr_adc):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Molecular Orbitals Energies
        e_val = mr_adc.mo_energy.v
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_ve = mr_adc.h1eff.ve

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxve = mr_adc.v2e.xxve
        v_vxxe = mr_adc.v2e.vxxe

        v_vaae = mr_adc.v2e.vaae
        v_veaa = mr_adc.v2e.veaa

        ## Amplitudes
        t1_ve = mr_adc.t1.ve

        t1_vaea = mr_adc.t1.vaea
        t1_vaae = mr_adc.t1.vaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        n_cve = mr_adc.h1.n_cve

        dim_cve = mr_adc.h1.dim_cve

        # C-CVE Block
        M_c_cve__a_abb  = einsum('KILB->IKLB', v_xxve, optimize = einsum_type).copy()
        M_c_cve__a_abb -= einsum('LB,IK->IKLB', h_ve, np.identity(ncvs), optimize = einsum_type)
        M_c_cve__a_abb -= einsum('B,IK,LB->IKLB', e_extern, np.identity(ncvs), t1_ve, optimize = einsum_type)
        M_c_cve__a_abb += einsum('L,IK,LB->IKLB', e_val, np.identity(ncvs), t1_ve, optimize = einsum_type)
        M_c_cve__a_abb -= einsum('IK,LBxy,yx->IKLB', np.identity(ncvs), v_veaa, rdm_ca, optimize = einsum_type)
        M_c_cve__a_abb += 1/2 * einsum('IK,LxyB,xy->IKLB', np.identity(ncvs), v_vaae, rdm_ca, optimize = einsum_type)
        M_c_cve__a_abb -= einsum('B,IK,LxBy,yx->IKLB', e_extern, np.identity(ncvs), t1_vaea, rdm_ca, optimize = einsum_type)
        M_c_cve__a_abb += 1/2 * einsum('B,IK,LxyB,yx->IKLB', e_extern, np.identity(ncvs), t1_vaae, rdm_ca, optimize = einsum_type)
        M_c_cve__a_abb += einsum('L,IK,LxBy,yx->IKLB', e_val, np.identity(ncvs), t1_vaea, rdm_ca, optimize = einsum_type)
        M_c_cve__a_abb -= 1/2 * einsum('L,IK,LxyB,yx->IKLB', e_val, np.identity(ncvs), t1_vaae, rdm_ca, optimize = einsum_type)
        M_c_cve__a_abb += einsum('xy,IK,LxBz,yz->IKLB', h_aa, np.identity(ncvs), t1_vaea, rdm_ca, optimize = einsum_type)
        M_c_cve__a_abb -= 1/2 * einsum('xy,IK,LxzB,yz->IKLB', h_aa, np.identity(ncvs), t1_vaae, rdm_ca, optimize = einsum_type)
        M_c_cve__a_abb -= einsum('xy,IK,LzBx,yz->IKLB', h_aa, np.identity(ncvs), t1_vaea, rdm_ca, optimize = einsum_type)
        M_c_cve__a_abb += 1/2 * einsum('xy,IK,LzxB,yz->IKLB', h_aa, np.identity(ncvs), t1_vaae, rdm_ca, optimize = einsum_type)
        M_c_cve__a_abb += einsum('IK,LxBy,xzwu,ywzu->IKLB', np.identity(ncvs), t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cve__a_abb -= einsum('IK,LxBy,yzwu,xwzu->IKLB', np.identity(ncvs), t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cve__a_abb -= 1/2 * einsum('IK,LxyB,xzwu,ywzu->IKLB', np.identity(ncvs), t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cve__a_abb += 1/2 * einsum('IK,LxyB,yzwu,xwzu->IKLB', np.identity(ncvs), t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cve__a_bab =- einsum('LIKB->IKLB', v_vxxe, optimize = einsum_type).copy()

        M_c_cve__a_aaa = M_c_cve__a_abb + M_c_cve__a_bab

        ## Reshape tensors to matrix form
        M_c_cve__a_aaa = M_c_cve__a_aaa.reshape(ncvs, -1)
        M_c_cve__a_abb = M_c_cve__a_abb.reshape(ncvs, -1)
        M_c_cve__a_bab = M_c_cve__a_bab.reshape(ncvs, -1)

        ## Building C-CVE matrix
        s_aaa = 0
        f_aaa = s_aaa + n_cve
        s_abb = f_aaa
        f_abb = s_abb + n_cve
        s_bab = f_abb
        f_bab = s_bab + n_cve

        M_c_cve = np.zeros((ncvs, dim_cve))
        M_c_cve[:, s_aaa:f_aaa] = M_c_cve__a_aaa.copy()
        M_c_cve[:, s_abb:f_abb] = M_c_cve__a_abb.copy()
        M_c_cve[:, s_bab:f_bab] = M_c_cve__a_bab.copy()

        mr_adc.log.timer_debug("computing M_01__C_CVE", *cput1)

        return M_c_cve

    def compute_M_01__C_CVA(mr_adc):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Molecular Orbitals Energies
        e_val = mr_adc.mo_energy.v

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        h_va = mr_adc.h1eff.va

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxva = mr_adc.v2e.xxva
        v_vxxa = mr_adc.v2e.vxxa

        v_vaaa = mr_adc.v2e.vaaa

        ## Amplitudes
        t1_va = mr_adc.t1.va

        t1_vaaa = mr_adc.t1.vaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        n_cva = mr_adc.h1.n_cva

        dim_cva = mr_adc.h1.dim_cva

        M_c_cva__a_abb  = einsum('KILY->IKLY', v_xxva, optimize = einsum_type).copy()
        M_c_cva__a_abb -= einsum('LY,IK->IKLY', h_va, np.identity(ncvs), optimize = einsum_type)
        M_c_cva__a_abb -= 1/2 * einsum('KILx,Yx->IKLY', v_xxva, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb += einsum('L,IK,LY->IKLY', e_val, np.identity(ncvs), t1_va, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('Lx,IK,Yx->IKLY', h_va, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb -= einsum('Yx,IK,Lx->IKLY', h_aa, np.identity(ncvs), t1_va, optimize = einsum_type)
        M_c_cva__a_abb -= einsum('IK,LYxy,xy->IKLY', np.identity(ncvs), v_vaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('IK,LxyY,yx->IKLY', np.identity(ncvs), v_vaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('IK,Lxyz,Yyxz->IKLY', np.identity(ncvs), v_vaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb -= 1/2 * einsum('L,IK,Lx,Yx->IKLY', e_val, np.identity(ncvs), t1_va, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb += einsum('L,IK,LxYy,xy->IKLY', e_val, np.identity(ncvs), t1_vaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb -= 1/2 * einsum('L,IK,LxyY,xy->IKLY', e_val, np.identity(ncvs), t1_vaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb -= 1/2 * einsum('L,IK,Lxyz,Yxyz->IKLY', e_val, np.identity(ncvs), t1_vaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb -= einsum('Yx,IK,Lyxz,yz->IKLY', h_aa, np.identity(ncvs), t1_vaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('Yx,IK,Lyzx,yz->IKLY', h_aa, np.identity(ncvs), t1_vaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('xy,IK,Lx,Yy->IKLY', h_aa, np.identity(ncvs), t1_va, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb += einsum('xy,IK,LxYz,yz->IKLY', h_aa, np.identity(ncvs), t1_vaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb -= 1/2 * einsum('xy,IK,LxzY,yz->IKLY', h_aa, np.identity(ncvs), t1_vaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb -= 1/2 * einsum('xy,IK,Lxzw,Yyzw->IKLY', h_aa, np.identity(ncvs), t1_vaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb -= einsum('xy,IK,LzYx,yz->IKLY', h_aa, np.identity(ncvs), t1_vaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('xy,IK,Lzwx,Yzwy->IKLY', h_aa, np.identity(ncvs), t1_vaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('xy,IK,LzxY,yz->IKLY', h_aa, np.identity(ncvs), t1_vaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('xy,IK,Lzxw,Yzyw->IKLY', h_aa, np.identity(ncvs), t1_vaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb -= einsum('IK,Lx,Yxyz,yz->IKLY', np.identity(ncvs), t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('IK,Lx,Yyzx,zy->IKLY', np.identity(ncvs), t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('IK,Lx,xyzw,Yzyw->IKLY', np.identity(ncvs), t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb += einsum('IK,LxYy,xzwu,ywzu->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb -= einsum('IK,LxYy,yzwu,xwzu->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb -= 1/2 * einsum('IK,LxyY,xzwu,ywzu->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('IK,LxyY,yzwu,xwzu->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('IK,Lxyz,Ywuy,xwzu->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('IK,Lxyz,Ywuz,xwuy->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb -= 1/2 * einsum('IK,Lxyz,Ywxu,yzwu->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb -= einsum('IK,Lxyz,Yywu,xuzw->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb -= einsum('IK,Lxyz,Yywz,xw->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('IK,Lxyz,Yzwu,xuyw->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('IK,Lxyz,Yzwy,xw->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        M_c_cva__a_abb -= 1/2 * einsum('IK,Lxyz,xwuv,Ywvyzu->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cva__a_abb -= 1/6 * einsum('IK,Lxyz,ywuv,Yxuvwz->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cva__a_abb -= 1/6 * einsum('IK,Lxyz,ywuv,Yxuvzw->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cva__a_abb -= 1/6 * einsum('IK,Lxyz,ywuv,Yxuwvz->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cva__a_abb += 1/3 * einsum('IK,Lxyz,ywuv,Yxuwzv->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cva__a_abb -= 1/6 * einsum('IK,Lxyz,ywuv,Yxuzvw->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cva__a_abb -= 1/6 * einsum('IK,Lxyz,ywuv,Yxuzwv->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('IK,Lxyz,ywzu,Yxwu->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        M_c_cva__a_abb += 1/2 * einsum('IK,Lxyz,zwuv,Yxuywv->IKLY', np.identity(ncvs), t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)

        M_c_cva__a_bab =- einsum('LIKY->IKLY', v_vxxa, optimize = einsum_type).copy()
        M_c_cva__a_bab += 1/2 * einsum('LIKx,Yx->IKLY', v_vxxa, rdm_ca, optimize = einsum_type)

        M_c_cva__a_aaa = M_c_cva__a_abb + M_c_cva__a_bab

        M_c_cva__a_aaa = M_c_cva__a_aaa.reshape(ncvs, -1)
        M_c_cva__a_abb = M_c_cva__a_abb.reshape(ncvs, -1)
        M_c_cva__a_bab = M_c_cva__a_bab.reshape(ncvs, -1)

        ## Building C-CVA matrix
        s_aaa = 0
        f_aaa = s_aaa + n_cva
        s_abb = f_aaa
        f_abb = s_abb + n_cva
        s_bab = f_abb
        f_bab = s_bab + n_cva

        M_c_cva = np.zeros((ncvs, dim_cva))
        M_c_cva[:, s_aaa:f_aaa] = M_c_cva__a_aaa.copy()
        M_c_cva[:, s_abb:f_abb] = M_c_cva__a_abb.copy()
        M_c_cva[:, s_bab:f_bab] = M_c_cva__a_bab.copy()

        mr_adc.log.timer_debug("computing M_01__C_CVA", *cput1)

        return M_c_cva

    # Compute M_01 Matrices
    ## C-CAA Block
    mr_adc.M_01.c_caa = compute_M_01__C_CAA(mr_adc)

    ## C-CCE Block
    mr_adc.M_01.c_cce = compute_M_01__C_CCE(mr_adc)

    ## C-CAE Block
    mr_adc.M_01.c_cae = compute_M_01__C_CAE(mr_adc)

    ## C-CCA Block
    mr_adc.M_01.c_cca = compute_M_01__C_CCA(mr_adc)

    if nval > 0:
        ## C-CVE Block
        mr_adc.M_01.c_cve = compute_M_01__C_CVE(mr_adc)

        ## C-CVA Block
        mr_adc.M_01.c_cva = compute_M_01__C_CVA(mr_adc)

    mr_adc.log.timer("computing M(h0-h1) block", *cput0)

def define_effective_hamiltonian(mr_adc):

    apply_M = None

    if mr_adc.method in ("mr-adc(0)", "mr-adc(1)"):
        # Effective Hamiltonian for MR-ADC(0) and MR-ADC(1)
        def apply_M(X):

            M_00 = mr_adc.M_00

            sigma = np.dot(M_00, X)

            ## Multiply by -1.0, since we are solving for -M C = -S C E
            sigma *= -1.0

            return sigma

    else:
        # Effective Hamiltonian for MR-ADC(2) and MR-ADC(2)-X
        def apply_M(X):
            ## Xt = S_12 X
            Xt = apply_S_12(mr_adc, X)

            ## Apply M: Sigma = M Xt
            sigma = compute_sigma_vector(mr_adc, Xt)

            ## Multiply by -1.0, since we are solving for -M C = -S C E
            sigma *= -1.0

            ## X_new = S_12.T Sigma
            X_new = apply_S_12(mr_adc, sigma, transpose = True)

            return X_new

    return apply_M

def compute_preconditioner(mr_adc):

    cput0 = (logger.process_clock(), logger.perf_counter())
    mr_adc.log.extra("\nComputing preconditioner...")

    # Matrix Blocks
    M_00 = mr_adc.M_00

    # Multiply by -1.0, since we are solving for -M C = -S C E
    if mr_adc.method in ("mr-adc(0)", "mr-adc(1)"):
        return (-1.0 * np.diag(M_00))

    # Variables from kernel
    ncvs = mr_adc.ncvs
    nval = mr_adc.nval

    ## Excitation Manifolds
    s_c = mr_adc.h0.s_c
    f_c = mr_adc.h0.f_c

    ho_s_c_caa = mr_adc.h_orth.s_c_caa
    ho_f_c_caa = mr_adc.h_orth.f_c_caa

    ho_s_cce__aaa = mr_adc.h_orth.s_cce__aaa
    ho_f_cce__aaa = mr_adc.h_orth.f_cce__aaa
    ho_s_cce__abb = mr_adc.h_orth.s_cce__abb
    ho_f_cce__abb = mr_adc.h_orth.f_cce__abb

    ho_s_cae__aaa = mr_adc.h_orth.s_cae__aaa
    ho_f_cae__aaa = mr_adc.h_orth.f_cae__aaa
    ho_s_cae__abb = mr_adc.h_orth.s_cae__abb
    ho_f_cae__abb = mr_adc.h_orth.f_cae__abb
    ho_s_cae__bab = mr_adc.h_orth.s_cae__bab
    ho_f_cae__bab = mr_adc.h_orth.f_cae__bab

    ho_s_cca__aaa = mr_adc.h_orth.s_cca__aaa
    ho_f_cca__aaa = mr_adc.h_orth.f_cca__aaa
    ho_s_cca__abb = mr_adc.h_orth.s_cca__abb
    ho_f_cca__abb = mr_adc.h_orth.f_cca__abb

    ## Indices
    cvs_tril_ind = np.tril_indices(ncvs, k=-1)

    # Define functions to compute preconditioner diagonal blocks
    def compute_preconditioner__CAA(mr_adc):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        ncas = mr_adc.ncas

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxaa = mr_adc.v2e.xxaa
        v_xaax = mr_adc.v2e.xaax

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Overlap Matrices
        S12_c_caa = mr_adc.S12.c_caa

        # Matrix Blocks
        M_00 = mr_adc.M_00

        # C and CAA
        # 0th- and 1s-order
        precond_c_caa__a_aaa  = 1/2 * einsum('IIxY,Xx->IXY', v_xxaa, rdm_ca, optimize = einsum_type)
        precond_c_caa__a_aaa += 1/2 * einsum('IIxy,XyYx->IXY', v_xxaa, rdm_ccaa, optimize = einsum_type)
        precond_c_caa__a_aaa -= 1/2 * einsum('IYxI,Xx->IXY', v_xaax, rdm_ca, optimize = einsum_type)
        precond_c_caa__a_aaa -= 1/6 * einsum('IxyI,XxYy->IXY', v_xaax, rdm_ccaa, optimize = einsum_type)
        precond_c_caa__a_aaa += 1/6 * einsum('IxyI,XxyY->IXY', v_xaax, rdm_ccaa, optimize = einsum_type)
        precond_c_caa__a_aaa += 1/2 * einsum('I,II,XY->IXY', e_cvs, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_c_caa__a_aaa += 1/2 * einsum('Xx,II,Yx->IXY', h_aa, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_c_caa__a_aaa -= 1/2 * einsum('Yx,II,Xx->IXY', h_aa, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_c_caa__a_aaa += 1/2 * einsum('II,Xxyz,Yyxz->IXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_c_caa__a_aaa -= 1/2 * einsum('II,Yxyz,Xyxz->IXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_c_caa__a_aaa -= 1/2 * einsum('IIxy,xy,XY->IXY', v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        precond_c_caa__a_aaa += 1/4 * einsum('IxyI,yx,XY->IXY', v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)

        precond_c_caa__a_abb  = 1/2 * einsum('IIxY,Xx->IXY', v_xxaa, rdm_ca, optimize = einsum_type)
        precond_c_caa__a_abb += 1/2 * einsum('IIxy,XyYx->IXY', v_xxaa, rdm_ccaa, optimize = einsum_type)
        precond_c_caa__a_abb -= 1/3 * einsum('IxyI,XxYy->IXY', v_xaax, rdm_ccaa, optimize = einsum_type)
        precond_c_caa__a_abb -= 1/6 * einsum('IxyI,XxyY->IXY', v_xaax, rdm_ccaa, optimize = einsum_type)
        precond_c_caa__a_abb += 1/2 * einsum('I,II,XY->IXY', e_cvs, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_c_caa__a_abb += 1/2 * einsum('Xx,II,Yx->IXY', h_aa, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_c_caa__a_abb -= 1/2 * einsum('Yx,II,Xx->IXY', h_aa, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_c_caa__a_abb += 1/2 * einsum('II,Xxyz,Yyxz->IXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_c_caa__a_abb -= 1/2 * einsum('II,Yxyz,Xyxz->IXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_c_caa__a_abb -= 1/2 * einsum('IIxy,xy,XY->IXY', v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        precond_c_caa__a_abb += 1/4 * einsum('IxyI,yx,XY->IXY', v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)

        precond_caa__aaa =- 1/6 * einsum('I,II,WYXZ->IWZXY', e_cvs, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa += 1/6 * einsum('I,II,WYZX->IWZXY', e_cvs, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa += 1/6 * einsum('Xx,II,WYZx->IWZXY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa -= 1/6 * einsum('Xx,II,WYxZ->IWZXY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa -= 1/2 * einsum('YZ,II,WX->IWZXY', h_aa, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_caa__aaa += 1/6 * einsum('Yx,II,WxXZ->IWZXY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa -= 1/6 * einsum('Yx,II,WxZX->IWZXY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa -= 1/6 * einsum('II,XxZy,WYxy->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa += 1/6 * einsum('II,XxZy,WYyx->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa += 1/6 * einsum('II,Xxyz,WYyZxz->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__aaa -= 1/6 * einsum('II,Xxyz,WYyxZz->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__aaa -= 1/2 * einsum('II,YZxy,WyXx->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa += 1/6 * einsum('II,YxyZ,WxXy->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa -= 1/6 * einsum('II,YxyZ,WxyX->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa += 1/6 * einsum('II,Yxyz,WxzXZy->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__aaa -= 1/6 * einsum('II,Yxyz,WxzZXy->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__aaa += 1/2 * einsum('I,II,YZ,WX->IWZXY', e_cvs, np.identity(ncvs), np.identity(ncas), rdm_ca, optimize = einsum_type)
        precond_caa__aaa += 1/2 * einsum('Xx,II,YZ,Wx->IWZXY', h_aa, np.identity(ncvs), np.identity(ncas), rdm_ca, optimize = einsum_type)
        precond_caa__aaa += 1/2 * einsum('Xxyz,II,YZ,Wyxz->IWZXY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)

        precond_caa__bab =- 1/3 * einsum('I,II,WYXZ->IWZXY', e_cvs, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__bab -= 1/6 * einsum('I,II,WYZX->IWZXY', e_cvs, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__bab -= 1/6 * einsum('Xx,II,WYZx->IWZXY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__bab -= 1/3 * einsum('Xx,II,WYxZ->IWZXY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__bab -= 1/2 * einsum('YZ,II,WX->IWZXY', h_aa, np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_caa__bab += 1/3 * einsum('Yx,II,WxXZ->IWZXY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__bab += 1/6 * einsum('Yx,II,WxZX->IWZXY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__bab -= 1/3 * einsum('II,XxZy,WYxy->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__bab -= 1/6 * einsum('II,XxZy,WYyx->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__bab += 1/6 * einsum('II,Xxyz,WYyZzx->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__bab -= 1/6 * einsum('II,Xxyz,WYyxZz->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__bab += 1/6 * einsum('II,Xxyz,WYyxzZ->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__bab += 1/6 * einsum('II,Xxyz,WYyzZx->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__bab += 1/6 * einsum('II,Xxyz,WYyzxZ->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__bab -= 1/2 * einsum('II,YZxy,WyXx->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__bab += 1/3 * einsum('II,YxyZ,WxXy->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__bab += 1/6 * einsum('II,YxyZ,WxyX->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__bab += 1/3 * einsum('II,Yxyz,WxzXZy->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__bab += 1/6 * einsum('II,Yxyz,WxzZXy->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__bab += 1/2 * einsum('I,II,YZ,WX->IWZXY', e_cvs, np.identity(ncvs), np.identity(ncas), rdm_ca, optimize = einsum_type)
        precond_caa__bab += 1/2 * einsum('Xx,II,YZ,Wx->IWZXY', h_aa, np.identity(ncvs), np.identity(ncas), rdm_ca, optimize = einsum_type)
        precond_caa__bab += 1/2 * einsum('Xxyz,II,YZ,Wyxz->IWZXY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)

        # Off-diagonal terms
        precond_caa__aaa_abb  = 1/6 * einsum('I,II,WYXZ->IWZXY', e_cvs, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa_abb += 1/3 * einsum('I,II,WYZX->IWZXY', e_cvs, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa_abb += 1/3 * einsum('Xx,II,WYZx->IWZXY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa_abb += 1/6 * einsum('Xx,II,WYxZ->IWZXY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa_abb -= 1/6 * einsum('Yx,II,WxXZ->IWZXY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa_abb -= 1/3 * einsum('Yx,II,WxZX->IWZXY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa_abb += 1/6 * einsum('II,XxZy,WYxy->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa_abb += 1/3 * einsum('II,XxZy,WYyx->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa_abb += 1/3 * einsum('II,Xxyz,WYyZxz->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__aaa_abb += 1/6 * einsum('II,Xxyz,WYyxZz->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__aaa_abb -= 1/6 * einsum('II,YxyZ,WxXy->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa_abb -= 1/3 * einsum('II,YxyZ,WxyX->IWZXY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
        precond_caa__aaa_abb += 1/6 * einsum('II,Yxyz,WxzXyZ->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__aaa_abb -= 1/6 * einsum('II,Yxyz,WxzZXy->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__aaa_abb += 1/6 * einsum('II,Yxyz,WxzZyX->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__aaa_abb += 1/6 * einsum('II,Yxyz,WxzyXZ->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
        precond_caa__aaa_abb += 1/6 * einsum('II,Yxyz,WxzyZX->IWZXY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)

        ## Building C-CAA matrix
        dim_xy = ncas * ncas
        dim_c_caa = 3 * dim_xy

        s_aa = 1
        f_aa = s_aa + dim_xy
        s_bb = f_aa
        f_bb = s_bb + dim_xy
        s_ab = f_bb
        f_ab = s_ab + dim_xy

        precond_caa = np.zeros((ncvs, (1 + dim_c_caa), (1 + dim_c_caa)))
        precond_caa[:, 0, 0] = np.diag(M_00[s_c:f_c, s_c:f_c]).copy()

        precond_caa[:, 0, s_aa:f_aa] = precond_c_caa__a_aaa.reshape(ncvs, ncas * ncas).copy()
        precond_caa[:, 0, s_bb:f_bb] = precond_c_caa__a_abb.reshape(ncvs, ncas * ncas).copy()
        precond_caa[:, s_aa:f_ab, 0] = precond_caa[:, 0, s_aa:f_ab].copy()

        precond_caa[:, s_aa:f_aa, s_aa:f_aa] = precond_caa__aaa.reshape(ncvs, ncas * ncas, ncas * ncas).copy()
        precond_caa[:, s_aa:f_aa, s_bb:f_bb] = precond_caa__aaa_abb.reshape(ncvs, ncas * ncas, ncas * ncas).copy()

        precond_caa[:, s_bb:f_bb, s_bb:f_bb] = precond_caa__aaa.reshape(ncvs, ncas * ncas, ncas * ncas).copy()
        precond_caa[:, s_bb:f_bb, s_aa:f_aa] = precond_caa__aaa_abb.reshape(ncvs, ncas * ncas, ncas * ncas).copy()

        precond_caa[:, s_ab:f_ab, s_ab:f_ab] = precond_caa__bab.reshape(ncvs, ncas * ncas, ncas * ncas).copy()

        precond_caa = einsum('IXY,XP,YP->IP', precond_caa, S12_c_caa, S12_c_caa, optimize = einsum_type)

        mr_adc.log.timer_debug("computing preconditioner CAA", *cput1)

        return precond_caa

    def compute_preconditioner__CCE(mr_adc):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nextern = mr_adc.nextern

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x
        e_extern = mr_adc.mo_energy.e

        precond_cce =- einsum('A,AA,II,JJ->IJA', e_extern, np.identity(nextern), np.identity(ncvs), np.identity(ncvs), optimize = einsum_type)
        precond_cce += einsum('I,AA,II,JJ->IJA', e_cvs, np.identity(nextern), np.identity(ncvs), np.identity(ncvs), optimize = einsum_type)
        precond_cce += einsum('J,AA,II,JJ->IJA', e_cvs, np.identity(nextern), np.identity(ncvs), np.identity(ncvs), optimize = einsum_type)

        mr_adc.log.timer_debug("computing preconditioner CCE", *cput1)

        return precond_cce

    def compute_preconditioner__CAE(mr_adc):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nextern = mr_adc.nextern

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Overlap Matrices
        S12_cae = mr_adc.S12.cae

        precond_cae =- 1/2 * einsum('A,AA,II,XY->IAXY', e_extern, np.identity(nextern), np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_cae += 1/2 * einsum('I,AA,II,XY->IAXY', e_cvs, np.identity(nextern), np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_cae += 1/2 * einsum('Xx,AA,II,Yx->IAXY', h_aa, np.identity(nextern), np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_cae += 1/2 * einsum('Xxyz,AA,II,Yyxz->IAXY', v_aaaa, np.identity(nextern), np.identity(ncvs), rdm_ccaa, optimize = einsum_type)

        precond_cae = einsum("IAXY,XP,YP->IPA", precond_cae, S12_cae, S12_cae, optimize = einsum_type)

        mr_adc.log.timer_debug("computing preconditioner CAE", *cput1)

        return precond_cae

    def compute_preconditioner__CCA(mr_adc):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        ncas = mr_adc.ncas

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Overlap Matrices
        S12_cca = mr_adc.S12.cca

        precond_cca =- einsum('XY,II,JJ->IJXY', h_aa, np.identity(ncvs), np.identity(ncvs), optimize = einsum_type)
        precond_cca += einsum('I,II,JJ,XY->IJXY', e_cvs, np.identity(ncvs), np.identity(ncvs), np.identity(ncas), optimize = einsum_type)
        precond_cca += einsum('J,II,JJ,XY->IJXY', e_cvs, np.identity(ncvs), np.identity(ncvs), np.identity(ncas), optimize = einsum_type)
        precond_cca -= 1/2 * einsum('I,II,JJ,XY->IJXY', e_cvs, np.identity(ncvs), np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_cca -= 1/2 * einsum('J,II,JJ,XY->IJXY', e_cvs, np.identity(ncvs), np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_cca += 1/2 * einsum('Xx,II,JJ,Yx->IJXY', h_aa, np.identity(ncvs), np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_cca -= einsum('XYxy,II,JJ,xy->IJXY', v_aaaa, np.identity(ncvs), np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_cca += 1/2 * einsum('XxyY,II,JJ,yx->IJXY', v_aaaa, np.identity(ncvs), np.identity(ncvs), rdm_ca, optimize = einsum_type)
        precond_cca += 1/2 * einsum('Xxyz,II,JJ,Yyxz->IJXY', v_aaaa, np.identity(ncvs), np.identity(ncvs), rdm_ccaa, optimize = einsum_type)

        precond_cca = einsum("IJXY,XP,YP->IJP", precond_cca, S12_cca, S12_cca, optimize = einsum_type)

        mr_adc.log.timer_debug("computing preconditioner CCA", *cput1)

        return precond_cca

    def compute_preconditioner__CVE(mr_adc):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        nextern = mr_adc.nextern

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x
        e_val = mr_adc.mo_energy.v
        e_extern = mr_adc.mo_energy.e

        precond_cve =- einsum('A,AA,II,JJ->IJA', e_extern, np.identity(nextern), np.identity(ncvs), np.identity(nval), optimize = einsum_type)
        precond_cve += einsum('I,AA,II,JJ->IJA', e_cvs, np.identity(nextern), np.identity(ncvs), np.identity(nval), optimize = einsum_type)
        precond_cve += einsum('J,AA,II,JJ->IJA', e_val, np.identity(nextern), np.identity(ncvs), np.identity(nval), optimize = einsum_type)

        mr_adc.log.timer_debug("computing preconditioner CVE", *cput1)

        return precond_cve

    def compute_preconditioner__CVA(mr_adc):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x
        e_val = mr_adc.mo_energy.v

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Overlap Matrices
        S12_cca = mr_adc.S12.cca

        precond_cva =- einsum('XY,II,JJ->IJXY', h_aa, np.identity(ncvs), np.identity(nval), optimize = einsum_type)
        precond_cva += einsum('I,II,JJ,XY->IJXY', e_cvs, np.identity(ncvs), np.identity(nval), np.identity(ncas), optimize = einsum_type)
        precond_cva += einsum('J,II,JJ,XY->IJXY', e_val, np.identity(ncvs), np.identity(nval), np.identity(ncas), optimize = einsum_type)
        precond_cva -= 1/2 * einsum('I,II,JJ,XY->IJXY', e_cvs, np.identity(ncvs), np.identity(nval), rdm_ca, optimize = einsum_type)
        precond_cva -= 1/2 * einsum('J,II,JJ,XY->IJXY', e_val, np.identity(ncvs), np.identity(nval), rdm_ca, optimize = einsum_type)
        precond_cva += 1/2 * einsum('Xx,II,JJ,Yx->IJXY', h_aa, np.identity(ncvs), np.identity(nval), rdm_ca, optimize = einsum_type)
        precond_cva -= einsum('XYxy,II,JJ,xy->IJXY', v_aaaa, np.identity(ncvs), np.identity(nval), rdm_ca, optimize = einsum_type)
        precond_cva += 1/2 * einsum('XxyY,II,JJ,yx->IJXY', v_aaaa, np.identity(ncvs), np.identity(nval), rdm_ca, optimize = einsum_type)
        precond_cva += 1/2 * einsum('Xxyz,II,JJ,Yyxz->IJXY', v_aaaa, np.identity(ncvs), np.identity(nval), rdm_ccaa, optimize = einsum_type)

        precond_cva = einsum("IJXY,XP,YP->IJP", precond_cva, S12_cca, S12_cca, optimize = einsum_type)

        mr_adc.log.timer_debug("computing preconditioner CVA", *cput1)

        return precond_cva

    # Compute preconditioner diagonal blocks
    ## CAA preconditioner
    precond_caa = compute_preconditioner__CAA(mr_adc)

    ## CCE preconditioner
    precond_cce = compute_preconditioner__CCE(mr_adc)

    ## CAE preconditioner
    precond_cae = compute_preconditioner__CAE(mr_adc)

    ## CCA preconditioner
    precond_cca = compute_preconditioner__CCA(mr_adc)

    # Build the preconditioner
    precond = np.zeros(mr_adc.h_orth.dim)

    precond[ho_s_c_caa:ho_f_c_caa] = precond_caa.reshape(-1)

    precond[ho_s_cce__aaa:ho_f_cce__aaa] = precond_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1)
    precond[ho_s_cce__abb:ho_f_cce__abb] = precond_cce.reshape(-1)

    precond[ho_s_cae__aaa:ho_f_cae__aaa] = precond_cae.reshape(-1)
    precond[ho_s_cae__abb:ho_f_cae__abb] = precond_cae.reshape(-1)
    precond[ho_s_cae__bab:ho_f_cae__bab] = precond_cae.reshape(-1)

    precond[ho_s_cca__aaa:ho_f_cca__aaa] = precond_cca[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1)
    precond[ho_s_cca__abb:ho_f_cca__abb] = precond_cca.reshape(-1)

    if nval > 0:

        ## Excitation Manifolds
        ho_s_cve__aaa = mr_adc.h_orth.s_cve__aaa
        ho_f_cve__aaa = mr_adc.h_orth.f_cve__aaa
        ho_s_cve__abb = mr_adc.h_orth.s_cve__abb
        ho_f_cve__abb = mr_adc.h_orth.f_cve__abb
        ho_s_cve__bab = mr_adc.h_orth.s_cve__bab
        ho_f_cve__bab = mr_adc.h_orth.f_cve__bab

        ho_s_cva__aaa = mr_adc.h_orth.s_cva__aaa
        ho_f_cva__aaa = mr_adc.h_orth.f_cva__aaa
        ho_s_cva__abb = mr_adc.h_orth.s_cva__abb
        ho_f_cva__abb = mr_adc.h_orth.f_cva__abb
        ho_s_cva__bab = mr_adc.h_orth.s_cva__bab
        ho_f_cva__bab = mr_adc.h_orth.f_cva__bab

        # Compute preconditioner diagonal blocks
        ## CVE preconditioner
        precond_cve = compute_preconditioner__CVE(mr_adc)

        ## CVA preconditioner
        precond_cva = compute_preconditioner__CVA(mr_adc)

        # Build the preconditioner
        precond[ho_s_cve__aaa:ho_f_cve__aaa] = precond_cve.reshape(-1)
        precond[ho_s_cve__abb:ho_f_cve__abb] = precond_cve.reshape(-1)
        precond[ho_s_cve__bab:ho_f_cve__bab] = precond_cve.reshape(-1)

        precond[ho_s_cva__aaa:ho_f_cva__aaa] = precond_cva.reshape(-1)
        precond[ho_s_cva__abb:ho_f_cva__abb] = precond_cva.reshape(-1)
        precond[ho_s_cva__bab:ho_f_cva__bab] = precond_cva.reshape(-1)

    # Multiply by -1.0, since we are solving for -M C = -S C E
    precond *= (-1.0)

    mr_adc.log.timer("computing preconditioner", *cput0)

    return precond

def apply_S_12(mr_adc, X, transpose = False):

    # Einsum definition from kernel
    einsum = mr_adc.interface.einsum
    einsum_type = mr_adc.interface.einsum_type

    # Variables from kernel
    ncvs = mr_adc.ncvs
    nval = mr_adc.nval
    ncas = mr_adc.ncas
    nextern = mr_adc.nextern

    ## Overlap Matrices
    S12_c_caa = mr_adc.S12.c_caa
    S12_cae = mr_adc.S12.cae
    S12_cca = mr_adc.S12.cca

    ## Excitation Manifolds
    s_c = mr_adc.h0.s_c
    f_c = mr_adc.h0.f_c

    s_cce = mr_adc.h1.s_cce
    f_cce = mr_adc.h1.f_cce
    s_cca = mr_adc.h1.s_cca
    f_cca = mr_adc.h1.f_cca

    s_caa__aaa = mr_adc.h1.s_caa__aaa
    f_caa__aaa = mr_adc.h1.f_caa__aaa
    s_caa__abb = mr_adc.h1.s_caa__abb
    f_caa__abb = mr_adc.h1.f_caa__abb
    s_caa__bab = mr_adc.h1.s_caa__bab
    f_caa__bab = mr_adc.h1.f_caa__bab

    s_cae__aaa = mr_adc.h1.s_cae__aaa
    f_cae__aaa = mr_adc.h1.f_cae__aaa
    s_cae__abb = mr_adc.h1.s_cae__abb
    f_cae__abb = mr_adc.h1.f_cae__abb
    s_cae__bab = mr_adc.h1.s_cae__bab
    f_cae__bab = mr_adc.h1.f_cae__bab

    ho_s_c_caa = mr_adc.h_orth.s_c_caa
    ho_f_c_caa = mr_adc.h_orth.f_c_caa

    ho_s_cce = mr_adc.h_orth.s_cce
    ho_f_cce = mr_adc.h_orth.f_cce
    ho_s_cca = mr_adc.h_orth.s_cca
    ho_f_cca = mr_adc.h_orth.f_cca

    ho_s_cae__aaa = mr_adc.h_orth.s_cae__aaa
    ho_f_cae__aaa = mr_adc.h_orth.f_cae__aaa
    ho_s_cae__abb = mr_adc.h_orth.s_cae__abb
    ho_f_cae__abb = mr_adc.h_orth.f_cae__abb
    ho_s_cae__bab = mr_adc.h_orth.s_cae__bab
    ho_f_cae__bab = mr_adc.h_orth.f_cae__bab

    # Active indices manifolds
    n_aa = ncas * ncas

    s_aa = 1
    f_aa = s_aa + n_aa
    s_bb = f_aa
    f_bb = s_bb + n_aa
    s_ab = f_bb
    f_ab = s_ab + n_aa

    Xt = None

    if transpose:
        if (X.shape[0] != (mr_adc.h0.dim + mr_adc.h1.dim)):
            raise Exception("Dimensions do not match when applying S_12 transpose")

        Xt = np.zeros(mr_adc.h_orth.dim)

        ## C and CAA -> C_CAA
        temp = np.zeros((ncvs, S12_c_caa.shape[0]))
        temp[:, 0] = X[s_c:f_c].copy()
        temp[:, s_aa:f_aa] = X[s_caa__aaa:f_caa__aaa].reshape(ncvs, -1).copy()
        temp[:, s_bb:f_bb] = X[s_caa__abb:f_caa__abb].reshape(ncvs, -1).copy()
        temp[:, s_ab:f_ab] = X[s_caa__bab:f_caa__bab].reshape(ncvs, -1).copy()

        Xt[ho_s_c_caa:ho_f_c_caa] = np.dot(temp, S12_c_caa).reshape(-1).copy()

        ## CCE
        Xt[ho_s_cce:ho_f_cce] = X[s_cce:f_cce].copy()

        ## CAE
        temp = X[s_cae__aaa:f_cae__aaa].reshape(ncvs, S12_cae.shape[0], nextern).copy()
        Xt[ho_s_cae__aaa:ho_f_cae__aaa] = einsum("IXA,XP->IPA", temp, S12_cae, optimize = einsum_type).reshape(-1).copy()

        temp = X[s_cae__abb:f_cae__abb].reshape(ncvs, S12_cae.shape[0], nextern).copy()
        Xt[ho_s_cae__abb:ho_f_cae__abb] = einsum("IXA,XP->IPA", temp, S12_cae, optimize = einsum_type).reshape(-1).copy()

        temp = X[s_cae__bab:f_cae__bab].reshape(ncvs, S12_cae.shape[0], nextern).copy()
        Xt[ho_s_cae__bab:ho_f_cae__bab] = einsum("IXA,XP->IPA", temp, S12_cae, optimize = einsum_type).reshape(-1).copy()

        ## CCA
        temp = X[s_cca:f_cca].reshape(-1, S12_cca.shape[0]).copy()
        Xt[ho_s_cca:ho_f_cca] = einsum("IX,XP->IP", temp, S12_cca, optimize = einsum_type).reshape(-1).copy()

        if nval > 0:

            ## Excitation Manifolds
            s_cve = mr_adc.h1.s_cve
            f_cve = mr_adc.h1.f_cve

            s_cva = mr_adc.h1.s_cva
            f_cva = mr_adc.h1.f_cva

            ho_s_cve = mr_adc.h_orth.s_cve
            ho_f_cve = mr_adc.h_orth.f_cve

            ho_s_cva = mr_adc.h_orth.s_cva
            ho_f_cva = mr_adc.h_orth.f_cva

            ## CVE
            Xt[ho_s_cve:ho_f_cve] = X[s_cve:f_cve].copy()

            ## CVA
            temp = X[s_cva:f_cva].reshape(-1, S12_cca.shape[0]).copy()
            Xt[ho_s_cva:ho_f_cva] = einsum("IX,XP->IP", temp, S12_cca, optimize = einsum_type).reshape(-1).copy()

    else:
        if (X.shape[0] != (mr_adc.h_orth.dim)):
            raise Exception("Dimensions do not match when applying S_12")

        Xt = np.zeros(mr_adc.h0.dim + mr_adc.h1.dim)

        ## C_CAA -> C and CAA
        temp = X[ho_s_c_caa:ho_f_c_caa].reshape(ncvs, S12_c_caa.shape[1]).copy()
        temp = np.dot(temp, S12_c_caa.T)
        Xt[s_c:f_c] = temp[:,0].copy()

        Xt[s_caa__aaa:f_caa__aaa] = temp[:, s_aa:f_aa].reshape(-1).copy()
        Xt[s_caa__abb:f_caa__abb] = temp[:, s_bb:f_bb].reshape(-1).copy()
        Xt[s_caa__bab:f_caa__bab] = temp[:, s_ab:f_ab].reshape(-1).copy()

        ## CCE
        Xt[s_cce:f_cce] = X[ho_s_cce:ho_f_cce].copy()

        ## CAE
        temp = X[ho_s_cae__aaa:ho_f_cae__aaa].reshape(ncvs, S12_cae.shape[1], nextern).copy()
        Xt[s_cae__aaa:f_cae__aaa] = einsum("IPA,XP->IXA", temp, S12_cae, optimize = einsum_type).reshape(-1).copy()

        temp = X[ho_s_cae__abb:ho_f_cae__abb].reshape(ncvs, S12_cae.shape[1], nextern).copy()
        Xt[s_cae__abb:f_cae__abb] = einsum("IPA,XP->IXA", temp, S12_cae, optimize = einsum_type).reshape(-1).copy()

        temp = X[ho_s_cae__bab:ho_f_cae__bab].reshape(ncvs, S12_cae.shape[1], nextern).copy()
        Xt[s_cae__bab:f_cae__bab] = einsum("IPA,XP->IXA", temp, S12_cae, optimize = einsum_type).reshape(-1).copy()

        ## CCA
        temp = X[ho_s_cca:ho_f_cca].reshape(-1, S12_cca.shape[1]).copy()
        Xt[s_cca:f_cca] = einsum("IP,XP->IX", temp, S12_cca, optimize = einsum_type).reshape(-1).copy()

        if nval > 0:

            ## Excitation Manifolds
            s_cve = mr_adc.h1.s_cve
            f_cve = mr_adc.h1.f_cve

            s_cva = mr_adc.h1.s_cva
            f_cva = mr_adc.h1.f_cva

            ho_s_cve = mr_adc.h_orth.s_cve
            ho_f_cve = mr_adc.h_orth.f_cve

            ho_s_cva = mr_adc.h_orth.s_cva
            ho_f_cva = mr_adc.h_orth.f_cva

            # CVE
            Xt[s_cve:f_cve] = X[ho_s_cve:ho_f_cve].copy()

            ## CVA
            temp = X[ho_s_cva:ho_f_cva].reshape(-1, S12_cca.shape[1]).copy()
            Xt[s_cva:f_cva] = einsum("IP,XP->IX", temp, S12_cca, optimize = einsum_type).reshape(-1).copy()

    return Xt

def compute_sigma_vector(mr_adc, Xt):

    cput0 = (logger.process_clock(), logger.perf_counter())

    # Variables from kernel
    ncvs = mr_adc.ncvs
    nval = mr_adc.nval
    ncas = mr_adc.ncas
    nextern = mr_adc.nextern

    ## Indices
    cvs_tril_ind = np.tril_indices(ncvs, k=-1)

    # Matrix Blocks
    M_00 = mr_adc.M_00

    M_01_c_caa = mr_adc.M_01.c_caa
    M_01_c_cce = mr_adc.M_01.c_cce
    M_01_c_cae = mr_adc.M_01.c_cae
    M_01_c_cca = mr_adc.M_01.c_cca

    # Define functions to compute sigma vector blocks
    ## Zeroth-order h1-h1 contributions
    def compute_sigma_vector__H0__h1_h1__CAA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        sigma_caa  = 1/2 * einsum('KxZ,K,Wx->KWZ', X_aaa, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,K,WyZx->KWZ', X_aaa, e_cvs, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,K,WyxZ->KWZ', X_aaa, e_cvs, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KxZ,xy,Wy->KWZ', X_aaa, h_aa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,xz,WyZz->KWZ', X_aaa, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,xz,WyzZ->KWZ', X_aaa, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxy,Zy,Wx->KWZ', X_aaa, h_aa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,yz,WzZx->KWZ', X_aaa, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,yz,WzxZ->KWZ', X_aaa, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KxZ,xyzw,Wzyw->KWZ', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,Zzxw,Wywz->KWZ', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,Zzxw,Wyzw->KWZ', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,xzwu,WywZzu->KWZ', X_aaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,xzwu,WywzZu->KWZ', X_aaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,Zzwy,Wwzx->KWZ', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,Zzwy,Wwxz->KWZ', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxy,Zyzw,Wzxw->KWZ', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,yzwu,WzuZxw->KWZ', X_aaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,yzwu,WzuxZw->KWZ', X_aaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxy,K,WyZx->KWZ', X_abb, e_cvs, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,K,WyxZ->KWZ', X_abb, e_cvs, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxy,xz,WyZz->KWZ', X_abb, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,xz,WyzZ->KWZ', X_abb, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxy,yz,WzZx->KWZ', X_abb, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,yz,WzxZ->KWZ', X_abb, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,Zzxw,Wywz->KWZ', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxy,Zzxw,Wyzw->KWZ', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxy,xzwu,WywZzu->KWZ', X_abb, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,xzwu,WywzZu->KWZ', X_abb, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxy,Zzwy,Wwzx->KWZ', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,Zzwy,Wwxz->KWZ', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxy,yzwu,WzuZxw->KWZ', X_abb, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,yzwu,WzuxZw->KWZ', X_abb, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_caa__aaa:f_caa__aaa] += sigma_caa.reshape(-1).copy()

        sigma_caa  = 1/3 * einsum('Kxy,K,WyZx->KWZ', X_aaa, e_cvs, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,K,WyxZ->KWZ', X_aaa, e_cvs, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxy,xz,WyZz->KWZ', X_aaa, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,xz,WyzZ->KWZ', X_aaa, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxy,yz,WzZx->KWZ', X_aaa, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,yz,WzxZ->KWZ', X_aaa, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,Zzxw,Wywz->KWZ', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxy,Zzxw,Wyzw->KWZ', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxy,xzwu,WywZzu->KWZ', X_aaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,xzwu,WywzZu->KWZ', X_aaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxy,Zzwy,Wwzx->KWZ', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,Zzwy,Wwxz->KWZ', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxy,yzwu,WzuZxw->KWZ', X_aaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,yzwu,WzuxZw->KWZ', X_aaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KxZ,K,Wx->KWZ', X_abb, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,K,WyZx->KWZ', X_abb, e_cvs, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,K,WyxZ->KWZ', X_abb, e_cvs, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KxZ,xy,Wy->KWZ', X_abb, h_aa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,xz,WyZz->KWZ', X_abb, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,xz,WyzZ->KWZ', X_abb, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxy,Zy,Wx->KWZ', X_abb, h_aa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,yz,WzZx->KWZ', X_abb, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,yz,WzxZ->KWZ', X_abb, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KxZ,xyzw,Wzyw->KWZ', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,Zzxw,Wywz->KWZ', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,Zzxw,Wyzw->KWZ', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,xzwu,WywZzu->KWZ', X_abb, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,xzwu,WywzZu->KWZ', X_abb, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,Zzwy,Wwzx->KWZ', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,Zzwy,Wwxz->KWZ', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxy,Zyzw,Wzxw->KWZ', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,yzwu,WzuZxw->KWZ', X_abb, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,yzwu,WzuxZw->KWZ', X_abb, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_caa__abb:f_caa__abb] += sigma_caa.reshape(-1).copy()

        sigma_caa  = 1/2 * einsum('KxZ,K,Wx->KWZ', X_bab, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,K,WyZx->KWZ', X_bab, e_cvs, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxy,K,WyxZ->KWZ', X_bab, e_cvs, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KxZ,xy,Wy->KWZ', X_bab, h_aa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,xz,WyZz->KWZ', X_bab, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxy,xz,WyzZ->KWZ', X_bab, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxy,Zy,Wx->KWZ', X_bab, h_aa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,yz,WzZx->KWZ', X_bab, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxy,yz,WzxZ->KWZ', X_bab, h_aa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KxZ,xyzw,Wzyw->KWZ', X_bab, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxy,Zzxw,Wywz->KWZ', X_bab, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,Zzxw,Wyzw->KWZ', X_bab, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,xzwu,WywZuz->KWZ', X_bab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,xzwu,WywuZz->KWZ', X_bab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,xzwu,WywuzZ->KWZ', X_bab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,xzwu,WywzZu->KWZ', X_bab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,xzwu,WywzuZ->KWZ', X_bab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,Zzwy,Wwzx->KWZ', X_bab, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxy,Zzwy,Wwxz->KWZ', X_bab, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxy,Zyzw,Wzxw->KWZ', X_bab, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,yzwu,WzuZwx->KWZ', X_bab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,yzwu,WzuwZx->KWZ', X_bab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,yzwu,WzuwxZ->KWZ', X_bab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxy,yzwu,WzuxZw->KWZ', X_bab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxy,yzwu,WzuxwZ->KWZ', X_bab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_caa__bab:f_caa__bab] += sigma_caa.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H0 h1-h1 CAA", *cput1)

    def compute_sigma_vector__H0__h1_h1__CCE(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x
        e_extern = mr_adc.mo_energy.e

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce =- einsum('KLB,B->KLB', X_aaa, e_extern, optimize = einsum_type)
        sigma_cce += einsum('KLB,K->KLB', X_aaa, e_cvs, optimize = einsum_type)
        sigma_cce += einsum('KLB,L->KLB', X_aaa, e_cvs, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cce =- einsum('KLB,B->KLB', X_abb, e_extern, optimize = einsum_type)
        sigma_cce += einsum('KLB,K->KLB', X_abb, e_cvs, optimize = einsum_type)
        sigma_cce += einsum('KLB,L->KLB', X_abb, e_cvs, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H0 h1-h1 CCE", *cput1)

    def compute_sigma_vector__H0__h1_h1__CAE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae =- 1/2 * einsum('KxB,B,Zx->KZB', X_aaa, e_extern, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KxB,K,Zx->KZB', X_aaa, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KxB,xy,Zy->KZB', X_aaa, h_aa, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KxB,xyzw,Zzyw->KZB', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae =- 1/2 * einsum('KxB,B,Zx->KZB', X_abb, e_extern, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KxB,K,Zx->KZB', X_abb, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KxB,xy,Zy->KZB', X_abb, h_aa, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KxB,xyzw,Zzyw->KZB', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()

        sigma_cae =- 1/2 * einsum('KxB,B,Zx->KZB', X_bab, e_extern, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KxB,K,Zx->KZB', X_bab, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KxB,xy,Zy->KZB', X_bab, h_aa, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KxB,xyzw,Zzyw->KZB', X_bab, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H0 h1-h1 CAE", *cput1)

    def compute_sigma_vector__H0__h1_h1__CCA(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cca  = einsum('KLW,K->KLW', X_aaa, e_cvs, optimize = einsum_type)
        sigma_cca += einsum('KLW,L->KLW', X_aaa, e_cvs, optimize = einsum_type)
        sigma_cca -= einsum('KLx,Wx->KLW', X_aaa, h_aa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLx,K,Wx->KLW', X_aaa, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLx,L,Wx->KLW', X_aaa, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLx,xy,Wy->KLW', X_aaa, h_aa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLx,Wyzx,zy->KLW', X_aaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KLx,Wxyz,yz->KLW', X_aaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLx,xyzw,Wzyw->KLW', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cca__aaa:f_cca__aaa] += sigma_cca[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cca  = einsum('KLW,K->KLW', X_abb, e_cvs, optimize = einsum_type)
        sigma_cca += einsum('KLW,L->KLW', X_abb, e_cvs, optimize = einsum_type)
        sigma_cca -= einsum('KLx,Wx->KLW', X_abb, h_aa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLx,K,Wx->KLW', X_abb, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLx,L,Wx->KLW', X_abb, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLx,xy,Wy->KLW', X_abb, h_aa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLx,Wyzx,zy->KLW', X_abb, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KLx,Wxyz,yz->KLW', X_abb, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLx,xyzw,Wzyw->KLW', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cca__abb:f_cca__abb] += sigma_cca.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H0 h1-h1 CCA", *cput1)

    def compute_sigma_vector__H0__h1_h1__CVE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x
        e_val = mr_adc.mo_energy.v
        e_extern = mr_adc.mo_energy.e

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        sigma_cve =- einsum('KLB,B->KLB', X_aaa, e_extern, optimize = einsum_type)
        sigma_cve += einsum('KLB,K->KLB', X_aaa, e_cvs, optimize = einsum_type)
        sigma_cve += einsum('KLB,L->KLB', X_aaa, e_val, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve =- einsum('KLB,B->KLB', X_abb, e_extern, optimize = einsum_type)
        sigma_cve += einsum('KLB,K->KLB', X_abb, e_cvs, optimize = einsum_type)
        sigma_cve += einsum('KLB,L->KLB', X_abb, e_val, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        sigma_cve =- einsum('KLB,B->KLB', X_bab, e_extern, optimize = einsum_type)
        sigma_cve += einsum('KLB,K->KLB', X_bab, e_cvs, optimize = einsum_type)
        sigma_cve += einsum('KLB,L->KLB', X_bab, e_val, optimize = einsum_type)
        sigma[s_cve__bab:f_cve__bab] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H0 h1-h1 CVE", *cput1)

    def compute_sigma_vector__H0__h1_h1__CVA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x
        e_val = mr_adc.mo_energy.v

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        sigma_cva  = einsum('KLW,K->KLW', X_aaa, e_cvs, optimize = einsum_type)
        sigma_cva += einsum('KLW,L->KLW', X_aaa, e_val, optimize = einsum_type)
        sigma_cva -= einsum('KLx,Wx->KLW', X_aaa, h_aa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLx,K,Wx->KLW', X_aaa, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLx,L,Wx->KLW', X_aaa, e_val, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLx,xy,Wy->KLW', X_aaa, h_aa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLx,Wyzx,zy->KLW', X_aaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLx,Wxyz,yz->KLW', X_aaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLx,xyzw,Wzyw->KLW', X_aaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cva__aaa:f_cva__aaa] += sigma_cva.reshape(-1).copy()

        sigma_cva  = einsum('KLW,K->KLW', X_abb, e_cvs, optimize = einsum_type)
        sigma_cva += einsum('KLW,L->KLW', X_abb, e_val, optimize = einsum_type)
        sigma_cva -= einsum('KLx,Wx->KLW', X_abb, h_aa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLx,K,Wx->KLW', X_abb, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLx,L,Wx->KLW', X_abb, e_val, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLx,xy,Wy->KLW', X_abb, h_aa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLx,Wyzx,zy->KLW', X_abb, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLx,Wxyz,yz->KLW', X_abb, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLx,xyzw,Wzyw->KLW', X_abb, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cva__abb:f_cva__abb] += sigma_cva.reshape(-1).copy()

        sigma_cva  = einsum('KLW,K->KLW', X_bab, e_cvs, optimize = einsum_type)
        sigma_cva += einsum('KLW,L->KLW', X_bab, e_val, optimize = einsum_type)
        sigma_cva -= einsum('KLx,Wx->KLW', X_bab, h_aa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLx,K,Wx->KLW', X_bab, e_cvs, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLx,L,Wx->KLW', X_bab, e_val, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLx,xy,Wy->KLW', X_bab, h_aa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLx,Wyzx,zy->KLW', X_bab, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLx,Wxyz,yz->KLW', X_bab, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLx,xyzw,Wzyw->KLW', X_bab, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cva__bab:f_cva__bab] += sigma_cva.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H0 h1-h1 CVA", *cput1)

    ## First-order corrections to h1-h1 block
    def compute_sigma_vector__H1__h1_h1__CAA_CAA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Two-electron integrals
        v_xxaa = mr_adc.v2e.xxaa

        v_xaax = mr_adc.v2e.xaax

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        sigma_caa  = 1/2 * einsum('ixZ,Kiyz,Wzxy->KWZ', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixZ,Kyzi,Wyzx->KWZ', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixZ,Kyzi,Wyxz->KWZ', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,KZzi,Wyxz->KWZ', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,KZzi,Wyzx->KWZ', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,KizZ,Wyxz->KWZ', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,KizZ,Wyzx->KWZ', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kizw,WywZxz->KWZ', X_aaa, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kizw,WywxZz->KWZ', X_aaa, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,WyzZwx->KWZ', X_aaa, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,WyzwxZ->KWZ', X_aaa, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,WyzxZw->KWZ', X_aaa, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ixy,KZyi,Wx->KWZ', X_aaa, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ixy,KiyZ,Wx->KWZ', X_aaa, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kiyz,WzZx->KWZ', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kiyz,WzxZ->KWZ', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzyi,WzZx->KWZ', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kzyi,WzxZ->KWZ', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,KZzi,Wyxz->KWZ', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixy,KZzi,Wyzx->KWZ', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,KizZ,Wyxz->KWZ', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixy,KizZ,Wyzx->KWZ', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixy,Kizw,WywZxz->KWZ', X_abb, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kizw,WywxZz->KWZ', X_abb, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzZwx->KWZ', X_abb, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzwi,WyzZxw->KWZ', X_abb, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,WyzwxZ->KWZ', X_abb, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzxZw->KWZ', X_abb, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixy,Kiyz,WzZx->KWZ', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kiyz,WzxZ->KWZ', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixy,KZzi,Wyxz->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,KZzi,Wyzx->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,WyzZwx->KWZ', X_bab, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzwxZ->KWZ', X_bab, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzxZw->KWZ', X_bab, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzwi,WyzxwZ->KWZ', X_bab, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ixy,KZyi,Wx->KWZ', X_bab, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzyi,WzZx->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kzyi,WzxZ->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ixZ,Kiyz,yz,Wx->KWZ', X_aaa, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/4 * einsum('ixZ,Kyzi,zy,Wx->KWZ', X_aaa, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kizw,zw,WyZx->KWZ', X_aaa, v_xxaa, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kizw,zw,WyxZ->KWZ', X_aaa, v_xxaa, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,wz,WyZx->KWZ', X_aaa, v_xaax, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,wz,WyxZ->KWZ', X_aaa, v_xaax, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixy,Kizw,zw,WyZx->KWZ', X_abb, v_xxaa, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kizw,zw,WyxZ->KWZ', X_abb, v_xxaa, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kzwi,wz,WyZx->KWZ', X_abb, v_xaax, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,wz,WyxZ->KWZ', X_abb, v_xaax, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma[s_caa__aaa:f_caa__aaa] += sigma_caa.reshape(-1).copy()

        sigma_caa  = 1/6 * einsum('ixy,KizZ,Wyxz->KWZ', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixy,KizZ,Wyzx->KWZ', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixy,Kizw,WywZxz->KWZ', X_aaa, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kizw,WywxZz->KWZ', X_aaa, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,WyzZwx->KWZ', X_aaa, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzwi,WyzZxw->KWZ', X_aaa, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzwxZ->KWZ', X_aaa, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzxZw->KWZ', X_aaa, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixy,Kiyz,WzZx->KWZ', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kiyz,WzxZ->KWZ', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixy,Kzyi,WzZx->KWZ', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzyi,WzxZ->KWZ', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ixZ,Kiyz,Wzxy->KWZ', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixZ,Kyzi,Wyzx->KWZ', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixZ,Kyzi,Wyxz->KWZ', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,KizZ,Wyxz->KWZ', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,KizZ,Wyzx->KWZ', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kizw,WywZxz->KWZ', X_abb, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kizw,WywxZz->KWZ', X_abb, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzZwx->KWZ', X_abb, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzwi,WyzZxw->KWZ', X_abb, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzwxZ->KWZ', X_abb, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,WyzxZw->KWZ', X_abb, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ixy,KiyZ,Wx->KWZ', X_abb, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kiyz,WzZx->KWZ', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kiyz,WzxZ->KWZ', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixZ,Kyzi,Wyzx->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixZ,Kyzi,Wyxz->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,WyzZwx->KWZ', X_bab, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzwi,WyzwZx->KWZ', X_bab, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzwxZ->KWZ', X_bab, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzxZw->KWZ', X_bab, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixy,Kzyi,WzZx->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzyi,WzxZ->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixy,Kizw,zw,WyZx->KWZ', X_aaa, v_xxaa, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kizw,zw,WyxZ->KWZ', X_aaa, v_xxaa, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kzwi,wz,WyZx->KWZ', X_aaa, v_xaax, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,wz,WyxZ->KWZ', X_aaa, v_xaax, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ixZ,Kiyz,yz,Wx->KWZ', X_abb, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/4 * einsum('ixZ,Kyzi,zy,Wx->KWZ', X_abb, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kizw,zw,WyZx->KWZ', X_abb, v_xxaa, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kizw,zw,WyxZ->KWZ', X_abb, v_xxaa, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,wz,WyZx->KWZ', X_abb, v_xaax, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,wz,WyxZ->KWZ', X_abb, v_xaax, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma[s_caa__abb:f_caa__abb] += sigma_caa.reshape(-1).copy()

        sigma_caa  = 1/6 * einsum('ixy,KZzi,Wyxz->KWZ', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,KZzi,Wyzx->KWZ', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzZwx->KWZ', X_aaa, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,WyzwxZ->KWZ', X_aaa, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzxZw->KWZ', X_aaa, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzwi,WyzxwZ->KWZ', X_aaa, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ixy,KZyi,Wx->KWZ', X_aaa, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kzyi,WzZx->KWZ', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixy,Kzyi,WzxZ->KWZ', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixZ,Kyzi,Wyzx->KWZ', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixZ,Kyzi,Wyxz->KWZ', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,KZzi,Wyxz->KWZ', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixy,KZzi,Wyzx->KWZ', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzZwx->KWZ', X_abb, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzwi,WyzwZx->KWZ', X_abb, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,WyzwxZ->KWZ', X_abb, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzxZw->KWZ', X_abb, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ixZ,Kiyz,Wzxy->KWZ', X_bab, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixZ,Kyzi,Wyzx->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixZ,Kyzi,Wyxz->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixy,KZzi,Wyxz->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,KZzi,Wyzx->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixy,KizZ,Wyxz->KWZ', X_bab, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,KizZ,Wyzx->KWZ', X_bab, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kizw,WywZzx->KWZ', X_bab, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kizw,WywxZz->KWZ', X_bab, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kizw,WywxzZ->KWZ', X_bab, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kizw,WywzZx->KWZ', X_bab, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kizw,WywzxZ->KWZ', X_bab, v_xxaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzZwx->KWZ', X_bab, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,WyzwxZ->KWZ', X_bab, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ixy,Kzwi,WyzxZw->KWZ', X_bab, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzwi,WyzxwZ->KWZ', X_bab, v_xaax, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ixy,KZyi,Wx->KWZ', X_bab, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ixy,KiyZ,Wx->KWZ', X_bab, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kiyz,WzZx->KWZ', X_bab, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixy,Kiyz,WzxZ->KWZ', X_bab, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kzyi,WzZx->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixy,Kzyi,WzxZ->KWZ', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ixZ,Kiyz,yz,Wx->KWZ', X_bab, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/4 * einsum('ixZ,Kyzi,zy,Wx->KWZ', X_bab, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixy,Kizw,zw,WyZx->KWZ', X_bab, v_xxaa, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixy,Kizw,zw,WyxZ->KWZ', X_bab, v_xxaa, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ixy,Kzwi,wz,WyZx->KWZ', X_bab, v_xaax, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixy,Kzwi,wz,WyxZ->KWZ', X_bab, v_xaax, rdm_ca, rdm_ccaa, optimize = einsum_type)
        sigma[s_caa__bab:f_caa__bab] += sigma_caa.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CAA-CAA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCE_CAA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxxe = mr_adc.v2e.xxxe

        v_xaae = mr_adc.v2e.xaae
        v_xeaa = mr_adc.v2e.xeaa

        ## Amplitudes
        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce  = 1/2 * einsum('Kxy,LBzx,yz->KLB', X_aaa, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LxzB,yz->KLB', X_aaa, v_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LByz,xz->KLB', X_aaa, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzyB,xz->KLB', X_aaa, v_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KBzx,yz->KLB', X_aaa, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KxzB,yz->KLB', X_aaa, v_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KByz,xz->KLB', X_aaa, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KzyB,xz->KLB', X_aaa, v_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('ixy,KiLB,xy->KLB', X_aaa, v_xxxe, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('ixy,LiKB,xy->KLB', X_aaa, v_xxxe, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LBzx,yz->KLB', X_abb, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LByz,xz->KLB', X_abb, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KBzx,yz->KLB', X_abb, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KByz,xz->KLB', X_abb, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('ixy,KiLB,xy->KLB', X_abb, v_xxxe, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('ixy,LiKB,xy->KLB', X_abb, v_xxxe, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,B,LzBx,yz->KLB', X_aaa, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,B,LzxB,yz->KLB', X_aaa, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,L,LzBx,yz->KLB', X_aaa, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,L,LzxB,yz->KLB', X_aaa, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,B,LyBz,xz->KLB', X_aaa, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,B,LyzB,xz->KLB', X_aaa, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,L,LyBz,xz->KLB', X_aaa, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,L,LyzB,xz->KLB', X_aaa, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,B,KzBx,yz->KLB', X_aaa, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,B,KzxB,yz->KLB', X_aaa, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,K,KzBx,yz->KLB', X_aaa, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,K,KzxB,yz->KLB', X_aaa, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,B,KyBz,xz->KLB', X_aaa, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,B,KyzB,xz->KLB', X_aaa, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,K,KyBz,xz->KLB', X_aaa, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,K,KyzB,xz->KLB', X_aaa, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,xz,LwBz,yw->KLB', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,xz,LwzB,yw->KLB', X_aaa, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,zw,LzBx,yw->KLB', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,zw,LzxB,yw->KLB', X_aaa, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,zw,LyBz,xw->KLB', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,zw,LyzB,xw->KLB', X_aaa, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,yz,LzBw,xw->KLB', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,yz,LzwB,xw->KLB', X_aaa, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,xz,KwBz,yw->KLB', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,xz,KwzB,yw->KLB', X_aaa, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,zw,KzBx,yw->KLB', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,zw,KzxB,yw->KLB', X_aaa, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,zw,KyBz,xw->KLB', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,zw,KyzB,xw->KLB', X_aaa, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,yz,KzBw,xw->KLB', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,yz,KzwB,xw->KLB', X_aaa, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,xuvw,yvuz->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzBw,xuzv,ywuv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,xwuv,yuzv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzBx,zwuv,yuwv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Kxy,LzwB,xuvw,yvuz->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Kxy,LzwB,xuvw,yvzu->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Kxy,LzwB,xuzv,ywuv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Kxy,LzwB,xuzv,ywvu->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzwB,xwuv,yuzv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzxB,zwuv,yuwv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,yuvz,xvuw->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzBw,yuwv,xzuv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,yzuv,xuwv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Kxy,LzwB,yuvz,xvwu->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Kxy,LzwB,yuvz,xvuw->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Kxy,LzwB,yuwv,xzvu->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Kxy,LzwB,yuwv,xzuv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzwB,yzuv,xuwv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LyBz,zwuv,xuwv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LyzB,zwuv,xuwv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KzBw,xuvw,yvuz->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KzBw,xuzv,ywuv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KzBw,xwuv,yuzv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KzBx,zwuv,yuwv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Lxy,KzwB,xuvw,yvuz->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Lxy,KzwB,xuvw,yvzu->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Lxy,KzwB,xuzv,ywuv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Lxy,KzwB,xuzv,ywvu->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KzwB,xwuv,yuzv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KzxB,zwuv,yuwv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KzBw,yuvz,xvuw->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KzBw,yuwv,xzuv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KzBw,yzuv,xuwv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Lxy,KzwB,yuvz,xvwu->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Lxy,KzwB,yuvz,xvuw->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Lxy,KzwB,yuwv,xzvu->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Lxy,KzwB,yuwv,xzuv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KzwB,yzuv,xuwv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KyBz,zwuv,xuwv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KyzB,zwuv,xuwv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,B,LzBx,yz->KLB', X_abb, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,L,LzBx,yz->KLB', X_abb, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,B,LyBz,xz->KLB', X_abb, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,L,LyBz,xz->KLB', X_abb, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,B,KzBx,yz->KLB', X_abb, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,K,KzBx,yz->KLB', X_abb, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,B,KyBz,xz->KLB', X_abb, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,K,KyBz,xz->KLB', X_abb, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,xz,LwBz,yw->KLB', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,zw,LzBx,yw->KLB', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,zw,LyBz,xw->KLB', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,yz,LzBw,xw->KLB', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,xz,KwBz,yw->KLB', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,zw,KzBx,yw->KLB', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,zw,KyBz,xw->KLB', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,yz,KzBw,xw->KLB', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,xuvw,yvuz->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzBw,xuzv,ywuv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,xwuv,yuzv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzBx,zwuv,yuwv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/3 * einsum('Kxy,LzwB,xuvw,yvuz->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Kxy,LzwB,xuvw,yvzu->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/3 * einsum('Kxy,LzwB,xuzv,ywuv->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Kxy,LzwB,xuzv,ywvu->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,yuvz,xvuw->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzBw,yuwv,xzuv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,yzuv,xuwv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Kxy,LzwB,yuvz,xvwu->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/3 * einsum('Kxy,LzwB,yuvz,xvuw->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Kxy,LzwB,yuwv,xzvu->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/3 * einsum('Kxy,LzwB,yuwv,xzuv->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LyBz,zwuv,xuwv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KzBw,xuvw,yvuz->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KzBw,xuzv,ywuv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KzBw,xwuv,yuzv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KzBx,zwuv,yuwv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/3 * einsum('Lxy,KzwB,xuvw,yvuz->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Lxy,KzwB,xuvw,yvzu->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/3 * einsum('Lxy,KzwB,xuzv,ywuv->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Lxy,KzwB,xuzv,ywvu->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KzBw,yuvz,xvuw->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KzBw,yuwv,xzuv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KzBw,yzuv,xuwv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Lxy,KzwB,yuvz,xvwu->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/3 * einsum('Lxy,KzwB,yuvz,xvuw->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Lxy,KzwB,yuwv,xzvu->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/3 * einsum('Lxy,KzwB,yuwv,xzuv->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KyBz,zwuv,xuwv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cce  = 1/2 * einsum('Kxy,LBzx,yz->KLB', X_aaa, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LByz,xz->KLB', X_aaa, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('ixy,KiLB,xy->KLB', X_aaa, v_xxxe, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LBzx,yz->KLB', X_abb, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LxzB,yz->KLB', X_abb, v_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LByz,xz->KLB', X_abb, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzyB,xz->KLB', X_abb, v_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('ixy,KiLB,xy->KLB', X_abb, v_xxxe, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KxzB,yz->KLB', X_bab, v_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KzyB,xz->KLB', X_bab, v_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,B,LzBx,yz->KLB', X_aaa, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,L,LzBx,yz->KLB', X_aaa, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,B,LyBz,xz->KLB', X_aaa, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,L,LyBz,xz->KLB', X_aaa, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,xz,LwBz,yw->KLB', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,zw,LzBx,yw->KLB', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,zw,LyBz,xw->KLB', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,yz,LzBw,xw->KLB', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,xuvw,yvuz->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzBw,xuzv,ywuv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,xwuv,yuzv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzBx,zwuv,yuwv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/3 * einsum('Kxy,LzwB,xuvw,yvuz->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Kxy,LzwB,xuvw,yvzu->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/3 * einsum('Kxy,LzwB,xuzv,ywuv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Kxy,LzwB,xuzv,ywvu->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,yuvz,xvuw->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzBw,yuwv,xzuv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,yzuv,xuwv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Kxy,LzwB,yuvz,xvwu->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/3 * einsum('Kxy,LzwB,yuvz,xvuw->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Kxy,LzwB,yuwv,xzvu->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/3 * einsum('Kxy,LzwB,yuwv,xzuv->KLB', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LyBz,zwuv,xuwv->KLB', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,B,LzBx,yz->KLB', X_abb, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,B,LzxB,yz->KLB', X_abb, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,L,LzBx,yz->KLB', X_abb, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,L,LzxB,yz->KLB', X_abb, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,B,LyBz,xz->KLB', X_abb, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,B,LyzB,xz->KLB', X_abb, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,L,LyBz,xz->KLB', X_abb, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,L,LyzB,xz->KLB', X_abb, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,xz,LwBz,yw->KLB', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,xz,LwzB,yw->KLB', X_abb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,zw,LzBx,yw->KLB', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,zw,LzxB,yw->KLB', X_abb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,zw,LyBz,xw->KLB', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,zw,LyzB,xw->KLB', X_abb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,yz,LzBw,xw->KLB', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,yz,LzwB,xw->KLB', X_abb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,xuvw,yvuz->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzBw,xuzv,ywuv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,xwuv,yuzv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzBx,zwuv,yuwv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Kxy,LzwB,xuvw,yvuz->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Kxy,LzwB,xuvw,yvzu->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Kxy,LzwB,xuzv,ywuv->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Kxy,LzwB,xuzv,ywvu->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzwB,xwuv,yuzv->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzxB,zwuv,yuwv->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,yuvz,xvuw->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzBw,yuwv,xzuv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LzBw,yzuv,xuwv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Kxy,LzwB,yuvz,xvwu->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Kxy,LzwB,yuvz,xvuw->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Kxy,LzwB,yuwv,xzvu->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Kxy,LzwB,yuwv,xzuv->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LzwB,yzuv,xuwv->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxy,LyBz,zwuv,xuwv->KLB', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kxy,LyzB,zwuv,xuwv->KLB', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,B,KzxB,yz->KLB', X_bab, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,K,KzxB,yz->KLB', X_bab, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,B,KyzB,xz->KLB', X_bab, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,K,KyzB,xz->KLB', X_bab, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,xz,KwzB,yw->KLB', X_bab, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,zw,KzxB,yw->KLB', X_bab, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,zw,KyzB,xw->KLB', X_bab, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,yz,KzwB,xw->KLB', X_bab, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Lxy,KzwB,xuvw,yvuz->KLB', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/3 * einsum('Lxy,KzwB,xuvw,yvzu->KLB', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Lxy,KzwB,xuzv,ywuv->KLB', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/3 * einsum('Lxy,KzwB,xuzv,ywvu->KLB', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KzwB,xwuv,yuzv->KLB', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KzxB,zwuv,yuwv->KLB', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/3 * einsum('Lxy,KzwB,yuvz,xvwu->KLB', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/6 * einsum('Lxy,KzwB,yuvz,xvuw->KLB', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/3 * einsum('Lxy,KzwB,yuwv,xzvu->KLB', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/6 * einsum('Lxy,KzwB,yuwv,xzuv->KLB', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxy,KzwB,yzuv,xuwv->KLB', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxy,KyzB,zwuv,xuwv->KLB', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CCE-CAA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CAA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        h_ae = mr_adc.h1eff.ae

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxae = mr_adc.v2e.xxae
        v_xaex = mr_adc.v2e.xaex

        v_aaae = mr_adc.v2e.aaae

        ## Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae =- 1/2 * einsum('Kxy,yB,Zx->KZB', X_aaa, h_ae, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zxwB,Zywz->KZB', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zxwB,Zyzw->KZB', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,zwyB,Zwxz->KZB', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,Zzwx->KZB', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,Zzxw->KZB', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('ixy,KizB,Zyxz->KZB', X_aaa, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('ixy,KizB,Zyzx->KZB', X_aaa, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('ixy,izBK,Zyxz->KZB', X_aaa, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('ixy,izBK,Zyzx->KZB', X_aaa, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('ixy,KiyB,Zx->KZB', X_aaa, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ixy,iyBK,Zx->KZB', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zxwB,Zywz->KZB', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zxwB,Zyzw->KZB', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,yzwB,Zzwx->KZB', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,Zzxw->KZB', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('ixy,KizB,Zyxz->KZB', X_abb, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('ixy,KizB,Zyzx->KZB', X_abb, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('ixy,izBK,Zyxz->KZB', X_abb, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('ixy,izBK,Zyzx->KZB', X_abb, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('ixy,izBK,Zyxz->KZB', X_bab, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('ixy,izBK,Zyzx->KZB', X_bab, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ixy,iyBK,Zx->KZB', X_bab, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,B,zwxB,Zywz->KZB', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,B,zwxB,Zyzw->KZB', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,B,zywB,Zwxz->KZB', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,B,yB,Zx->KZB', X_aaa, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,B,yzwB,Zwzx->KZB', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,B,yzwB,Zwxz->KZB', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,xz,wuzB,Zyuw->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,xz,wuzB,Zywu->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,uzxB,Zyuw->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,uzxB,Zywu->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,zuxB,Zyuw->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,zuxB,Zywu->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,zw,uyzB,Zwxu->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zw,zyuB,Zuxw->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,yuzB,Zwux->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,yuzB,Zwxu->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,yzuB,Zuwx->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,yzuB,Zuxw->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,yz,wzuB,Zuxw->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,yz,zB,Zx->KZB', X_aaa, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yz,zwuB,Zuwx->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yz,zwuB,Zuxw->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zB,xwzu,Zyuw->KZB', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zB,xwzu,Zywu->KZB', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xuvs,Zyvwzs->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xuvs,Zyvzws->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvsu,Zysvwz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvsu,Zyswvz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvws,Zyusvz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvws,Zyuvsz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvzs,Zyuvws->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvzs,Zyuwvs->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,wuvs,Zyvuzs->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuvs,Zyvzus->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,wuzv,Zyuv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuzv,Zyvu->KZB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,zuvs,Zyvuws->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,zuvs,Zyvwus->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zB,ywuz,Zwux->KZB', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zB,ywuz,Zwxu->KZB', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zB,yzwu,Zuxw->KZB', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvsw,Zuvszx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsw,Zuvxzs->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvsz,Zuvwsx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsz,Zuvxsw->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvus,Zvswxz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvus,Zvsxwz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zwuB,ywvs,Zusxzv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zwuB,ywvz,Zuxv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yzvs,Zuswxv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvs,Zusxwv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yzvw,Zuvx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvw,Zuxv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,zywB,wuvs,Zusxzv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zywB,zuvs,Zwvxus->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,wuvs,Zuszxv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,wuvs,Zusxzv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,zuvs,Zwvuxs->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,zuvs,Zwvxus->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,B,zwxB,Zywz->KZB', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,B,zwxB,Zyzw->KZB', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,B,yzwB,Zwzx->KZB', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,B,yzwB,Zwxz->KZB', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,xz,wuzB,Zyuw->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,xz,wuzB,Zywu->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,uzxB,Zyuw->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zw,uzxB,Zywu->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zw,zuxB,Zyuw->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,zuxB,Zywu->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zw,yuzB,Zwux->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,yuzB,Zwxu->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zw,yzuB,Zuwx->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,yzuB,Zuxw->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,yz,zwuB,Zuwx->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yz,zwuB,Zuxw->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zB,xwzu,Zyuw->KZB', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zB,xwzu,Zywu->KZB', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zwuB,xuvs,Zyvwzs->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xuvs,Zyvzws->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvsu,Zysvzw->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvsu,Zyswvz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvsu,Zyswzv->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvsu,Zyszvw->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvsu,Zyszwv->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvws,Zyusvz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvws,Zyuszv->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvws,Zyuvzs->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvws,Zyuzsv->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvws,Zyuzvs->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvzs,Zyuvws->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zwuB,xvzs,Zyuwvs->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuvs,Zyvsuz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuvs,Zyvszu->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuvs,Zyvusz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,wuvs,Zyvuzs->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuvs,Zyvzsu->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zwxB,wuzv,Zyuv->KZB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,wuzv,Zyvu->KZB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,zuvs,Zyvuws->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zwxB,zuvs,Zyvwus->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zB,ywuz,Zwux->KZB', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zB,ywuz,Zwxu->KZB', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvsw,Zuvszx->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsw,Zuvsxz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsw,Zuvzsx->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsw,Zuvzxs->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsw,Zuvxsz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zwuB,yvsz,Zuvwsx->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvsz,Zuvxsw->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvus,Zvswzx->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvus,Zvswxz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvus,Zvszwx->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvus,Zvszxw->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvus,Zvsxzw->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvs,Zusvwx->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvs,Zusvxw->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvs,Zuswvx->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yzvs,Zuswxv->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvs,Zusxvw->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zwuB,yzvw,Zuvx->KZB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yzvw,Zuxv->KZB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,wuvs,Zusvzx->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,wuvs,Zusvxz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,wuvs,Zuszvx->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,wuvs,Zuszxv->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,wuvs,Zusxvz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,zuvs,Zwvsux->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,zuvs,Zwvsxu->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,zuvs,Zwvusx->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,zuvs,Zwvuxs->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,zuvs,Zwvxsu->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/3 * einsum('Kxy,zxwB,Zywz->KZB', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zxwB,Zyzw->KZB', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,yzwB,Zzwx->KZB', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,Zzxw->KZB', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('ixy,KizB,Zyxz->KZB', X_aaa, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('ixy,KizB,Zyzx->KZB', X_aaa, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,yB,Zx->KZB', X_abb, h_ae, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zxwB,Zywz->KZB', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zxwB,Zyzw->KZB', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,zwyB,Zwxz->KZB', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,Zzwx->KZB', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,Zzxw->KZB', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('ixy,KizB,Zyxz->KZB', X_abb, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('ixy,KizB,Zyzx->KZB', X_abb, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('ixy,KiyB,Zx->KZB', X_abb, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,B,zwxB,Zywz->KZB', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,B,zwxB,Zyzw->KZB', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,B,yzwB,Zwzx->KZB', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,B,yzwB,Zwxz->KZB', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,xz,wuzB,Zyuw->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,xz,wuzB,Zywu->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,uzxB,Zyuw->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zw,uzxB,Zywu->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zw,zuxB,Zyuw->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,zuxB,Zywu->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zw,yuzB,Zwux->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,yuzB,Zwxu->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zw,yzuB,Zuwx->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,yzuB,Zuxw->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,yz,zwuB,Zuwx->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yz,zwuB,Zuxw->KZB', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zB,xwzu,Zyuw->KZB', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zB,xwzu,Zywu->KZB', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zwuB,xuvs,Zyvwzs->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xuvs,Zyvzws->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvsu,Zysvzw->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvsu,Zyswvz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvsu,Zyswzv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvsu,Zyszvw->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvsu,Zyszwv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvws,Zyusvz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvws,Zyuszv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvws,Zyuvzs->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvws,Zyuzsv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvws,Zyuzvs->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvzs,Zyuvws->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zwuB,xvzs,Zyuwvs->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuvs,Zyvsuz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuvs,Zyvszu->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuvs,Zyvusz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,wuvs,Zyvuzs->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuvs,Zyvzsu->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zwxB,wuzv,Zyuv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,wuzv,Zyvu->KZB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,zuvs,Zyvuws->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zwxB,zuvs,Zyvwus->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zB,ywuz,Zwux->KZB', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zB,ywuz,Zwxu->KZB', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvsw,Zuvszx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsw,Zuvsxz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsw,Zuvzsx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsw,Zuvzxs->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsw,Zuvxsz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zwuB,yvsz,Zuvwsx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvsz,Zuvxsw->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvus,Zvswzx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvus,Zvswxz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvus,Zvszwx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvus,Zvszxw->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvus,Zvsxzw->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvs,Zusvwx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvs,Zusvxw->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvs,Zuswvx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yzvs,Zuswxv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvs,Zusxvw->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zwuB,yzvw,Zuvx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yzvw,Zuxv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,wuvs,Zusvzx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,wuvs,Zusvxz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,wuvs,Zuszvx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,wuvs,Zuszxv->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,wuvs,Zusxvz->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,zuvs,Zwvsux->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,zuvs,Zwvsxu->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,zuvs,Zwvusx->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,zuvs,Zwvuxs->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,zuvs,Zwvxsu->KZB', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,B,zwxB,Zywz->KZB', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,B,zwxB,Zyzw->KZB', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,B,zywB,Zwxz->KZB', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,B,yB,Zx->KZB', X_abb, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,B,yzwB,Zwzx->KZB', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,B,yzwB,Zwxz->KZB', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,xz,wuzB,Zyuw->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,xz,wuzB,Zywu->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,uzxB,Zyuw->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,uzxB,Zywu->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,zuxB,Zyuw->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,zuxB,Zywu->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,zw,uyzB,Zwxu->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zw,zyuB,Zuxw->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,yuzB,Zwux->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,yuzB,Zwxu->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,yzuB,Zuwx->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,yzuB,Zuxw->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,yz,wzuB,Zuxw->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,yz,zB,Zx->KZB', X_abb, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yz,zwuB,Zuwx->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yz,zwuB,Zuxw->KZB', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zB,xwzu,Zyuw->KZB', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zB,xwzu,Zywu->KZB', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xuvs,Zyvwzs->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xuvs,Zyvzws->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvsu,Zysvwz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvsu,Zyswvz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvws,Zyusvz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvws,Zyuvsz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvzs,Zyuvws->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvzs,Zyuwvs->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,wuvs,Zyvuzs->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuvs,Zyvzus->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,wuzv,Zyuv->KZB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuzv,Zyvu->KZB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,zuvs,Zyvuws->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,zuvs,Zyvwus->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zB,ywuz,Zwux->KZB', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zB,ywuz,Zwxu->KZB', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zB,yzwu,Zuxw->KZB', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvsw,Zuvszx->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsw,Zuvxzs->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvsz,Zuvwsx->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsz,Zuvxsw->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvus,Zvswxz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvus,Zvsxwz->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zwuB,ywvs,Zusxzv->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zwuB,ywvz,Zuxv->KZB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yzvs,Zuswxv->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvs,Zusxwv->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yzvw,Zuvx->KZB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvw,Zuxv->KZB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,zywB,wuvs,Zusxzv->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zywB,zuvs,Zwvxus->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,wuvs,Zuszxv->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,wuvs,Zusxzv->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,zuvs,Zwvuxs->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,zuvs,Zwvxus->KZB', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/6 * einsum('ixy,izBK,Zyxz->KZB', X_aaa, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('ixy,izBK,Zyzx->KZB', X_aaa, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ixy,iyBK,Zx->KZB', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('ixy,izBK,Zyxz->KZB', X_abb, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('ixy,izBK,Zyzx->KZB', X_abb, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,yB,Zx->KZB', X_bab, h_ae, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zxwB,Zywz->KZB', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zxwB,Zyzw->KZB', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,zwyB,Zwxz->KZB', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,Zzwx->KZB', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,yzwB,Zzxw->KZB', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('ixy,KizB,Zyxz->KZB', X_bab, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('ixy,KizB,Zyzx->KZB', X_bab, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('ixy,izBK,Zyxz->KZB', X_bab, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('ixy,izBK,Zyzx->KZB', X_bab, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('ixy,KiyB,Zx->KZB', X_bab, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ixy,iyBK,Zx->KZB', X_bab, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,B,zwxB,Zywz->KZB', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,B,zwxB,Zyzw->KZB', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,B,zywB,Zwxz->KZB', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,B,yB,Zx->KZB', X_bab, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,B,yzwB,Zwzx->KZB', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,B,yzwB,Zwxz->KZB', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,xz,wuzB,Zyuw->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,xz,wuzB,Zywu->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zw,uzxB,Zyuw->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,uzxB,Zywu->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,zuxB,Zyuw->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zw,zuxB,Zywu->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,zw,uyzB,Zwxu->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zw,zyuB,Zuxw->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zw,yuzB,Zwux->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zw,yuzB,Zwxu->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zw,yzuB,Zuwx->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zw,yzuB,Zuxw->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,yz,wzuB,Zuxw->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,yz,zB,Zx->KZB', X_bab, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yz,zwuB,Zuwx->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,yz,zwuB,Zuxw->KZB', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zB,xwzu,Zyuw->KZB', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zB,xwzu,Zywu->KZB', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xuvs,Zyvswz->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xuvs,Zyvszw->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xuvs,Zyvwsz->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xuvs,Zyvzsw->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xuvs,Zyvzws->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zwuB,xvsu,Zysvwz->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvsu,Zyswvz->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvws,Zyusvz->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zwuB,xvws,Zyuvsz->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvzs,Zyusvw->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvzs,Zyuswv->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvzs,Zyuvsw->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,xvzs,Zyuvws->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,xvzs,Zyuwsv->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuvs,Zyvuzs->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zwxB,wuvs,Zyvzus->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,wuzv,Zyuv->KZB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zwxB,wuzv,Zyvu->KZB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,zuvs,Zyvsuw->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,zuvs,Zyvswu->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,zuvs,Zyvusw->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwxB,zuvs,Zyvuws->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwxB,zuvs,Zyvwsu->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zB,ywuz,Zwux->KZB', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zB,ywuz,Zwxu->KZB', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zB,yzwu,Zuxw->KZB', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsw,Zuvszx->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zwuB,yvsw,Zuvxzs->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvsz,Zuvswx->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvsz,Zuvsxw->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvsz,Zuvwxs->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yvsz,Zuvxsw->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvsz,Zuvxws->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,zwuB,yvus,Zvswxz->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,zwuB,yvus,Zvsxwz->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zwuB,ywvs,Zusxzv->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zwuB,ywvz,Zuxv->KZB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvs,Zuswxv->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zwuB,yzvs,Zusxwv->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,zwuB,yzvw,Zuvx->KZB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,zwuB,yzvw,Zuxv->KZB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kxy,zywB,wuvs,Zusxzv->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxy,zywB,zuvs,Zwvxus->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxy,yzwB,wuvs,Zuszxv->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kxy,yzwB,wuvs,Zusxzv->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxy,yzwB,zuvs,Zwvuxs->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxy,yzwB,zuvs,Zwvxus->KZB', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CAE-CAA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCA_CAA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        h_xa = mr_adc.h1eff.xa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxxa = mr_adc.v2e.xxxa
        v_xaaa = mr_adc.v2e.xaaa

        ## Amplitudes
        t1_xa = mr_adc.t1.xa

        t1_xaaa = mr_adc.t1.xaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        sigma_cca  = einsum('KxW,Lx->KLW', X_aaa, h_xa, optimize = einsum_type)
        sigma_cca -= einsum('LxW,Kx->KLW', X_aaa, h_xa, optimize = einsum_type)
        sigma_cca -= einsum('KxW,L,Lx->KLW', X_aaa, e_cvs, t1_xa, optimize = einsum_type)
        sigma_cca += einsum('LxW,K,Kx->KLW', X_aaa, e_cvs, t1_xa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lx,Wy->KLW', X_aaa, h_xa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kx,Wy->KLW', X_aaa, h_xa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('KxW,xy,Ly->KLW', X_aaa, h_aa, t1_xa, optimize = einsum_type)
        sigma_cca -= einsum('LxW,xy,Ky->KLW', X_aaa, h_aa, t1_xa, optimize = einsum_type)
        sigma_cca += einsum('KxW,Lxyz,yz->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Lyzx,zy->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LWzx,yz->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LxzW,yz->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lxzw,Wzyw->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,Wwyz->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,Wwzy->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LWyz,xz->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzyW,xz->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzyw,Wxwz->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzyw,Wxzw->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= einsum('LxW,Kxyz,yz->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Kyzx,zy->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KWzx,yz->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KxzW,yz->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kxzw,Wzyw->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,Wwyz->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,Wwzy->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KWyz,xz->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KzyW,xz->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzyw,Wxwz->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzyw,Wxzw->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('ixW,KiLy,xy->KLW', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('ixW,LiKy,xy->KLW', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('ixy,KiLW,xy->KLW', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('ixy,KiLz,Wxyz->KLW', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('ixy,KiLz,Wxzy->KLW', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('ixy,LiKW,xy->KLW', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('ixy,LiKz,Wxyz->KLW', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('ixy,LiKz,Wxzy->KLW', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LWzx,yz->KLW', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,Wwyz->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwx,Wwzy->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LWyz,xz->KLW', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzyw,Wxwz->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lzyw,Wxzw->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KWzx,yz->KLW', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,Wwyz->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwx,Wwzy->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KWyz,xz->KLW', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzyw,Wxwz->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzyw,Wxzw->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('ixy,KiLW,xy->KLW', X_abb, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('ixy,KiLz,Wxyz->KLW', X_abb, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('ixy,KiLz,Wxzy->KLW', X_abb, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('ixy,LiKW,xy->KLW', X_abb, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('ixy,LiKz,Wxyz->KLW', X_abb, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('ixy,LiKz,Wxzy->KLW', X_abb, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KxW,L,Lyzx,yz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KxW,L,Lyxz,yz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,L,Lx,Wy->KLW', X_aaa, e_cvs, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,L,LzWx,yz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,L,Lzwx,Wzwy->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,L,Lzwx,Wzyw->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,L,LzxW,yz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,L,Lzxw,Wzyw->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,L,LyWz,xz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,L,LyzW,xz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,L,Lyzw,Wxwz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,L,Lyzw,Wxzw->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('LxW,K,Kyzx,yz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('LxW,K,Kyxz,yz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,K,Kx,Wy->KLW', X_aaa, e_cvs, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,K,KzWx,yz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,K,Kzwx,Wzwy->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,K,Kzwx,Wzyw->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,K,KzxW,yz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,K,Kzxw,Wzyw->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,K,KyWz,xz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,K,KyzW,xz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,K,Kyzw,Wxwz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,K,Kyzw,Wxzw->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,xy,Lzwy,zw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('KxW,xy,Lzyw,zw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('KxW,yz,Lwxy,zw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,yz,Lwyx,zw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KxW,yz,Lywx,zw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KxW,yz,Lyxw,zw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Wz,Lwxz,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Wz,Lwzx,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,xz,LwWz,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,xz,Lwuz,Wwuy->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,xz,Lwuz,Wwyu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,xz,LwzW,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,xz,Lwzu,Wwyu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,xz,Lz,Wy->KLW', X_aaa, h_aa, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,zw,Luxz,Wuyw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,zw,Luzx,Wuwy->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Luzx,Wuyw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,zw,LzWx,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Lzux,Wwuy->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,zw,Lzux,Wwyu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,zw,LzxW,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,zw,Lzxu,Wwyu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Wz,Lywz,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Wz,Lyzw,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,zw,LyWz,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,zw,Lyuz,Wxwu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Lyuz,Wxuw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,zw,LyzW,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Lyzu,Wxwu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,zw,Lyzu,Wxuw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,yz,LzWw,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,yz,LzwW,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,yz,Lzwu,Wxwu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,yz,Lzwu,Wxuw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,xy,Kzwy,zw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('LxW,xy,Kzyw,zw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('LxW,yz,Kwxy,zw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,yz,Kwyx,zw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('LxW,yz,Kywx,zw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('LxW,yz,Kyxw,zw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Wz,Kwxz,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Wz,Kwzx,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,xz,KwWz,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,xz,Kwuz,Wwuy->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,xz,Kwuz,Wwyu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,xz,KwzW,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,xz,Kwzu,Wwyu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,xz,Kz,Wy->KLW', X_aaa, h_aa, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,zw,Kuxz,Wuyw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,zw,Kuzx,Wuwy->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,zw,Kuzx,Wuyw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,zw,KzWx,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,zw,Kzux,Wwuy->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,zw,Kzux,Wwyu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,zw,KzxW,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,zw,Kzxu,Wwyu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Wz,Kywz,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Wz,Kyzw,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,zw,KyWz,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,zw,Kyuz,Wxwu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,zw,Kyuz,Wxuw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,zw,KyzW,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,zw,Kyzu,Wxwu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,zw,Kyzu,Wxuw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,yz,KzWw,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,yz,KzwW,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,yz,Kzwu,Wxwu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,yz,Kzwu,Wxuw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Ly,xzwy,wz->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('KxW,Ly,xyzw,zw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Lyzw,xwuv,yvzu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Lyzw,xwuz,yu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Lyzw,xuvw,yuvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Lyzw,xuvz,yuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KxW,Lyzw,xuyv,zwuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KxW,Lyzw,xzuv,yvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KxW,Lyzw,xzuw,yu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Lyzx,zwuv,yuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KxW,Lyzx,ywuv,zuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KxW,Lyxz,zwuv,yuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= einsum('KxW,Lyxz,ywuv,zuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lz,Wwxz,yw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lz,Wzxw,yw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lz,xwuz,Wwuy->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lz,xwuz,Wwyu->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lz,xzwu,Wuyw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,xuvw,yvuz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzWw,xuzv,ywuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,xwuv,yuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzWx,zwuv,yuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,LzwW,xuvw,yvuz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,LzwW,xuvw,yvzu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,LzwW,xuzv,ywuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,LzwW,xuzv,ywvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzwW,xwuv,yuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wuxv,ywvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,Wuxv,ywzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,Wuxw,yz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,Wvxu,ywvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wvxu,ywzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,Wvxw,yuvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwu,Wwxu,yz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwu,Wwxv,yuvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswyv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsywv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xuvw,Wzvy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xuvw,Wzyv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvwsy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvysw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsuy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvyus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswyu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsywu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,xwvs,Wzsyuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,xwvu,Wzyv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,Wuvw,yvuz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,Wuvw,yvzu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,Wuzv,ywuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,Wuzv,ywvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwx,Wwuv,yuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvuys->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvyus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswyv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusywv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzxW,zwuv,yuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzxw,Wuvw,yvuz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzxw,Wuzv,ywuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzxw,Wwuv,yuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzxw,wuvs,Wzvyus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzxw,zuvs,Wusywv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lz,Wzwy,xw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lz,Wywz,xw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lz,ywzu,Wxwu->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lz,ywzu,Wxuw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,yuvz,xvuw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzWw,yuwv,xzuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,yzuv,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,LzwW,yuvz,xvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,LzwW,yuvz,xvuw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,LzwW,yuwv,xzvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,LzwW,yuwv,xzuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzwW,yzuv,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,Wvzy,xvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wvzy,xvuw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,Wwvy,xzvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,Wuvy,xzvw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wuvy,xzwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwu,Wyvw,xzvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwu,Wyvu,xzwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,Wyzv,xvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzvsu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvus,Wxzvws->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvus,Wxzwvs->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvwus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvuws->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LyWz,zwuv,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LyzW,zwuv,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lyzw,Wwuv,xvzu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lyzw,Wwuz,xu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,Wuvw,xuvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,Wuvw,xuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,Wuvz,xuvw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,Wuvz,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lyzw,Wzuv,xvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lyzw,Wzuw,xu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvuzs->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvzus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvwus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvuws->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,zuwv,Wxvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,zuwv,Wxuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Ky,xzwy,wz->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('LxW,Ky,xyzw,zw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Kyzw,xwuv,yvzu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Kyzw,xwuz,yu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Kyzw,xuvw,yuvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Kyzw,xuvz,yuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('LxW,Kyzw,xuyv,zwuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= einsum('LxW,Kyzw,xzuv,yvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= einsum('LxW,Kyzw,xzuw,yu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Kyzx,zwuv,yuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('LxW,Kyzx,ywuv,zuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= einsum('LxW,Kyxz,zwuv,yuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('LxW,Kyxz,ywuv,zuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kz,Wwxz,yw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kz,Wzxw,yw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kz,xwuz,Wwuy->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kz,xwuz,Wwyu->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kz,xzwu,Wuyw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KzWw,xuvw,yvuz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KzWw,xuzv,ywuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KzWw,xwuv,yuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KzWx,zwuv,yuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,KzwW,xuvw,yvuz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,KzwW,xuvw,yvzu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,KzwW,xuzv,ywuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,KzwW,xuzv,ywvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KzwW,xwuv,yuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,Wuxv,ywvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,Wuxv,ywzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzwu,Wuxw,yz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,Wvxu,ywvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,Wvxu,ywzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzwu,Wvxw,yuvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzwu,Wwxu,yz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzwu,Wwxv,yuvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xuvs,Wzswyv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xuvs,Wzsywv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xuvw,Wzvy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xuvw,Wzyv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvsu,Wzvwsy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xvsu,Wzvysw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvsw,Wzvsuy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xvsw,Wzvyus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xvzs,Wvswyu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvzs,Wvsywu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzwu,xwvs,Wzsyuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzwu,xwvu,Wzyv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,Wuvw,yvuz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,Wuvw,yvzu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,Wuzv,ywuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,Wuzv,ywvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzwx,Wwuv,yuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,wuvs,Wzvuys->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,wuvs,Wzvyus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,zuvs,Wuswyv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,zuvs,Wusywv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KzxW,zwuv,yuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzxw,Wuvw,yvuz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzxw,Wuzv,ywuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzxw,Wwuv,yuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzxw,wuvs,Wzvyus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzxw,zuvs,Wusywv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kz,Wzwy,xw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kz,Wywz,xw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kz,ywzu,Wxwu->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kz,ywzu,Wxuw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KzWw,yuvz,xvuw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KzWw,yuwv,xzuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KzWw,yzuv,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,KzwW,yuvz,xvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,KzwW,yuvz,xvuw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,KzwW,yuwv,xzvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,KzwW,yuwv,xzuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KzwW,yzuv,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,Wvzy,xvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,Wvzy,xvuw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzwu,Wwvy,xzvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,Wuvy,xzvw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,Wuvy,xzwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzwu,Wyvw,xzvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzwu,Wyvu,xzwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzwu,Wyzv,xvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvsz,Wxsvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yvsz,Wxswvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yvws,Wxzvsu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvws,Wxzsvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yvus,Wxzvws->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvus,Wxzwvs->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yzvs,Wxvwus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yzvs,Wxvuws->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KyWz,zwuv,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KyzW,zwuv,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kyzw,Wwuv,xvzu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kyzw,Wwuz,xu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,Wuvw,xuvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,Wuvw,xuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,Wuvz,xuvw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,Wuvz,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kyzw,Wzuv,xvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kyzw,Wzuw,xu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,wuvs,Wxvuzs->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,wuvs,Wxvzus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,zuvs,Wxvwus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,zuvs,Wxvuws->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,zuwv,Wxvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,zuwv,Wxuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,L,LzWx,yz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,L,Lzwx,Wzwy->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,L,Lzwx,Wzyw->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,L,LyWz,xz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,L,Lyzw,Wxwz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,L,Lyzw,Wxzw->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,K,KzWx,yz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,K,Kzwx,Wzwy->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,K,Kzwx,Wzyw->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,K,KyWz,xz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,K,Kyzw,Wxwz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,K,Kyzw,Wxzw->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Wz,Lwzx,yw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,xz,LwWz,yw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,xz,Lwuz,Wwuy->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,xz,Lwuz,Wwyu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,zw,Luzx,Wuwy->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,zw,Luzx,Wuyw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,zw,LzWx,yw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,zw,Lzux,Wwuy->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Lzux,Wwyu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Wz,Lyzw,xw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,zw,LyWz,xw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Lyuz,Wxwu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,zw,Lyuz,Wxuw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,zw,Lyzu,Wxwu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Lyzu,Wxuw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,yz,LzWw,xw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,yz,Lzwu,Wxwu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,yz,Lzwu,Wxuw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Wz,Kwzx,yw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,xz,KwWz,yw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,xz,Kwuz,Wwuy->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,xz,Kwuz,Wwyu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,zw,Kuzx,Wuwy->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,zw,Kuzx,Wuyw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,zw,KzWx,yw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,zw,Kzux,Wwuy->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,zw,Kzux,Wwyu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Wz,Kyzw,xw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,zw,KyWz,xw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,zw,Kyuz,Wxwu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,zw,Kyuz,Wxuw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,zw,Kyzu,Wxwu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,zw,Kyzu,Wxuw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,yz,KzWw,xw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,yz,Kzwu,Wxwu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,yz,Kzwu,Wxuw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lz,Wzxw,yw->KLW', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lz,xwuz,Wwuy->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lz,xwuz,Wwyu->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,xuvw,yvuz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzWw,xuzv,ywuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,xwuv,yuzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzWx,zwuv,yuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,LzwW,xuvw,yvuz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,LzwW,xuvw,yvzu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,LzwW,xuzv,ywuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,LzwW,xuzv,ywvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwu,Wuxv,ywvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wuxv,ywzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wvxu,ywvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwu,Wvxu,ywzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwu,Wwxu,yz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwu,Wwxv,yuvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsvwy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsvyw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswvy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswyv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsyvw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwu,xuvw,Wzvy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xuvw,Wzyv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwu,xvsu,Wzvwsy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvysw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsuy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsyu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvusy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvuys->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvysu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsuwy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsuyw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswuy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswyu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsyuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,Wuvw,yvuz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwx,Wuvw,yvzu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,Wuzv,ywuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lzwx,Wuzv,ywvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwx,Wwuv,yuzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvsuy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvsyu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvusy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvuys->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvysu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusvwy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusvyw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswvy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswyv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusyvw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lz,Wzwy,xw->KLW', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lz,ywzu,Wxwu->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lz,ywzu,Wxuw->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,yuvz,xvuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzWw,yuwv,xzuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,yzuv,xuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,LzwW,yuvz,xvwu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,LzwW,yuvz,xvuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,LzwW,yuwv,xzvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,LzwW,yuwv,xzuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wvzy,xvwu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwu,Wvzy,xvuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,Wwvy,xzvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lzwu,Wuvy,xzvw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,Wuvy,xzwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsvuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsuvw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzvus->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzuvs->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzusv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvus,Wxzvws->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lzwu,yvus,Wxzwvs->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwu,yzvs,Wxvwus->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvuws->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LyWz,zwuv,xuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lyzw,Wuvw,xuvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,Wuvw,xuzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,Wuvz,xuvw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lyzw,Wuvz,xuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lyzw,Wzuv,xvwu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lyzw,Wzuw,xu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvuzs->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lyzw,wuvs,Wxvzus->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvswu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvsuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvwsu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvusw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvuws->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,zuwv,Wxvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lyzw,zuwv,Wxuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kz,Wzxw,yw->KLW', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kz,xwuz,Wwuy->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kz,xwuz,Wwyu->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KzWw,xuvw,yvuz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KzWw,xuzv,ywuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KzWw,xwuv,yuzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KzWx,zwuv,yuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,KzwW,xuvw,yvuz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,KzwW,xuvw,yvzu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,KzwW,xuzv,ywuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,KzwW,xuzv,ywvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwu,Wuxv,ywvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,Wuxv,ywzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,Wvxu,ywvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwu,Wvxu,ywzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzwu,Wwxu,yz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzwu,Wwxv,yuvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xuvs,Wzsvwy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xuvs,Wzsvyw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xuvs,Wzswvy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xuvs,Wzswyv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xuvs,Wzsyvw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwu,xuvw,Wzvy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xuvw,Wzyv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwu,xvsu,Wzvwsy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvsu,Wzvysw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvsw,Wzvsuy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xvsw,Wzvsyu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xvsw,Wzvusy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xvsw,Wzvuys->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xvsw,Wzvysu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvzs,Wvsuwy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvzs,Wvsuyw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvzs,Wvswuy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xvzs,Wvswyu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvzs,Wvsyuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,Wuvw,yvuz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwx,Wuvw,yvzu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,Wuzv,ywuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwx,Wuzv,ywvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzwx,Wwuv,yuzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,wuvs,Wzvsuy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,wuvs,Wzvsyu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,wuvs,Wzvusy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,wuvs,Wzvuys->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,wuvs,Wzvysu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,zuvs,Wusvwy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,zuvs,Wusvyw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,zuvs,Wuswvy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,zuvs,Wuswyv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,zuvs,Wusyvw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kz,Wzwy,xw->KLW', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kz,ywzu,Wxwu->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kz,ywzu,Wxuw->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KzWw,yuvz,xvuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KzWw,yuwv,xzuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KzWw,yzuv,xuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,KzwW,yuvz,xvwu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,KzwW,yuvz,xvuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,KzwW,yuwv,xzvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,KzwW,yuwv,xzuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,Wvzy,xvwu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwu,Wvzy,xvuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzwu,Wwvy,xzvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwu,Wuvy,xzvw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,Wuvy,xzwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvsz,Wxsvuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yvsz,Wxswvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvsz,Wxswuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvsz,Wxsuvw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvsz,Wxsuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yvws,Wxzvus->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvws,Wxzsvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yvws,Wxzsuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yvws,Wxzuvs->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yvws,Wxzusv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvus,Wxzvws->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwu,yvus,Wxzwvs->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwu,yzvs,Wxvwus->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yzvs,Wxvuws->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KyWz,zwuv,xuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kyzw,Wuvw,xuvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,Wuvw,xuzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,Wuvz,xuvw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kyzw,Wuvz,xuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kyzw,Wzuv,xvwu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kyzw,Wzuw,xu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,wuvs,Wxvuzs->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kyzw,wuvs,Wxvzus->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,zuvs,Wxvswu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,zuvs,Wxvsuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,zuvs,Wxvwsu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,zuvs,Wxvusw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,zuvs,Wxvuws->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,zuwv,Wxvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kyzw,zuwv,Wxuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cca__aaa:f_cca__aaa] += sigma_cca[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cca  = einsum('KxW,Lx->KLW', X_abb, h_xa, optimize = einsum_type)
        sigma_cca -= einsum('LxW,Kx->KLW', X_bab, h_xa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LWzx,yz->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,Wwyz->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwx,Wwzy->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LWyz,xz->KLW', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzyw,Wxwz->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lzyw,Wxzw->KLW', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('ixy,KiLW,xy->KLW', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('ixy,KiLz,Wxyz->KLW', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('ixy,KiLz,Wxzy->KLW', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= einsum('KxW,L,Lx->KLW', X_abb, e_cvs, t1_xa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lx,Wy->KLW', X_abb, h_xa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('KxW,xy,Ly->KLW', X_abb, h_aa, t1_xa, optimize = einsum_type)
        sigma_cca += einsum('KxW,Lxyz,yz->KLW', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Lyzx,zy->KLW', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LWzx,yz->KLW', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LxzW,yz->KLW', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lxzw,Wzyw->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,Wwyz->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,Wwzy->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LWyz,xz->KLW', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzyW,xz->KLW', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzyw,Wxwz->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzyw,Wxzw->KLW', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('ixW,KiLy,xy->KLW', X_abb, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('ixy,KiLW,xy->KLW', X_abb, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('ixy,KiLz,Wxyz->KLW', X_abb, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('ixy,KiLz,Wxzy->KLW', X_abb, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('LxW,K,Kx->KLW', X_bab, e_cvs, t1_xa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kx,Wy->KLW', X_bab, h_xa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('LxW,xy,Ky->KLW', X_bab, h_aa, t1_xa, optimize = einsum_type)
        sigma_cca -= einsum('LxW,Kxyz,yz->KLW', X_bab, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Kyzx,zy->KLW', X_bab, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KxzW,yz->KLW', X_bab, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kxzw,Wzyw->KLW', X_bab, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwx,Wwyz->KLW', X_bab, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,Wwzy->KLW', X_bab, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KzyW,xz->KLW', X_bab, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzyw,Wxwz->KLW', X_bab, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzyw,Wxzw->KLW', X_bab, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('ixW,LiKy,xy->KLW', X_bab, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('ixy,LiKz,Wxyz->KLW', X_bab, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('ixy,LiKz,Wxzy->KLW', X_bab, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,L,LzWx,yz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,L,Lzwx,Wzwy->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,L,Lzwx,Wzyw->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,L,LyWz,xz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,L,Lyzw,Wxwz->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,L,Lyzw,Wxzw->KLW', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Wz,Lwzx,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,xz,LwWz,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,xz,Lwuz,Wwuy->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,xz,Lwuz,Wwyu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,zw,Luzx,Wuwy->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,zw,Luzx,Wuyw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,zw,LzWx,yw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,zw,Lzux,Wwuy->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Lzux,Wwyu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Wz,Lyzw,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,zw,LyWz,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Lyuz,Wxwu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,zw,Lyuz,Wxuw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,zw,Lyzu,Wxwu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Lyzu,Wxuw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,yz,LzWw,xw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,yz,Lzwu,Wxwu->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,yz,Lzwu,Wxuw->KLW', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lz,Wzxw,yw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lz,xwuz,Wwuy->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lz,xwuz,Wwyu->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,xuvw,yvuz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzWw,xuzv,ywuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,xwuv,yuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzWx,zwuv,yuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,LzwW,xuvw,yvuz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,LzwW,xuvw,yvzu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,LzwW,xuzv,ywuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,LzwW,xuzv,ywvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwu,Wuxv,ywvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wuxv,ywzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wvxu,ywvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwu,Wvxu,ywzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwu,Wwxu,yz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwu,Wwxv,yuvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsvwy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsvyw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswvy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswyv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsyvw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwu,xuvw,Wzvy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xuvw,Wzyv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwu,xvsu,Wzvwsy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvysw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsuy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsyu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvusy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvuys->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvysu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsuwy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsuyw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswuy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswyu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsyuw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,Wuvw,yvuz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwx,Wuvw,yvzu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,Wuzv,ywuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lzwx,Wuzv,ywvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwx,Wwuv,yuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvsuy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvsyu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvusy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvuys->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvysu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusvwy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusvyw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswvy->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswyv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusyvw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lz,Wzwy,xw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lz,ywzu,Wxwu->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lz,ywzu,Wxuw->KLW', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,yuvz,xvuw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzWw,yuwv,xzuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,yzuv,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,LzwW,yuvz,xvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,LzwW,yuvz,xvuw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,LzwW,yuwv,xzvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,LzwW,yuwv,xzuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wvzy,xvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwu,Wvzy,xvuw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,Wwvy,xzvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lzwu,Wuvy,xzvw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,Wuvy,xzwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsvuw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsuvw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzvus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzuvs->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzusv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvus,Wxzvws->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lzwu,yvus,Wxzwvs->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kxy,Lzwu,yzvs,Wxvwus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvuws->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LyWz,zwuv,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lyzw,Wuvw,xuvz->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,Wuvw,xuzv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,Wuvz,xuvw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lyzw,Wuvz,xuwv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lyzw,Wzuv,xvwu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lyzw,Wzuw,xu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvuzs->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lyzw,wuvs,Wxvzus->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvswu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvsuw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvwsu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvusw->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvuws->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,zuwv,Wxvu->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxy,Lyzw,zuwv,Wxuv->KLW', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KxW,L,Lyzx,yz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KxW,L,Lyxz,yz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,L,Lx,Wy->KLW', X_abb, e_cvs, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,L,LzWx,yz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,L,Lzwx,Wzwy->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,L,Lzwx,Wzyw->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,L,LzxW,yz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,L,Lzxw,Wzyw->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,L,LyWz,xz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,L,LyzW,xz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,L,Lyzw,Wxwz->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,L,Lyzw,Wxzw->KLW', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,xy,Lzwy,zw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('KxW,xy,Lzyw,zw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('KxW,yz,Lwxy,zw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,yz,Lwyx,zw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KxW,yz,Lywx,zw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KxW,yz,Lyxw,zw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Wz,Lwxz,yw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Wz,Lwzx,yw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,xz,LwWz,yw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,xz,Lwuz,Wwuy->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,xz,Lwuz,Wwyu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,xz,LwzW,yw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,xz,Lwzu,Wwyu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,xz,Lz,Wy->KLW', X_abb, h_aa, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,zw,Luxz,Wuyw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,zw,Luzx,Wuwy->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Luzx,Wuyw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,zw,LzWx,yw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Lzux,Wwuy->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,zw,Lzux,Wwyu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,zw,LzxW,yw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,zw,Lzxu,Wwyu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Wz,Lywz,xw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Wz,Lyzw,xw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,zw,LyWz,xw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,zw,Lyuz,Wxwu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Lyuz,Wxuw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,zw,LyzW,xw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,zw,Lyzu,Wxwu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,zw,Lyzu,Wxuw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,yz,LzWw,xw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,yz,LzwW,xw->KLW', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,yz,Lzwu,Wxwu->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,yz,Lzwu,Wxuw->KLW', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Ly,xzwy,wz->KLW', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('KxW,Ly,xyzw,zw->KLW', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Lyzw,xwuv,yvzu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Lyzw,xwuz,yu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Lyzw,xuvw,yuvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Lyzw,xuvz,yuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KxW,Lyzw,xuyv,zwuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KxW,Lyzw,xzuv,yvwu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KxW,Lyzw,xzuw,yu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KxW,Lyzx,zwuv,yuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KxW,Lyzx,ywuv,zuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KxW,Lyxz,zwuv,yuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= einsum('KxW,Lyxz,ywuv,zuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lz,Wwxz,yw->KLW', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lz,Wzxw,yw->KLW', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lz,xwuz,Wwuy->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lz,xwuz,Wwyu->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lz,xzwu,Wuyw->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,xuvw,yvuz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzWw,xuzv,ywuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,xwuv,yuzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzWx,zwuv,yuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,LzwW,xuvw,yvuz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,LzwW,xuvw,yvzu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,LzwW,xuzv,ywuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,LzwW,xuzv,ywvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzwW,xwuv,yuzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wuxv,ywvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,Wuxv,ywzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,Wuxw,yz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,Wvxu,ywvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wvxu,ywzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,Wvxw,yuvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwu,Wwxu,yz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwu,Wwxv,yuvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswyv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsywv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xuvw,Wzvy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xuvw,Wzyv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvwsy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvysw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsuy->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvyus->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswyu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsywu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,xwvs,Wzsyuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,xwvu,Wzyv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,Wuvw,yvuz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,Wuvw,yvzu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,Wuzv,ywuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,Wuzv,ywvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwx,Wwuv,yuzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvuys->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvyus->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswyv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusywv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzxW,zwuv,yuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzxw,Wuvw,yvuz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzxw,Wuzv,ywuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzxw,Wwuv,yuzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzxw,wuvs,Wzvyus->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzxw,zuvs,Wusywv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lz,Wzwy,xw->KLW', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lz,Wywz,xw->KLW', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lz,ywzu,Wxwu->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lz,ywzu,Wxuw->KLW', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,yuvz,xvuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzWw,yuwv,xzuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LzWw,yzuv,xuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,LzwW,yuvz,xvwu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,LzwW,yuvz,xvuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,LzwW,yuwv,xzvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,LzwW,yuwv,xzuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LzwW,yzuv,xuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,Wvzy,xvwu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wvzy,xvuw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,Wwvy,xzvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,Wuvy,xzvw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,Wuvy,xzwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwu,Wyvw,xzvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lzwu,Wyvu,xzwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lzwu,Wyzv,xvwu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsvwu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzvsu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yvus,Wxzvws->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yvus,Wxzwvs->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvwus->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvuws->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,LyWz,zwuv,xuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,LyzW,zwuv,xuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lyzw,Wwuv,xvzu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxy,Lyzw,Wwuz,xu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,Wuvw,xuvz->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,Wuvw,xuzv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,Wuvz,xuvw->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,Wuvz,xuwv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lyzw,Wzuv,xvwu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxy,Lyzw,Wzuw,xu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvuzs->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvzus->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvwus->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvuws->KLW', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxy,Lyzw,zuwv,Wxvu->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxy,Lyzw,zuwv,Wxuv->KLW', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('LxW,K,Kyzx,yz->KLW', X_bab, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('LxW,K,Kyxz,yz->KLW', X_bab, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,K,Kx,Wy->KLW', X_bab, e_cvs, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,K,Kzwx,Wzwy->KLW', X_bab, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,K,Kzwx,Wzyw->KLW', X_bab, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,K,KzxW,yz->KLW', X_bab, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,K,Kzxw,Wzyw->KLW', X_bab, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,K,KyzW,xz->KLW', X_bab, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,K,Kyzw,Wxwz->KLW', X_bab, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,K,Kyzw,Wxzw->KLW', X_bab, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,xy,Kzwy,zw->KLW', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('LxW,xy,Kzyw,zw->KLW', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('LxW,yz,Kwxy,zw->KLW', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,yz,Kwyx,zw->KLW', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('LxW,yz,Kywx,zw->KLW', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('LxW,yz,Kyxw,zw->KLW', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Wz,Kwxz,yw->KLW', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,xz,Kwuz,Wwuy->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,xz,Kwuz,Wwyu->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,xz,KwzW,yw->KLW', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,xz,Kwzu,Wwyu->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,xz,Kz,Wy->KLW', X_bab, h_aa, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,zw,Kuxz,Wuyw->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,zw,Kuzx,Wuwy->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,zw,Kuzx,Wuyw->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,zw,Kzux,Wwuy->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,zw,Kzux,Wwyu->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,zw,KzxW,yw->KLW', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,zw,Kzxu,Wwyu->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Wz,Kywz,xw->KLW', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,zw,Kyuz,Wxwu->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,zw,Kyuz,Wxuw->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,zw,KyzW,xw->KLW', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,zw,Kyzu,Wxwu->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,zw,Kyzu,Wxuw->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,yz,KzwW,xw->KLW', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,yz,Kzwu,Wxwu->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,yz,Kzwu,Wxuw->KLW', X_bab, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Ky,xzwy,wz->KLW', X_bab, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('LxW,Ky,xyzw,zw->KLW', X_bab, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Kyzw,xwuv,yvzu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Kyzw,xwuz,yu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Kyzw,xuvw,yuvz->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Kyzw,xuvz,yuwv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('LxW,Kyzw,xuyv,zwuv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= einsum('LxW,Kyzw,xzuv,yvwu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= einsum('LxW,Kyzw,xzuw,yu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('LxW,Kyzx,zwuv,yuwv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('LxW,Kyzx,ywuv,zuwv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= einsum('LxW,Kyxz,zwuv,yuwv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('LxW,Kyxz,ywuv,zuwv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kz,Wwxz,yw->KLW', X_bab, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kz,xwuz,Wwuy->KLW', X_bab, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kz,xwuz,Wwyu->KLW', X_bab, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kz,xzwu,Wuyw->KLW', X_bab, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,KzwW,xuvw,yvuz->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,KzwW,xuvw,yvzu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,KzwW,xuzv,ywuv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,KzwW,xuzv,ywvu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KzwW,xwuv,yuzv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,Wuxv,ywvz->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwu,Wuxv,ywzv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzwu,Wuxw,yz->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwu,Wvxu,ywvz->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,Wvxu,ywzv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzwu,Wvxw,yuvz->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xuvs,Wzswyv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwu,xuvs,Wzsywv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xuvw,Wzvy->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwu,xuvw,Wzyv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvsu,Wzvswy->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvsu,Wzvsyw->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvsu,Wzvwys->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xvsu,Wzvysw->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvsu,Wzvyws->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,xvsw,Wzvsuy->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwu,xvsw,Wzvyus->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,xvzs,Wvswyu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwu,xvzs,Wvsywu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzwu,xwvs,Wzsyuv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzwu,xwvu,Wzyv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwx,Wuvw,yvuz->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,Wuvw,yvzu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwx,Wuzv,ywuv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,Wuzv,ywvu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwx,wuvs,Wzvuys->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwx,wuvs,Wzvyus->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwx,zuvs,Wuswyv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwx,zuvs,Wusywv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KzxW,zwuv,yuwv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzxw,Wuvw,yvuz->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzxw,Wuzv,ywuv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzxw,Wwuv,yuzv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzxw,wuvs,Wzvyus->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzxw,zuvs,Wusywv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kz,Wywz,xw->KLW', X_bab, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kz,ywzu,Wxwu->KLW', X_bab, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kz,ywzu,Wxuw->KLW', X_bab, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,KzwW,yuvz,xvwu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,KzwW,yuvz,xvuw->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,KzwW,yuwv,xzvu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,KzwW,yuwv,xzuv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,KzwW,yzuv,xuwv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwu,Wvzy,xvwu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,Wvzy,xvuw->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,Wuvy,xzvw->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwu,Wuvy,xzwv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzwu,Wyvw,xzvu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kzwu,Wyvu,xzwv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxy,Kzwu,Wyzv,xvwu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxy,Kzwu,yvsz,Wxsvwu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvsz,Wxswvu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kzwu,yvws,Wxzvsu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yvws,Wxzsvu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvus,Wxzvsw->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yvus,Wxzvws->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvus,Wxzsvw->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvus,Wxzswv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yvus,Wxzwsv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yzvs,Wxvswu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yzvs,Wxvsuw->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yzvs,Wxvwsu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kzwu,yzvs,Wxvusw->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kzwu,yzvs,Wxvuws->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,KyzW,zwuv,xuwv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kyzw,Wwuv,xvzu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxy,Kyzw,Wwuz,xu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,Wuvw,xuvz->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kyzw,Wuvw,xuzv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kyzw,Wuvz,xuvw->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,Wuvz,xuwv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,wuvs,Wxvsuz->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,wuvs,Wxvszu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,wuvs,Wxvusz->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,wuvs,Wxvuzs->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxy,Kyzw,wuvs,Wxvzsu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kyzw,zuvs,Wxvwus->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,zuvs,Wxvuws->KLW', X_bab, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxy,Kyzw,zuwv,Wxvu->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxy,Kyzw,zuwv,Wxuv->KLW', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cca__abb:f_cca__abb] += sigma_cca.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CCA-CAA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CAA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_val = mr_adc.mo_energy.v
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxve = mr_adc.v2e.xxve
        v_vxxe = mr_adc.v2e.vxxe

        v_vaae = mr_adc.v2e.vaae
        v_veaa = mr_adc.v2e.veaa

        ## Amplitudes
        t1_vaea = mr_adc.t1.vaea
        t1_vaae = mr_adc.t1.vaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        sigma_cve  = 1/2 * einsum('Kxy,LBzx,yz->KLB', X_aaa, v_veaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LxzB,yz->KLB', X_aaa, v_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LByz,xz->KLB', X_aaa, v_veaa, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzyB,xz->KLB', X_aaa, v_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('ixy,KiLB,xy->KLB', X_aaa, v_xxve, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('ixy,LiKB,xy->KLB', X_aaa, v_vxxe, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LBzx,yz->KLB', X_abb, v_veaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LByz,xz->KLB', X_abb, v_veaa, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('ixy,KiLB,xy->KLB', X_abb, v_xxve, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('ixy,LiKB,xy->KLB', X_abb, v_vxxe, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,B,LzBx,yz->KLB', X_aaa, e_extern, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,B,LzxB,yz->KLB', X_aaa, e_extern, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,L,LzBx,yz->KLB', X_aaa, e_val, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,L,LzxB,yz->KLB', X_aaa, e_val, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,B,LyBz,xz->KLB', X_aaa, e_extern, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,B,LyzB,xz->KLB', X_aaa, e_extern, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,L,LyBz,xz->KLB', X_aaa, e_val, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,L,LyzB,xz->KLB', X_aaa, e_val, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,xz,LwBz,yw->KLB', X_aaa, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,xz,LwzB,yw->KLB', X_aaa, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,zw,LzBx,yw->KLB', X_aaa, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,zw,LzxB,yw->KLB', X_aaa, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,zw,LyBz,xw->KLB', X_aaa, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,zw,LyzB,xw->KLB', X_aaa, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,yz,LzBw,xw->KLB', X_aaa, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,yz,LzwB,xw->KLB', X_aaa, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,xuvw,yvuz->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzBw,xuzv,ywuv->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,xwuv,yuzv->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzBx,zwuv,yuwv->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,xuvw,yvuz->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,xuvw,yvzu->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,xuzv,ywuv->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,xuzv,ywvu->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzwB,xwuv,yuzv->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzxB,zwuv,yuwv->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,yuvz,xvuw->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzBw,yuwv,xzuv->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,yzuv,xuwv->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,yuvz,xvwu->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,yuvz,xvuw->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,yuwv,xzvu->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,yuwv,xzuv->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzwB,yzuv,xuwv->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LyBz,zwuv,xuwv->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LyzB,zwuv,xuwv->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,B,LzBx,yz->KLB', X_abb, e_extern, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,L,LzBx,yz->KLB', X_abb, e_val, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,B,LyBz,xz->KLB', X_abb, e_extern, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,L,LyBz,xz->KLB', X_abb, e_val, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,xz,LwBz,yw->KLB', X_abb, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,zw,LzBx,yw->KLB', X_abb, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,zw,LyBz,xw->KLB', X_abb, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,yz,LzBw,xw->KLB', X_abb, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,xuvw,yvuz->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzBw,xuzv,ywuv->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,xwuv,yuzv->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzBx,zwuv,yuwv->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/3 * einsum('Kxy,LzwB,xuvw,yvuz->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,xuvw,yvzu->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/3 * einsum('Kxy,LzwB,xuzv,ywuv->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,xuzv,ywvu->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,yuvz,xvuw->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzBw,yuwv,xzuv->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,yzuv,xuwv->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,yuvz,xvwu->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/3 * einsum('Kxy,LzwB,yuvz,xvuw->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,yuwv,xzvu->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/3 * einsum('Kxy,LzwB,yuwv,xzuv->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LyBz,zwuv,xuwv->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve  = 1/2 * einsum('Kxy,LBzx,yz->KLB', X_aaa, v_veaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LByz,xz->KLB', X_aaa, v_veaa, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('ixy,KiLB,xy->KLB', X_aaa, v_xxve, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LBzx,yz->KLB', X_abb, v_veaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LxzB,yz->KLB', X_abb, v_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LByz,xz->KLB', X_abb, v_veaa, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzyB,xz->KLB', X_abb, v_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('ixy,KiLB,xy->KLB', X_abb, v_xxve, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,B,LzBx,yz->KLB', X_aaa, e_extern, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,L,LzBx,yz->KLB', X_aaa, e_val, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,B,LyBz,xz->KLB', X_aaa, e_extern, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,L,LyBz,xz->KLB', X_aaa, e_val, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,xz,LwBz,yw->KLB', X_aaa, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,zw,LzBx,yw->KLB', X_aaa, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,zw,LyBz,xw->KLB', X_aaa, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,yz,LzBw,xw->KLB', X_aaa, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,xuvw,yvuz->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzBw,xuzv,ywuv->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,xwuv,yuzv->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzBx,zwuv,yuwv->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/3 * einsum('Kxy,LzwB,xuvw,yvuz->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,xuvw,yvzu->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/3 * einsum('Kxy,LzwB,xuzv,ywuv->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,xuzv,ywvu->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,yuvz,xvuw->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzBw,yuwv,xzuv->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,yzuv,xuwv->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,yuvz,xvwu->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/3 * einsum('Kxy,LzwB,yuvz,xvuw->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,yuwv,xzvu->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/3 * einsum('Kxy,LzwB,yuwv,xzuv->KLB', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LyBz,zwuv,xuwv->KLB', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,B,LzBx,yz->KLB', X_abb, e_extern, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,B,LzxB,yz->KLB', X_abb, e_extern, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,L,LzBx,yz->KLB', X_abb, e_val, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,L,LzxB,yz->KLB', X_abb, e_val, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,B,LyBz,xz->KLB', X_abb, e_extern, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,B,LyzB,xz->KLB', X_abb, e_extern, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,L,LyBz,xz->KLB', X_abb, e_val, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,L,LyzB,xz->KLB', X_abb, e_val, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,xz,LwBz,yw->KLB', X_abb, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,xz,LwzB,yw->KLB', X_abb, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,zw,LzBx,yw->KLB', X_abb, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,zw,LzxB,yw->KLB', X_abb, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,zw,LyBz,xw->KLB', X_abb, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,zw,LyzB,xw->KLB', X_abb, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,yz,LzBw,xw->KLB', X_abb, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,yz,LzwB,xw->KLB', X_abb, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,xuvw,yvuz->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzBw,xuzv,ywuv->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,xwuv,yuzv->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzBx,zwuv,yuwv->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,xuvw,yvuz->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,xuvw,yvzu->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,xuzv,ywuv->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,xuzv,ywvu->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzwB,xwuv,yuzv->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzxB,zwuv,yuwv->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,yuvz,xvuw->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzBw,yuwv,xzuv->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzBw,yzuv,xuwv->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,yuvz,xvwu->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,yuvz,xvuw->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,yuwv,xzvu->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,yuwv,xzuv->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzwB,yzuv,xuwv->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LyBz,zwuv,xuwv->KLB', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LyzB,zwuv,xuwv->KLB', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        sigma_cve =- 1/2 * einsum('ixy,LiKB,xy->KLB', X_aaa, v_vxxe, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('ixy,LiKB,xy->KLB', X_abb, v_vxxe, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LxzB,yz->KLB', X_bab, v_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzyB,xz->KLB', X_bab, v_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,B,LzxB,yz->KLB', X_bab, e_extern, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,L,LzxB,yz->KLB', X_bab, e_val, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,B,LyzB,xz->KLB', X_bab, e_extern, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,L,LyzB,xz->KLB', X_bab, e_val, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,xz,LwzB,yw->KLB', X_bab, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,zw,LzxB,yw->KLB', X_bab, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,zw,LyzB,xw->KLB', X_bab, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,yz,LzwB,xw->KLB', X_bab, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,xuvw,yvuz->KLB', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/3 * einsum('Kxy,LzwB,xuvw,yvzu->KLB', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,xuzv,ywuv->KLB', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/3 * einsum('Kxy,LzwB,xuzv,ywvu->KLB', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzwB,xwuv,yuzv->KLB', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LzxB,zwuv,yuwv->KLB', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/3 * einsum('Kxy,LzwB,yuvz,xvwu->KLB', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/6 * einsum('Kxy,LzwB,yuvz,xvuw->KLB', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/3 * einsum('Kxy,LzwB,yuwv,xzvu->KLB', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/6 * einsum('Kxy,LzwB,yuwv,xzuv->KLB', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxy,LzwB,yzuv,xuwv->KLB', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kxy,LyzB,zwuv,xuwv->KLB', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cve__bab:f_cve__bab] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CVE-CAA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVA_CAA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_val = mr_adc.mo_energy.v

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        h_va = mr_adc.h1eff.va

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxva = mr_adc.v2e.xxva
        v_vxxa = mr_adc.v2e.vxxa

        v_vaaa = mr_adc.v2e.vaaa

        ## Amplitudes
        t1_va = mr_adc.t1.va
        t1_vaaa = mr_adc.t1.vaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        sigma_cva  = einsum('KxW,Lx->KLW', X_aaa, h_va, optimize = einsum_type)
        sigma_cva -= einsum('KxW,L,Lx->KLW', X_aaa, e_val, t1_va, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lx,Wy->KLW', X_aaa, h_va, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KxW,xy,Ly->KLW', X_aaa, h_aa, t1_va, optimize = einsum_type)
        sigma_cva += einsum('KxW,Lxyz,yz->KLW', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzx,zy->KLW', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LWzx,yz->KLW', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LxzW,yz->KLW', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lxzw,Wzyw->KLW', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,Wwyz->KLW', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,Wwzy->KLW', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LWyz,xz->KLW', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzyW,xz->KLW', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzyw,Wxwz->KLW', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzyw,Wxzw->KLW', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('ixW,KiLy,xy->KLW', X_aaa, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('ixW,LiKy,xy->KLW', X_aaa, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('ixy,KiLW,xy->KLW', X_aaa, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('ixy,KiLz,Wxyz->KLW', X_aaa, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('ixy,KiLz,Wxzy->KLW', X_aaa, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('ixy,LiKW,xy->KLW', X_aaa, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('ixy,LiKz,Wxyz->KLW', X_aaa, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('ixy,LiKz,Wxzy->KLW', X_aaa, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LWzx,yz->KLW', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,Wwyz->KLW', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwx,Wwzy->KLW', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LWyz,xz->KLW', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzyw,Wxwz->KLW', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzyw,Wxzw->KLW', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('ixy,KiLW,xy->KLW', X_abb, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('ixy,KiLz,Wxyz->KLW', X_abb, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('ixy,KiLz,Wxzy->KLW', X_abb, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('ixy,LiKW,xy->KLW', X_abb, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('ixy,LiKz,Wxyz->KLW', X_abb, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('ixy,LiKz,Wxzy->KLW', X_abb, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KxW,L,Lyzx,yz->KLW', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KxW,L,Lyxz,yz->KLW', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,Lx,Wy->KLW', X_aaa, e_val, t1_va, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,L,LzWx,yz->KLW', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,L,Lzwx,Wzwy->KLW', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,L,Lzwx,Wzyw->KLW', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,LzxW,yz->KLW', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,Lzxw,Wzyw->KLW', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,LyWz,xz->KLW', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,L,LyzW,xz->KLW', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,L,Lyzw,Wxwz->KLW', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,L,Lyzw,Wxzw->KLW', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,xy,Lzwy,zw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KxW,xy,Lzyw,zw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KxW,yz,Lwxy,zw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,yz,Lwyx,zw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KxW,yz,Lywx,zw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KxW,yz,Lyxw,zw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Wz,Lwxz,yw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Wz,Lwzx,yw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,xz,LwWz,yw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,xz,Lwuz,Wwuy->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,xz,Lwuz,Wwyu->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,xz,LwzW,yw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,xz,Lwzu,Wwyu->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,xz,Lz,Wy->KLW', X_aaa, h_aa, t1_va, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,zw,Luxz,Wuyw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Luzx,Wuwy->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Luzx,Wuyw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,zw,LzWx,yw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Lzux,Wwuy->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Lzux,Wwyu->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,zw,LzxW,yw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,zw,Lzxu,Wwyu->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Wz,Lywz,xw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Wz,Lyzw,xw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,zw,LyWz,xw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Lyuz,Wxwu->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Lyuz,Wxuw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,zw,LyzW,xw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Lyzu,Wxwu->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Lyzu,Wxuw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,yz,LzWw,xw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,yz,LzwW,xw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,yz,Lzwu,Wxwu->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,yz,Lzwu,Wxuw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Ly,xzwy,wz->KLW', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KxW,Ly,xyzw,zw->KLW', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzw,xwuv,yvzu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzw,xwuz,yu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzw,xuvw,yuvz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzw,xuvz,yuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KxW,Lyzw,xuyv,zwuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KxW,Lyzw,xzuv,yvwu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KxW,Lyzw,xzuw,yu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzx,zwuv,yuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KxW,Lyzx,ywuv,zuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KxW,Lyxz,zwuv,yuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= einsum('KxW,Lyxz,ywuv,zuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lz,Wwxz,yw->KLW', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lz,Wzxw,yw->KLW', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lz,xwuz,Wwuy->KLW', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lz,xwuz,Wwyu->KLW', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lz,xzwu,Wuyw->KLW', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,xuvw,yvuz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzWw,xuzv,ywuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,xwuv,yuzv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzWx,zwuv,yuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,xuvw,yvuz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,xuvw,yvzu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,xuzv,ywuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,xuzv,ywvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzwW,xwuv,yuzv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wuxv,ywvz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wuxv,ywzv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wuxw,yz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wvxu,ywvz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wvxu,ywzv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wvxw,yuvz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wwxu,yz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wwxv,yuvz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswyv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsywv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xuvw,Wzvy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvw,Wzyv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvwsy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvysw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsuy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvyus->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswyu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsywu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,xwvs,Wzsyuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,xwvu,Wzyv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,Wuvw,yvuz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,Wuvw,yvzu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,Wuzv,ywuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,Wuzv,ywvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwx,Wwuv,yuzv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvuys->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvyus->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswyv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusywv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzxW,zwuv,yuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzxw,Wuvw,yvuz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzxw,Wuzv,ywuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzxw,Wwuv,yuzv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzxw,wuvs,Wzvyus->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzxw,zuvs,Wusywv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lz,Wzwy,xw->KLW', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lz,Wywz,xw->KLW', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lz,ywzu,Wxwu->KLW', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lz,ywzu,Wxuw->KLW', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,yuvz,xvuw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzWw,yuwv,xzuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,yzuv,xuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,yuvz,xvwu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,yuvz,xvuw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,yuwv,xzvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,yuwv,xzuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzwW,yzuv,xuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wvzy,xvwu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wvzy,xvuw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wwvy,xzvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wuvy,xzvw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wuvy,xzwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wyvw,xzvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wyvu,xzwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wyzv,xvwu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsvwu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzvsu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvus,Wxzvws->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvus,Wxzwvs->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvwus->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvuws->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LyWz,zwuv,xuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LyzW,zwuv,xuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lyzw,Wwuv,xvzu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lyzw,Wwuz,xu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,Wuvw,xuvz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,Wuvw,xuzv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,Wuvz,xuvw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,Wuvz,xuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lyzw,Wzuv,xvwu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lyzw,Wzuw,xu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvuzs->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvzus->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvwus->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvuws->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuwv,Wxvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,zuwv,Wxuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,L,LzWx,yz->KLW', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,L,Lzwx,Wzwy->KLW', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,L,Lzwx,Wzyw->KLW', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,LyWz,xz->KLW', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,L,Lyzw,Wxwz->KLW', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,L,Lyzw,Wxzw->KLW', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Wz,Lwzx,yw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,xz,LwWz,yw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,xz,Lwuz,Wwuy->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,xz,Lwuz,Wwyu->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,zw,Luzx,Wuwy->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Luzx,Wuyw->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,zw,LzWx,yw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,zw,Lzux,Wwuy->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Lzux,Wwyu->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Wz,Lyzw,xw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,zw,LyWz,xw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Lyuz,Wxwu->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,zw,Lyuz,Wxuw->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,zw,Lyzu,Wxwu->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Lyzu,Wxuw->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,yz,LzWw,xw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,yz,Lzwu,Wxwu->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,yz,Lzwu,Wxuw->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lz,Wzxw,yw->KLW', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lz,xwuz,Wwuy->KLW', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lz,xwuz,Wwyu->KLW', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,xuvw,yvuz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzWw,xuzv,ywuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,xwuv,yuzv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzWx,zwuv,yuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,LzwW,xuvw,yvuz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,xuvw,yvzu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,LzwW,xuzv,ywuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,xuzv,ywvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,Wuxv,ywvz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wuxv,ywzv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wvxu,ywvz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,Wvxu,ywzv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wwxu,yz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wwxv,yuvz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsvwy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsvyw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswvy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswyv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsyvw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,xuvw,Wzvy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xuvw,Wzyv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,xvsu,Wzvwsy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvysw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsuy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsyu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvusy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvuys->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvysu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsuwy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsuyw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswuy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswyu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsyuw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,Wuvw,yvuz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwx,Wuvw,yvzu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,Wuzv,ywuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwx,Wuzv,ywvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwx,Wwuv,yuzv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvsuy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvsyu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvusy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvuys->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvysu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusvwy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusvyw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswvy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswyv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusyvw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lz,Wzwy,xw->KLW', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lz,ywzu,Wxwu->KLW', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lz,ywzu,Wxuw->KLW', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,yuvz,xvuw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzWw,yuwv,xzuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,yzuv,xuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,yuvz,xvwu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,LzwW,yuvz,xvuw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,yuwv,xzvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,LzwW,yuwv,xzuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wvzy,xvwu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,Wvzy,xvuw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wwvy,xzvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwu,Wuvy,xzvw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wuvy,xzwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsvuw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsuvw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzvus->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzuvs->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzusv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvus,Wxzvws->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwu,yvus,Wxzwvs->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,yzvs,Wxvwus->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvuws->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LyWz,zwuv,xuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lyzw,Wuvw,xuvz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,Wuvw,xuzv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,Wuvz,xuvw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lyzw,Wuvz,xuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lyzw,Wzuv,xvwu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lyzw,Wzuw,xu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvuzs->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lyzw,wuvs,Wxvzus->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvswu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvsuw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvwsu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvusw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvuws->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,zuwv,Wxvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lyzw,zuwv,Wxuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cva__aaa:f_cva__aaa] += sigma_cva.reshape(-1).copy()

        sigma_cva  = einsum('KxW,Lx->KLW', X_abb, h_va, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LWzx,yz->KLW', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,Wwyz->KLW', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwx,Wwzy->KLW', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LWyz,xz->KLW', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzyw,Wxwz->KLW', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzyw,Wxzw->KLW', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('ixy,KiLW,xy->KLW', X_aaa, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('ixy,KiLz,Wxyz->KLW', X_aaa, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('ixy,KiLz,Wxzy->KLW', X_aaa, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= einsum('KxW,L,Lx->KLW', X_abb, e_val, t1_va, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lx,Wy->KLW', X_abb, h_va, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KxW,xy,Ly->KLW', X_abb, h_aa, t1_va, optimize = einsum_type)
        sigma_cva += einsum('KxW,Lxyz,yz->KLW', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzx,zy->KLW', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LWzx,yz->KLW', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LxzW,yz->KLW', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lxzw,Wzyw->KLW', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,Wwyz->KLW', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,Wwzy->KLW', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LWyz,xz->KLW', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzyW,xz->KLW', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzyw,Wxwz->KLW', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzyw,Wxzw->KLW', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('ixW,KiLy,xy->KLW', X_abb, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('ixy,KiLW,xy->KLW', X_abb, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('ixy,KiLz,Wxyz->KLW', X_abb, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('ixy,KiLz,Wxzy->KLW', X_abb, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('ixW,LiKy,xy->KLW', X_bab, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('ixy,LiKz,Wxyz->KLW', X_bab, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('ixy,LiKz,Wxzy->KLW', X_bab, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,L,LzWx,yz->KLW', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,L,Lzwx,Wzwy->KLW', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,L,Lzwx,Wzyw->KLW', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,LyWz,xz->KLW', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,L,Lyzw,Wxwz->KLW', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,L,Lyzw,Wxzw->KLW', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Wz,Lwzx,yw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,xz,LwWz,yw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,xz,Lwuz,Wwuy->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,xz,Lwuz,Wwyu->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,zw,Luzx,Wuwy->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Luzx,Wuyw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,zw,LzWx,yw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,zw,Lzux,Wwuy->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Lzux,Wwyu->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Wz,Lyzw,xw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,zw,LyWz,xw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Lyuz,Wxwu->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,zw,Lyuz,Wxuw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,zw,Lyzu,Wxwu->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Lyzu,Wxuw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,yz,LzWw,xw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,yz,Lzwu,Wxwu->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,yz,Lzwu,Wxuw->KLW', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lz,Wzxw,yw->KLW', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lz,xwuz,Wwuy->KLW', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lz,xwuz,Wwyu->KLW', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,xuvw,yvuz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzWw,xuzv,ywuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,xwuv,yuzv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzWx,zwuv,yuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,LzwW,xuvw,yvuz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,xuvw,yvzu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,LzwW,xuzv,ywuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,xuzv,ywvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,Wuxv,ywvz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wuxv,ywzv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wvxu,ywvz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,Wvxu,ywzv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wwxu,yz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wwxv,yuvz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsvwy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsvyw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswvy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswyv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsyvw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,xuvw,Wzvy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xuvw,Wzyv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,xvsu,Wzvwsy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvysw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsuy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsyu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvusy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvuys->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvysu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsuwy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsuyw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswuy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswyu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsyuw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,Wuvw,yvuz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwx,Wuvw,yvzu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,Wuzv,ywuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwx,Wuzv,ywvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwx,Wwuv,yuzv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvsuy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvsyu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvusy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvuys->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvysu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusvwy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusvyw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswvy->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswyv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusyvw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lz,Wzwy,xw->KLW', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lz,ywzu,Wxwu->KLW', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lz,ywzu,Wxuw->KLW', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,yuvz,xvuw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzWw,yuwv,xzuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,yzuv,xuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,yuvz,xvwu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,LzwW,yuvz,xvuw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,yuwv,xzvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,LzwW,yuwv,xzuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wvzy,xvwu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,Wvzy,xvuw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wwvy,xzvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwu,Wuvy,xzvw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wuvy,xzwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsvuw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsuvw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzvus->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzuvs->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzusv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvus,Wxzvws->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwu,yvus,Wxzwvs->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,yzvs,Wxvwus->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvuws->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LyWz,zwuv,xuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lyzw,Wuvw,xuvz->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,Wuvw,xuzv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,Wuvz,xuvw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lyzw,Wuvz,xuwv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lyzw,Wzuv,xvwu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lyzw,Wzuw,xu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvuzs->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lyzw,wuvs,Wxvzus->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvswu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvsuw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvwsu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvusw->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvuws->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,zuwv,Wxvu->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lyzw,zuwv,Wxuv->KLW', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KxW,L,Lyzx,yz->KLW', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KxW,L,Lyxz,yz->KLW', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,Lx,Wy->KLW', X_abb, e_val, t1_va, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,L,LzWx,yz->KLW', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,L,Lzwx,Wzwy->KLW', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,L,Lzwx,Wzyw->KLW', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,LzxW,yz->KLW', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,Lzxw,Wzyw->KLW', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,LyWz,xz->KLW', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,L,LyzW,xz->KLW', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,L,Lyzw,Wxwz->KLW', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,L,Lyzw,Wxzw->KLW', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,xy,Lzwy,zw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KxW,xy,Lzyw,zw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KxW,yz,Lwxy,zw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,yz,Lwyx,zw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KxW,yz,Lywx,zw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KxW,yz,Lyxw,zw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Wz,Lwxz,yw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Wz,Lwzx,yw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,xz,LwWz,yw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,xz,Lwuz,Wwuy->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,xz,Lwuz,Wwyu->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,xz,LwzW,yw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,xz,Lwzu,Wwyu->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,xz,Lz,Wy->KLW', X_abb, h_aa, t1_va, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,zw,Luxz,Wuyw->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Luzx,Wuwy->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Luzx,Wuyw->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,zw,LzWx,yw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Lzux,Wwuy->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Lzux,Wwyu->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,zw,LzxW,yw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,zw,Lzxu,Wwyu->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Wz,Lywz,xw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Wz,Lyzw,xw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,zw,LyWz,xw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Lyuz,Wxwu->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Lyuz,Wxuw->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,zw,LyzW,xw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Lyzu,Wxwu->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Lyzu,Wxuw->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,yz,LzWw,xw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,yz,LzwW,xw->KLW', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,yz,Lzwu,Wxwu->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,yz,Lzwu,Wxuw->KLW', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Ly,xzwy,wz->KLW', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KxW,Ly,xyzw,zw->KLW', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzw,xwuv,yvzu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzw,xwuz,yu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzw,xuvw,yuvz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzw,xuvz,yuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KxW,Lyzw,xuyv,zwuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KxW,Lyzw,xzuv,yvwu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KxW,Lyzw,xzuw,yu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzx,zwuv,yuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KxW,Lyzx,ywuv,zuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KxW,Lyxz,zwuv,yuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= einsum('KxW,Lyxz,ywuv,zuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lz,Wwxz,yw->KLW', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lz,Wzxw,yw->KLW', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lz,xwuz,Wwuy->KLW', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lz,xwuz,Wwyu->KLW', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lz,xzwu,Wuyw->KLW', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,xuvw,yvuz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzWw,xuzv,ywuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,xwuv,yuzv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzWx,zwuv,yuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,xuvw,yvuz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,xuvw,yvzu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,xuzv,ywuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,xuzv,ywvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzwW,xwuv,yuzv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wuxv,ywvz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wuxv,ywzv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wuxw,yz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wvxu,ywvz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wvxu,ywzv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wvxw,yuvz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wwxu,yz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wwxv,yuvz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswyv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzsywv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xuvw,Wzvy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvw,Wzyv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvwsy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvysw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsuy->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvyus->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswyu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvsywu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,xwvs,Wzsyuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,xwvu,Wzyv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,Wuvw,yvuz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,Wuvw,yvzu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,Wuzv,ywuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,Wuzv,ywvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwx,Wwuv,yuzv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvuys->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvyus->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswyv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wusywv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzxW,zwuv,yuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzxw,Wuvw,yvuz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzxw,Wuzv,ywuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzxw,Wwuv,yuzv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzxw,wuvs,Wzvyus->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzxw,zuvs,Wusywv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lz,Wzwy,xw->KLW', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lz,Wywz,xw->KLW', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lz,ywzu,Wxwu->KLW', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lz,ywzu,Wxuw->KLW', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,yuvz,xvuw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzWw,yuwv,xzuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzWw,yzuv,xuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,yuvz,xvwu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,yuvz,xvuw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,yuwv,xzvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,yuwv,xzuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzwW,yzuv,xuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wvzy,xvwu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wvzy,xvuw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wwvy,xzvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wuvy,xzvw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wuvy,xzwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wyvw,xzvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wyvu,xzwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wyzv,xvwu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxsvwu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzvsu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvus,Wxzvws->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvus,Wxzwvs->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvwus->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvuws->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LyWz,zwuv,xuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LyzW,zwuv,xuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lyzw,Wwuv,xvzu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lyzw,Wwuz,xu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,Wuvw,xuvz->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,Wuvw,xuzv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,Wuvz,xuvw->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,Wuvz,xuwv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lyzw,Wzuv,xvwu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lyzw,Wzuw,xu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvuzs->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvzus->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvwus->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvuws->KLW', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuwv,Wxvu->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,zuwv,Wxuv->KLW', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cva__abb:f_cva__abb] += sigma_cva.reshape(-1).copy()

        sigma_cva  = einsum('KxW,Lx->KLW', X_bab, h_va, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('ixy,LiKW,xy->KLW', X_aaa, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('ixy,LiKz,Wxyz->KLW', X_aaa, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('ixy,LiKz,Wxzy->KLW', X_aaa, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('ixW,LiKy,xy->KLW', X_abb, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('ixy,LiKW,xy->KLW', X_abb, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('ixy,LiKz,Wxyz->KLW', X_abb, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('ixy,LiKz,Wxzy->KLW', X_abb, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= einsum('KxW,L,Lx->KLW', X_bab, e_val, t1_va, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lx,Wy->KLW', X_bab, h_va, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KxW,xy,Ly->KLW', X_bab, h_aa, t1_va, optimize = einsum_type)
        sigma_cva += einsum('KxW,Lxyz,yz->KLW', X_bab, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzx,zy->KLW', X_bab, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LxzW,yz->KLW', X_bab, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lxzw,Wzyw->KLW', X_bab, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwx,Wwyz->KLW', X_bab, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,Wwzy->KLW', X_bab, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzyW,xz->KLW', X_bab, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzyw,Wxwz->KLW', X_bab, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzyw,Wxzw->KLW', X_bab, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('ixW,KiLy,xy->KLW', X_bab, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('ixy,KiLz,Wxyz->KLW', X_bab, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('ixy,KiLz,Wxzy->KLW', X_bab, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KxW,L,Lyzx,yz->KLW', X_bab, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KxW,L,Lyxz,yz->KLW', X_bab, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,Lx,Wy->KLW', X_bab, e_val, t1_va, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,L,Lzwx,Wzwy->KLW', X_bab, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,L,Lzwx,Wzyw->KLW', X_bab, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,LzxW,yz->KLW', X_bab, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,L,Lzxw,Wzyw->KLW', X_bab, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,L,LyzW,xz->KLW', X_bab, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,L,Lyzw,Wxwz->KLW', X_bab, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,L,Lyzw,Wxzw->KLW', X_bab, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,xy,Lzwy,zw->KLW', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KxW,xy,Lzyw,zw->KLW', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KxW,yz,Lwxy,zw->KLW', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,yz,Lwyx,zw->KLW', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KxW,yz,Lywx,zw->KLW', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KxW,yz,Lyxw,zw->KLW', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Wz,Lwxz,yw->KLW', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,xz,Lwuz,Wwuy->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,xz,Lwuz,Wwyu->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,xz,LwzW,yw->KLW', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,xz,Lwzu,Wwyu->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,xz,Lz,Wy->KLW', X_bab, h_aa, t1_va, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,zw,Luxz,Wuyw->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,zw,Luzx,Wuwy->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,zw,Luzx,Wuyw->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Lzux,Wwuy->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,zw,Lzux,Wwyu->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,zw,LzxW,yw->KLW', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,zw,Lzxu,Wwyu->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Wz,Lywz,xw->KLW', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,zw,Lyuz,Wxwu->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Lyuz,Wxuw->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,zw,LyzW,xw->KLW', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,zw,Lyzu,Wxwu->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,zw,Lyzu,Wxuw->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,yz,LzwW,xw->KLW', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,yz,Lzwu,Wxwu->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,yz,Lzwu,Wxuw->KLW', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Ly,xzwy,wz->KLW', X_bab, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KxW,Ly,xyzw,zw->KLW', X_bab, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzw,xwuv,yvzu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzw,xwuz,yu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzw,xuvw,yuvz->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzw,xuvz,yuwv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KxW,Lyzw,xuyv,zwuv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KxW,Lyzw,xzuv,yvwu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KxW,Lyzw,xzuw,yu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KxW,Lyzx,zwuv,yuwv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KxW,Lyzx,ywuv,zuwv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KxW,Lyxz,zwuv,yuwv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= einsum('KxW,Lyxz,ywuv,zuwv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lz,Wwxz,yw->KLW', X_bab, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lz,xwuz,Wwuy->KLW', X_bab, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lz,xwuz,Wwyu->KLW', X_bab, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lz,xzwu,Wuyw->KLW', X_bab, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,xuvw,yvuz->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,LzwW,xuvw,yvzu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,xuzv,ywuv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,LzwW,xuzv,ywvu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzwW,xwuv,yuzv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wuxv,ywvz->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwu,Wuxv,ywzv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wuxw,yz->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwu,Wvxu,ywvz->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wvxu,ywzv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wvxw,yuvz->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvs,Wzswyv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwu,xuvs,Wzsywv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xuvw,Wzvy->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwu,xuvw,Wzyv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvswy->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvsyw->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvwys->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvysw->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvsu,Wzvyws->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,xvsw,Wzvsuy->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwu,xvsw,Wzvyus->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,xvzs,Wvswyu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,xvzs,Wvsywu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,xwvs,Wzsyuv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,xwvu,Wzyv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwx,Wuvw,yvuz->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,Wuvw,yvzu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwx,Wuzv,ywuv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,Wuzv,ywvu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwx,wuvs,Wzvuys->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwx,wuvs,Wzvyus->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwx,zuvs,Wuswyv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwx,zuvs,Wusywv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LzxW,zwuv,yuwv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzxw,Wuvw,yvuz->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzxw,Wuzv,ywuv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzxw,Wwuv,yuzv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzxw,wuvs,Wzvyus->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzxw,zuvs,Wusywv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lz,Wywz,xw->KLW', X_bab, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lz,ywzu,Wxwu->KLW', X_bab, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lz,ywzu,Wxuw->KLW', X_bab, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,LzwW,yuvz,xvwu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,LzwW,yuvz,xvuw->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,LzwW,yuwv,xzvu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,LzwW,yuwv,xzuv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,LzwW,yzuv,xuwv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwu,Wvzy,xvwu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,Wvzy,xvuw->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,Wuvy,xzvw->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,Wuvy,xzwv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wyvw,xzvu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lzwu,Wyvu,xzwv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxy,Lzwu,Wyzv,xvwu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxy,Lzwu,yvsz,Wxsvwu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvsz,Wxswvu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lzwu,yvws,Wxzvsu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvws,Wxzsvu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvus,Wxzvsw->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yvus,Wxzvws->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvus,Wxzsvw->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvus,Wxzswv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yvus,Wxzwsv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvswu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvsuw->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvwsu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvusw->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lzwu,yzvs,Wxvuws->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,LyzW,zwuv,xuwv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lyzw,Wwuv,xvzu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxy,Lyzw,Wwuz,xu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,Wuvw,xuvz->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lyzw,Wuvw,xuzv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lyzw,Wuvz,xuvw->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,Wuvz,xuwv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvsuz->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvszu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvusz->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvuzs->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxy,Lyzw,wuvs,Wxvzsu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lyzw,zuvs,Wxvwus->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuvs,Wxvuws->KLW', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxy,Lyzw,zuwv,Wxvu->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxy,Lyzw,zuwv,Wxuv->KLW', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cva__bab:f_cva__bab] += sigma_cva.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CVA-CAA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAA_CCE(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        h_xe = mr_adc.h1eff.xe

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxxe = mr_adc.v2e.xxxe

        v_xaae = mr_adc.v2e.xaae
        v_xeaa = mr_adc.v2e.xeaa

        ## Amplitudes
        t1_xe = mr_adc.t1.xe

        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        sigma_caa =- 1/2 * einsum('Kia,ia,WZ->KWZ', X_aaa, h_xe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaZx,Wx->KWZ', X_aaa, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaxy,WxZy->KWZ', X_aaa, v_xeaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixZa,Wx->KWZ', X_aaa, v_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,WyZx->KWZ', X_aaa, v_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,WyxZ->KWZ', X_aaa, v_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/4 * einsum('ija,iKja,WZ->KWZ', X_aaa, v_xxxe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/4 * einsum('ija,jKia,WZ->KWZ', X_aaa, v_xxxe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ia,WZ->KWZ', X_abb, h_xe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaZx,Wx->KWZ', X_abb, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaxy,WxZy->KWZ', X_abb, v_xeaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,WyZx->KWZ', X_abb, v_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,WyxZ->KWZ', X_abb, v_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ija,iKja,WZ->KWZ', X_abb, v_xxxe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,iZax,Wx->KWZ', X_aaa, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,a,iZxa,Wx->KWZ', X_aaa, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ia,WZ->KWZ', X_aaa, e_extern, t1_xe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ixay,WxZy->KWZ', X_aaa, e_extern, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,a,ixya,WxZy->KWZ', X_aaa, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,a,ixya,WxyZ->KWZ', X_aaa, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,iZax,Wx->KWZ', X_aaa, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,i,iZxa,Wx->KWZ', X_aaa, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ia,WZ->KWZ', X_aaa, e_cvs, t1_xe, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ixay,WxZy->KWZ', X_aaa, e_cvs, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,i,ixya,WxZy->KWZ', X_aaa, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,i,ixya,WxyZ->KWZ', X_aaa, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,Zx,ixay,Wy->KWZ', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,Zx,ixya,Wy->KWZ', X_aaa, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,iZax,Wy->KWZ', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,iZxa,Wy->KWZ', X_aaa, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,izax,WzZy->KWZ', X_aaa, h_aa, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,izxa,WzZy->KWZ', X_aaa, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,izxa,WzyZ->KWZ', X_aaa, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,ixaz,WyZz->KWZ', X_aaa, h_aa, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,ixza,WyZz->KWZ', X_aaa, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,ixza,WyzZ->KWZ', X_aaa, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iZax,xyzw,Wzyw->KWZ', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,iZxa,xyzw,Wzyw->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zzwx,Wwzy->KWZ', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,Zzyw,Wxzw->KWZ', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zxzw,Wzyw->KWZ', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,yzwu,WxwZzu->KWZ', X_aaa, t1_xaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,xzwu,WzuZyw->KWZ', X_aaa, t1_xaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzwx,Wwzy->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzwx,Wwyz->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzyw,Wxzw->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzyw,Wxwz->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixya,Zxzw,Wzyw->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,yzwu,WxwZzu->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,yzwu,WxwzZu->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,xzwu,WzuZyw->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,xzwu,WzuyZw->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,iZax,Wx->KWZ', X_abb, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ia,WZ->KWZ', X_abb, e_extern, t1_xe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ixay,WxZy->KWZ', X_abb, e_extern, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,a,ixya,WxZy->KWZ', X_abb, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,a,ixya,WxyZ->KWZ', X_abb, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,iZax,Wx->KWZ', X_abb, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ia,WZ->KWZ', X_abb, e_cvs, t1_xe, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ixay,WxZy->KWZ', X_abb, e_cvs, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,i,ixya,WxZy->KWZ', X_abb, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,i,ixya,WxyZ->KWZ', X_abb, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,Zx,ixay,Wy->KWZ', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,iZax,Wy->KWZ', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,izax,WzZy->KWZ', X_abb, h_aa, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,xy,izxa,WzZy->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,izxa,WzyZ->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,ixaz,WyZz->KWZ', X_abb, h_aa, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,xy,ixza,WyZz->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,ixza,WyzZ->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iZax,xyzw,Wzyw->KWZ', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zzwx,Wwzy->KWZ', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,Zzyw,Wxzw->KWZ', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zxzw,Wzyw->KWZ', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,yzwu,WxwZzu->KWZ', X_abb, t1_xaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,xzwu,WzuZyw->KWZ', X_abb, t1_xaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,ixya,Zzwx,Wwzy->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzwx,Wwyz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,Zzyw,Wxzw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzyw,Wxwz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,yzwu,WxwZzu->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,yzwu,WxwzZu->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,ixya,xzwu,WzuZyw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,xzwu,WzuyZw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_caa__aaa:f_caa__aaa] += sigma_caa.reshape(-1).copy()

        sigma_caa =- 1/2 * einsum('Kia,ia,WZ->KWZ', X_aaa, h_xe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaZx,Wx->KWZ', X_aaa, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaxy,WxZy->KWZ', X_aaa, v_xeaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,WyZx->KWZ', X_aaa, v_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,WyxZ->KWZ', X_aaa, v_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/4 * einsum('ija,iKja,WZ->KWZ', X_aaa, v_xxxe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/4 * einsum('ija,jKia,WZ->KWZ', X_aaa, v_xxxe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ia,WZ->KWZ', X_abb, h_xe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaZx,Wx->KWZ', X_abb, v_xeaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaxy,WxZy->KWZ', X_abb, v_xeaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixZa,Wx->KWZ', X_abb, v_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,WyZx->KWZ', X_abb, v_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,WyxZ->KWZ', X_abb, v_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ija,iKja,WZ->KWZ', X_abb, v_xxxe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,iZax,Wx->KWZ', X_aaa, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ia,WZ->KWZ', X_aaa, e_extern, t1_xe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ixay,WxZy->KWZ', X_aaa, e_extern, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,a,ixya,WxZy->KWZ', X_aaa, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,a,ixya,WxyZ->KWZ', X_aaa, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,iZax,Wx->KWZ', X_aaa, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ia,WZ->KWZ', X_aaa, e_cvs, t1_xe, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ixay,WxZy->KWZ', X_aaa, e_cvs, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,i,ixya,WxZy->KWZ', X_aaa, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,i,ixya,WxyZ->KWZ', X_aaa, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,Zx,ixay,Wy->KWZ', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,iZax,Wy->KWZ', X_aaa, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,izax,WzZy->KWZ', X_aaa, h_aa, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,xy,izxa,WzZy->KWZ', X_aaa, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,izxa,WzyZ->KWZ', X_aaa, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,ixaz,WyZz->KWZ', X_aaa, h_aa, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,xy,ixza,WyZz->KWZ', X_aaa, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,ixza,WyzZ->KWZ', X_aaa, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iZax,xyzw,Wzyw->KWZ', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zzwx,Wwzy->KWZ', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,Zzyw,Wxzw->KWZ', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zxzw,Wzyw->KWZ', X_aaa, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,yzwu,WxwZzu->KWZ', X_aaa, t1_xaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,xzwu,WzuZyw->KWZ', X_aaa, t1_xaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,ixya,Zzwx,Wwzy->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzwx,Wwyz->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,Zzyw,Wxzw->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzyw,Wxwz->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,yzwu,WxwZzu->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,yzwu,WxwzZu->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,ixya,xzwu,WzuZyw->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,xzwu,WzuyZw->KWZ', X_aaa, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,iZax,Wx->KWZ', X_abb, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,a,iZxa,Wx->KWZ', X_abb, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ia,WZ->KWZ', X_abb, e_extern, t1_xe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ixay,WxZy->KWZ', X_abb, e_extern, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,a,ixya,WxZy->KWZ', X_abb, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,a,ixya,WxyZ->KWZ', X_abb, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,iZax,Wx->KWZ', X_abb, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,i,iZxa,Wx->KWZ', X_abb, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ia,WZ->KWZ', X_abb, e_cvs, t1_xe, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ixay,WxZy->KWZ', X_abb, e_cvs, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,i,ixya,WxZy->KWZ', X_abb, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,i,ixya,WxyZ->KWZ', X_abb, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,Zx,ixay,Wy->KWZ', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,Zx,ixya,Wy->KWZ', X_abb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,iZax,Wy->KWZ', X_abb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,iZxa,Wy->KWZ', X_abb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,izax,WzZy->KWZ', X_abb, h_aa, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,izxa,WzZy->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,izxa,WzyZ->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,ixaz,WyZz->KWZ', X_abb, h_aa, t1_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,ixza,WyZz->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,ixza,WyzZ->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iZax,xyzw,Wzyw->KWZ', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,iZxa,xyzw,Wzyw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zzwx,Wwzy->KWZ', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,Zzyw,Wxzw->KWZ', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zxzw,Wzyw->KWZ', X_abb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,yzwu,WxwZzu->KWZ', X_abb, t1_xaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,xzwu,WzuZyw->KWZ', X_abb, t1_xaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzwx,Wwzy->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzwx,Wwyz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzyw,Wxzw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzyw,Wxwz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixya,Zxzw,Wzyw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,yzwu,WxwZzu->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,yzwu,WxwzZu->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,xzwu,WzuZyw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,xzwu,WzuyZw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_caa__abb:f_caa__abb] += sigma_caa.reshape(-1).copy()

        sigma_caa =- 1/2 * einsum('iKa,ixZa,Wx->KWZ', X_abb, v_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKa,ixya,WyZx->KWZ', X_abb, v_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKa,ixya,WyxZ->KWZ', X_abb, v_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKa,a,iZxa,Wx->KWZ', X_abb, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKa,a,ixya,WxZy->KWZ', X_abb, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKa,a,ixya,WxyZ->KWZ', X_abb, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKa,i,iZxa,Wx->KWZ', X_abb, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKa,i,ixya,WxZy->KWZ', X_abb, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKa,i,ixya,WxyZ->KWZ', X_abb, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKa,Zx,ixya,Wy->KWZ', X_abb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKa,xy,iZxa,Wy->KWZ', X_abb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKa,xy,izxa,WzZy->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKa,xy,izxa,WzyZ->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKa,xy,ixza,WyZz->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKa,xy,ixza,WyzZ->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKa,iZxa,xyzw,Wzyw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKa,ixya,Zzwx,Wwzy->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKa,ixya,Zzwx,Wwyz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKa,ixya,Zzyw,Wxzw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKa,ixya,Zzyw,Wxwz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKa,ixya,Zxzw,Wzyw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKa,ixya,yzwu,WxwZuz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKa,ixya,yzwu,WxwuZz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKa,ixya,yzwu,WxwuzZ->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKa,ixya,yzwu,WxwzZu->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKa,ixya,yzwu,WxwzuZ->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKa,ixya,xzwu,WzuZwy->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKa,ixya,xzwu,WzuwZy->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKa,ixya,xzwu,WzuwyZ->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKa,ixya,xzwu,WzuyZw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKa,ixya,xzwu,WzuywZ->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_caa__bab:f_caa__bab] += sigma_caa.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CAA-CCE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCE_CCE(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Two-electron integrals
        v_xxxx = mr_adc.v2e.xxxx

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce =- 1/2 * einsum('ijB,KiLj->KLB', X_aaa, v_xxxx, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('ijB,KjLi->KLB', X_aaa, v_xxxx, optimize = einsum_type)
        # sigma_cce += einsum('Kia,iLBa->KLB', X_aaa, v_xxee, optimize = einsum_type)
        # sigma_cce -= einsum('Lia,iKBa->KLB', X_aaa, v_xxee, optimize = einsum_type)
        # sigma_cce -= einsum('Kia,LBai->KLB', X_aaa, v_xeex, optimize = einsum_type)
        # sigma_cce += einsum('Lia,KBai->KLB', X_aaa, v_xeex, optimize = einsum_type)
        # sigma_cce -= einsum('Kia,LBai->KLB', X_abb, v_xeex, optimize = einsum_type)
        # sigma_cce += einsum('Lia,KBai->KLB', X_abb, v_xeex, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cce =- einsum('ijB,KiLj->KLB', X_abb, v_xxxx, optimize = einsum_type)
        # sigma_cce += einsum('iLa,iKBa->KLB', X_abb, v_xxee, optimize = einsum_type)
        # sigma_cce += einsum('Kia,iLBa->KLB', X_abb, v_xxee, optimize = einsum_type)
        # sigma_cce -= einsum('Kia,LBai->KLB', X_aaa, v_xeex, optimize = einsum_type)
        # sigma_cce -= einsum('Kia,LBai->KLB', X_abb, v_xeex, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CCE-CCE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCE_CCE__V_XXEE(mr_adc, X_aaa, X_abb, sigma, v_xxee):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce  = einsum('Kia,iLBa->KLB', X_aaa, v_xxee, optimize = einsum_type)
        sigma_cce -= einsum('Lia,iKBa->KLB', X_aaa, v_xxee, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cce  = einsum('iLa,iKBa->KLB', X_abb, v_xxee, optimize = einsum_type)
        sigma_cce += einsum('Kia,iLBa->KLB', X_abb, v_xxee, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.xxee", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCE_CCE__V_XEEX(mr_adc, X_aaa, X_abb, sigma, v_xeex):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce =- einsum('Kia,LBai->KLB', X_aaa, v_xeex, optimize = einsum_type)
        sigma_cce += einsum('Lia,KBai->KLB', X_aaa, v_xeex, optimize = einsum_type)
        sigma_cce -= einsum('Kia,LBai->KLB', X_abb, v_xeex, optimize = einsum_type)
        sigma_cce += einsum('Lia,KBai->KLB', X_abb, v_xeex, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cce =- einsum('Kia,LBai->KLB', X_aaa, v_xeex, optimize = einsum_type)
        sigma_cce -= einsum('Kia,LBai->KLB', X_abb, v_xeex, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.xeex", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CCE(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_xa = mr_adc.h1eff.xa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxxa = mr_adc.v2e.xxxa

        v_xaaa = mr_adc.v2e.xaaa

        ## Amplitudes
        t1_xa = mr_adc.t1.xa
        t1_xaaa = mr_adc.t1.xaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae  = 1/2 * einsum('KiB,ix,Zx->KZB', X_aaa, h_xa, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,Zyxz->KZB', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/4 * einsum('ijB,iKjx,Zx->KZB', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/4 * einsum('ijB,jKix,Zx->KZB', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,i,ix,Zx->KZB', X_aaa, e_cvs, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,i,ixyz,Zxyz->KZB', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,izwx,Zzwy->KZB', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,izxw,Zzyw->KZB', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,ix,Zy->KZB', X_aaa, h_aa, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,xy,ixzw,Zyzw->KZB', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ix,xyzw,Zzyw->KZB', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,zwuv,Zxuywv->KZB', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuvzw->KZB', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuvwz->KZB', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuzvw->KZB', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuzwv->KZB', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuwvz->KZB', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('KiB,ixyz,ywuv,Zxuwzv->KZB', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,ywzu,Zxwu->KZB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,ixyz,xwuv,Zwvyzu->KZB', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        # sigma_cae += 1/2 * einsum('Kia,ixBa,Zx->KZB', X_aaa, v_xaee, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('Kia,iaBx,Zx->KZB', X_aaa, v_xeea, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('Kia,iaBx,Zx->KZB', X_abb, v_xeea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()


        sigma_cae  = 1/2 * einsum('KiB,ix,Zx->KZB', X_abb, h_xa, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,Zyxz->KZB', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ijB,iKjx,Zx->KZB', X_abb, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,i,ix,Zx->KZB', X_abb, e_cvs, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,i,ixyz,Zxyz->KZB', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,izwx,Zzwy->KZB', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,izxw,Zzyw->KZB', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,ix,Zy->KZB', X_abb, h_aa, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,xy,ixzw,Zyzw->KZB', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ix,xyzw,Zzyw->KZB', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,zwuv,Zxuywv->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuvzw->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuvwz->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuzvw->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuzwv->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuwvz->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('KiB,ixyz,ywuv,Zxuwzv->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,ywzu,Zxwu->KZB', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,ixyz,xwuv,Zwvyzu->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        # sigma_cae += 1/2 * einsum('Kia,ixBa,Zx->KZB', X_abb, v_xaee, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('Kia,iaBx,Zx->KZB', X_aaa, v_xeea, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('Kia,iaBx,Zx->KZB', X_abb, v_xeea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()


        sigma_cae =- 1/2 * einsum('iKB,ix,Zx->KZB', X_abb, h_xa, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('iKB,ixyz,Zyxz->KZB', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('ijB,jKix,Zx->KZB', X_abb, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('iKB,i,ix,Zx->KZB', X_abb, e_cvs, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('iKB,i,ixyz,Zxyz->KZB', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('iKB,xy,izwx,Zzwy->KZB', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('iKB,xy,izxw,Zzyw->KZB', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('iKB,xy,ix,Zy->KZB', X_abb, h_aa, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('iKB,xy,ixzw,Zyzw->KZB', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('iKB,ix,xyzw,Zzyw->KZB', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('iKB,ixyz,zwuv,Zxuywv->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('iKB,ixyz,ywuv,Zxuvzw->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('iKB,ixyz,ywuv,Zxuvwz->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('iKB,ixyz,ywuv,Zxuzvw->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('iKB,ixyz,ywuv,Zxuzwv->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('iKB,ixyz,ywuv,Zxuwvz->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('iKB,ixyz,ywuv,Zxuwzv->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('iKB,ixyz,ywzu,Zxwu->KZB', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('iKB,ixyz,xwuv,Zwvyzu->KZB', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('iKa,ixBa,Zx->KZB', X_abb, v_xaee, rdm_ca, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CAE-CCE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CCE__V_XAEE(mr_adc, X_aaa, X_abb, sigma, v_xaee):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae  = 1/2 * einsum('Kia,ixBa,Zx->KZB', X_aaa, v_xaee, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/2 * einsum('Kia,ixBa,Zx->KZB', X_abb, v_xaee, rdm_ca, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()

        sigma_cae =- 1/2 * einsum('iKa,ixBa,Zx->KZB', X_abb, v_xaee, rdm_ca, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.xaee", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CCE__V_XEEA(mr_adc, X_aaa, X_abb, sigma, v_xeea):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb

        sigma_cae =- 1/2 * einsum('Kia,iaBx,Zx->KZB', X_aaa, v_xeea, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kia,iaBx,Zx->KZB', X_abb, v_xeea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae =- 1/2 * einsum('Kia,iaBx,Zx->KZB', X_aaa, v_xeea, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kia,iaBx,Zx->KZB', X_abb, v_xeea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.xeea", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCA_CCE(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Molecular Orbitals Energies
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_ae = mr_adc.h1eff.ae

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxae = mr_adc.v2e.xxae
        v_xaex = mr_adc.v2e.xaex

        v_aaae = mr_adc.v2e.aaae

        ## Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cca =- einsum('KLa,Wa->KLW', X_aaa, h_ae, optimize = einsum_type)
        sigma_cca -= einsum('Kia,LWai->KLW', X_aaa, v_xaex, optimize = einsum_type)
        sigma_cca += einsum('Kia,iLWa->KLW', X_aaa, v_xxae, optimize = einsum_type)
        sigma_cca += einsum('Lia,KWai->KLW', X_aaa, v_xaex, optimize = einsum_type)
        sigma_cca -= einsum('Lia,iKWa->KLW', X_aaa, v_xxae, optimize = einsum_type)
        sigma_cca -= einsum('Kia,LWai->KLW', X_abb, v_xaex, optimize = einsum_type)
        sigma_cca += einsum('Lia,KWai->KLW', X_abb, v_xaex, optimize = einsum_type)
        sigma_cca -= einsum('KLa,a,Wa->KLW', X_aaa, e_extern, t1_ae, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,xa,Wx->KLW', X_aaa, h_ae, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('KLa,Wx,xa->KLW', X_aaa, h_aa, t1_ae, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,Wxya,yx->KLW', X_aaa, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KLa,xyWa,xy->KLW', X_aaa, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,xyza,Wyzx->KLW', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kia,iLxa,Wx->KLW', X_aaa, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lia,Kxai,Wx->KLW', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lia,iKxa,Wx->KLW', X_aaa, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_abb, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lia,Kxai,Wx->KLW', X_abb, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,a,Wxya,xy->KLW', X_aaa, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KLa,a,xWya,xy->KLW', X_aaa, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,a,xa,Wx->KLW', X_aaa, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,a,xyza,Wzyx->KLW', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KLa,Wx,yxza,zy->KLW', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,Wx,xyza,zy->KLW', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,xy,Wzxa,yz->KLW', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xy,Wxza,yz->KLW', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KLa,xy,zWxa,yz->KLW', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,xy,zwxa,Wywz->KLW', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xy,zxwa,Wwyz->KLW', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KLa,xy,xWza,yz->KLW', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xy,xa,Wy->KLW', X_aaa, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xy,xzwa,Wwzy->KLW', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,Wxya,yzwu,xwzu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,Wxya,xzwu,ywzu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= einsum('KLa,xWya,yzwu,xwzu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KLa,xWya,xzwu,ywzu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xa,Wyzx,zy->KLW', X_aaa, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('KLa,xa,Wxyz,yz->KLW', X_aaa, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xa,xyzw,Wzyw->KLW', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xyza,Wwuy,zwxu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xyza,Wwux,zwuy->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,xyza,Wwzu,yxwu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KLa,xyza,Wywu,zuxw->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KLa,xyza,Wywx,zw->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xyza,Wxwu,zuyw->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xyza,Wxwy,zw->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,xyza,zwuv,Wwvyxu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('KLa,xyza,ywuv,Wzuvwx->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('KLa,xyza,ywuv,Wzuvxw->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('KLa,xyza,ywuv,Wzuwvx->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('KLa,xyza,ywuv,Wzuwxv->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('KLa,xyza,ywuv,Wzuxvw->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('KLa,xyza,ywuv,Wzuxwv->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xyza,ywxu,Wzwu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xyza,xwuv,Wzuywv->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_cca__aaa:f_cca__aaa] += sigma_cca[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cca =- einsum('Kia,LWai->KLW', X_aaa, v_xaex, optimize = einsum_type)
        sigma_cca -= einsum('KLa,Wa->KLW', X_abb, h_ae, optimize = einsum_type)
        sigma_cca -= einsum('Kia,LWai->KLW', X_abb, v_xaex, optimize = einsum_type)
        sigma_cca += einsum('Kia,iLWa->KLW', X_abb, v_xxae, optimize = einsum_type)
        sigma_cca += einsum('iLa,iKWa->KLW', X_abb, v_xxae, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KLa,a,Wa->KLW', X_abb, e_extern, t1_ae, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,xa,Wx->KLW', X_abb, h_ae, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('KLa,Wx,xa->KLW', X_abb, h_aa, t1_ae, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,Wxya,yx->KLW', X_abb, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KLa,xyWa,xy->KLW', X_abb, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,xyza,Wyzx->KLW', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_abb, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kia,iLxa,Wx->KLW', X_abb, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('iLa,iKxa,Wx->KLW', X_abb, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,a,Wxya,xy->KLW', X_abb, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KLa,a,xWya,xy->KLW', X_abb, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,a,xa,Wx->KLW', X_abb, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,a,xyza,Wzyx->KLW', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KLa,Wx,yxza,zy->KLW', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,Wx,xyza,zy->KLW', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,xy,Wzxa,yz->KLW', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xy,Wxza,yz->KLW', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca -= einsum('KLa,xy,zWxa,yz->KLW', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,xy,zwxa,Wywz->KLW', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xy,zxwa,Wwyz->KLW', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KLa,xy,xWza,yz->KLW', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xy,xa,Wy->KLW', X_abb, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xy,xzwa,Wwzy->KLW', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,Wxya,yzwu,xwzu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,Wxya,xzwu,ywzu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= einsum('KLa,xWya,yzwu,xwzu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KLa,xWya,xzwu,ywzu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xa,Wyzx,zy->KLW', X_abb, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += einsum('KLa,xa,Wxyz,yz->KLW', X_abb, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xa,xyzw,Wzyw->KLW', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xyza,Wwuy,zwxu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xyza,Wwux,zwuy->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,xyza,Wwzu,yxwu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KLa,xyza,Wywu,zuxw->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += einsum('KLa,xyza,Wywx,zw->KLW', X_abb, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xyza,Wxwu,zuyw->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xyza,Wxwy,zw->KLW', X_abb, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('KLa,xyza,zwuv,Wwvyxu->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('KLa,xyza,ywuv,Wzuvwx->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('KLa,xyza,ywuv,Wzuvxw->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('KLa,xyza,ywuv,Wzuwvx->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('KLa,xyza,ywuv,Wzuwxv->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('KLa,xyza,ywuv,Wzuxvw->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('KLa,xyza,ywuv,Wzuxwv->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xyza,ywxu,Wzwu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('KLa,xyza,xwuv,Wzuywv->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_cca__abb:f_cca__abb] += sigma_cca.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CCA-CCE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CCE(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Two-electron integrals
        v_xxvx = mr_adc.v2e.xxvx

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        sigma_cve =- 1/2 * einsum('ijB,KiLj->KLB', X_aaa, v_xxvx, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('ijB,KjLi->KLB', X_aaa, v_xxvx, optimize = einsum_type)
        # sigma_cve += einsum('Kia,iLBa->KLB', X_aaa, v_xvee, optimize = einsum_type)
        # sigma_cve -= einsum('Kia,LBai->KLB', X_aaa, v_veex, optimize = einsum_type)
        # sigma_cve -= einsum('Kia,LBai->KLB', X_abb, v_veex, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve =- einsum('ijB,KiLj->KLB', X_abb, v_xxvx, optimize = einsum_type)
        # sigma_cve += einsum('Kia,iLBa->KLB', X_abb, v_xvee, optimize = einsum_type)
        # sigma_cve -= einsum('Kia,LBai->KLB', X_aaa, v_veex, optimize = einsum_type)
        # sigma_cve -= einsum('Kia,LBai->KLB', X_abb, v_veex, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        sigma_cve  = einsum('ijB,KjLi->KLB', X_abb, v_xxvx, optimize = einsum_type)
        # sigma_cve -= einsum('iKa,iLBa->KLB', X_abb, v_xvee, optimize = einsum_type)
        sigma[s_cve__bab:f_cve__bab] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CVE-CCE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CCE__V_XVEE(mr_adc, X_aaa, X_abb, sigma, v_xvee):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        sigma_cve  = einsum('Kia,iLBa->KLB', X_aaa, v_xvee, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve  = einsum('Kia,iLBa->KLB', X_abb, v_xvee, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        sigma_cve =- einsum('iKa,iLBa->KLB', X_abb, v_xvee, optimize = einsum_type)
        sigma[s_cve__bab:f_cve__bab] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.xvee", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CCE__V_VEEX(mr_adc, X_aaa, X_abb, sigma, v_veex):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb

        sigma_cve =- einsum('Kia,LBai->KLB', X_aaa, v_veex, optimize = einsum_type)
        sigma_cve -= einsum('Kia,LBai->KLB', X_abb, v_veex, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve =- einsum('Kia,LBai->KLB', X_aaa, v_veex, optimize = einsum_type)
        sigma_cve -= einsum('Kia,LBai->KLB', X_abb, v_veex, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.veex", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVA_CCE(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Two-electron integrals
        v_xvae = mr_adc.v2e.xvae
        v_vaex = mr_adc.v2e.vaex

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        sigma_cva =- einsum('Kia,LWai->KLW', X_aaa, v_vaex, optimize = einsum_type)
        sigma_cva += einsum('Kia,iLWa->KLW', X_aaa, v_xvae, optimize = einsum_type)
        sigma_cva -= einsum('Kia,LWai->KLW', X_abb, v_vaex, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_aaa, v_vaex, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kia,iLxa,Wx->KLW', X_aaa, v_xvae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_abb, v_vaex, rdm_ca, optimize = einsum_type)
        sigma[s_cva__aaa:f_cva__aaa] += sigma_cva.reshape(-1).copy()

        sigma_cva =- einsum('Kia,LWai->KLW', X_aaa, v_vaex, optimize = einsum_type)
        sigma_cva -= einsum('Kia,LWai->KLW', X_abb, v_vaex, optimize = einsum_type)
        sigma_cva += einsum('Kia,iLWa->KLW', X_abb, v_xvae, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_aaa, v_vaex, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_abb, v_vaex, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kia,iLxa,Wx->KLW', X_abb, v_xvae, rdm_ca, optimize = einsum_type)
        sigma[s_cva__abb:f_cva__abb] += sigma_cva.reshape(-1).copy()

        sigma_cva =- einsum('iKa,iLWa->KLW', X_abb, v_xvae, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iKa,iLxa,Wx->KLW', X_abb, v_xvae, rdm_ca, optimize = einsum_type)
        sigma[s_cva__bab:f_cva__bab] += sigma_cva.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CVA-CCE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAA_CAE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_ae = mr_adc.h1eff.ae

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxae = mr_adc.v2e.xxae
        v_xaex = mr_adc.v2e.xaex

        v_aaae = mr_adc.v2e.aaae

        ## Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        # Note: implemented as a transpose to avoid 4-RDM
        sigma_caa  = 1/2 * einsum('Kxa,Za,Wx->KWZ', X_aaa, h_ae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,Wzxy->KWZ', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,Wzyx->KWZ', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yWza,Zxzy->KWZ', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yWza,Zxyz->KWZ', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,yzZa,Wyxz->KWZ', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ixa,KZai,Wx->KWZ', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixa,Kyai,WyZx->KWZ', X_aaa, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixa,Kyai,WyxZ->KWZ', X_aaa, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ixa,iKZa,Wx->KWZ', X_aaa, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixa,iKya,WyZx->KWZ', X_aaa, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixa,iKya,WyxZ->KWZ', X_aaa, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,Wzxy->KWZ', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,Zyza,Wzyx->KWZ', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yWza,Zxzy->KWZ', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yWza,Zxyz->KWZ', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixa,iKya,WyZx->KWZ', X_abb, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixa,iKya,WyxZ->KWZ', X_abb, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ixa,KZai,Wx->KWZ', X_bab, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixa,Kyai,WyZx->KWZ', X_bab, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixa,Kyai,WyxZ->KWZ', X_bab, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,a,Za,Wx->KWZ', X_aaa, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,a,Zyza,Wyzx->KWZ', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,a,Zyza,Wyxz->KWZ', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,a,yZza,Wyxz->KWZ', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,a,yzWa,Zxzy->KWZ', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,a,yzWa,Zxyz->KWZ', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Wy,zwya,Zxwz->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Wy,zwya,Zxzw->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,Zy,zywa,Wzxw->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,Zy,ya,Wx->KWZ', X_aaa, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zy,yzwa,Wzwx->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zy,yzwa,Wzxw->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,Zwya,Wwzx->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,Zwya,Wwxz->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,Zywa,Wzwx->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,Zywa,Wzxw->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,yz,wZya,Wwxz->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,wyWa,Zxwz->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,wyWa,Zxzw->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,yz,yZwa,Wzxw->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,ywWa,Zxwz->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,ywWa,Zxzw->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,zwuv,Wyuwxv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,zwuv,Wyuxwv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,ywuv,Wwvzxu->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,ywuv,Wwvxzu->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,yZza,zwuv,Wyuxwv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,yZza,ywuv,Wwvxzu->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,ya,Wzyw,Zxwz->KWZ', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,ya,Wzyw,Zxzw->KWZ', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,ya,Zzwy,Wwzx->KWZ', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,ya,Zzwy,Wwxz->KWZ', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,ya,Zyzw,Wzxw->KWZ', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,zwuv,Zxuwyv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,zwuv,Zxuywv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,ywuv,Zxuwzv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywuv,Zxuzwv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,ywzu,Zxwu->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywzu,Zxuw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuzyv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuyzv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuvw,Zxvuzy->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuvw,Zxvzuy->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuzv,Zxwvuy->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuzv,Zxwuvy->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwuzv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwzuv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvuwx->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvxwu->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuvy,Wzvuxw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvy,Wzvxuw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyuxv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyxuv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,yzwa,Zzuv,Wyuxwv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,yzwa,Zzuy,Wuxw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuwxv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuxwv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zyuz,Wuwx->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuz,Wuxw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,a,Zyza,Wyzx->KWZ', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,a,Zyza,Wyxz->KWZ', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,a,yzWa,Zxzy->KWZ', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,a,yzWa,Zxyz->KWZ', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Wy,zwya,Zxwz->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,Wy,zwya,Zxzw->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,Zy,yzwa,Wzwx->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zy,yzwa,Wzxw->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yz,Zwya,Wwzx->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,Zwya,Wwxz->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yz,Zywa,Wzwx->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,Zywa,Wzxw->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yz,wyWa,Zxwz->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,wyWa,Zxzw->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,ywWa,Zxwz->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yz,ywWa,Zxzw->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,zwuv,Wyuvwx->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,zwuv,Wyuvxw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,zwuv,Wyuwvx->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,zwuv,Wyuwxv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,zwuv,Wyuxvw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,ywuv,Wwvuzx->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,ywuv,Wwvuxz->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,ywuv,Wwvzux->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,ywuv,Wwvzxu->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,ywuv,Wwvxuz->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,ya,Wzyw,Zxwz->KWZ', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,ya,Wzyw,Zxzw->KWZ', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,ya,Zzwy,Wwzx->KWZ', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,ya,Zzwy,Wwxz->KWZ', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,zwuv,Zxuwyv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yzWa,zwuv,Zxuywv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywuv,Zxuvwz->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywuv,Zxuvzw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywuv,Zxuwvz->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,ywuv,Zxuwzv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywuv,Zxuzvw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yzWa,ywzu,Zxwu->KWZ', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,ywzu,Zxuw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuvzy->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuvyz->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuzvy->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuyvz->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuyzv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yzwa,Wuvw,Zxvuzy->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuvw,Zxvzuy->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuzv,Zxwvuy->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yzwa,Wuzv,Zxwuvy->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwvuz->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwvzu->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwuvz->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwuzv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwzvu->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvwux->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvwxu->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvuwx->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvuxw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvxuw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yzwa,Zuvy,Wzvuxw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuvy,Wzvxuw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyvux->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyvxu->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyuvx->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyuxv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyxvu->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuvwx->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuvxw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuwvx->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuwxv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuxvw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yzwa,Zyuz,Wuwx->KWZ', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zyuz,Wuxw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_caa__aaa:f_caa__aaa] -= sigma_caa.reshape(-1).copy()

        sigma_caa  = 1/6 * einsum('Kxa,Zyza,Wzxy->KWZ', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,Zyza,Wzyx->KWZ', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yWza,Zxzy->KWZ', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yWza,Zxyz->KWZ', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixa,Kyai,WyZx->KWZ', X_aaa, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixa,Kyai,WyxZ->KWZ', X_aaa, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixa,iKya,WyZx->KWZ', X_aaa, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixa,iKya,WyxZ->KWZ', X_aaa, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,Za,Wx->KWZ', X_abb, h_ae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,Wzxy->KWZ', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,Wzyx->KWZ', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yWza,Zxzy->KWZ', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yWza,Zxyz->KWZ', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,yzZa,Wyxz->KWZ', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ixa,iKZa,Wx->KWZ', X_abb, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixa,iKya,WyZx->KWZ', X_abb, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixa,iKya,WyxZ->KWZ', X_abb, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixa,Kyai,WyZx->KWZ', X_bab, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixa,Kyai,WyxZ->KWZ', X_bab, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,a,Zyza,Wyzx->KWZ', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,a,Zyza,Wyxz->KWZ', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,a,yzWa,Zxzy->KWZ', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,a,yzWa,Zxyz->KWZ', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Wy,zwya,Zxwz->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,Wy,zwya,Zxzw->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,Zy,yzwa,Wzwx->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zy,yzwa,Wzxw->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yz,Zwya,Wwzx->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,Zwya,Wwxz->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yz,Zywa,Wzwx->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,Zywa,Wzxw->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yz,wyWa,Zxwz->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,wyWa,Zxzw->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,ywWa,Zxwz->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yz,ywWa,Zxzw->KWZ', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,zwuv,Wyuvwx->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,zwuv,Wyuvxw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,zwuv,Wyuwvx->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,zwuv,Wyuwxv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,zwuv,Wyuxvw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,ywuv,Wwvuzx->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,ywuv,Wwvuxz->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,ywuv,Wwvzux->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,ywuv,Wwvzxu->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,ywuv,Wwvxuz->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,ya,Wzyw,Zxwz->KWZ', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,ya,Wzyw,Zxzw->KWZ', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,ya,Zzwy,Wwzx->KWZ', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,ya,Zzwy,Wwxz->KWZ', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,zwuv,Zxuwyv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yzWa,zwuv,Zxuywv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywuv,Zxuvwz->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywuv,Zxuvzw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywuv,Zxuwvz->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,ywuv,Zxuwzv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywuv,Zxuzvw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yzWa,ywzu,Zxwu->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,ywzu,Zxuw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuvzy->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuvyz->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuzvy->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuyvz->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuyzv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yzwa,Wuvw,Zxvuzy->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuvw,Zxvzuy->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuzv,Zxwvuy->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yzwa,Wuzv,Zxwuvy->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwvuz->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwvzu->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwuvz->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwuzv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwzvu->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvwux->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvwxu->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvuwx->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvuxw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvxuw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yzwa,Zuvy,Wzvuxw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuvy,Wzvxuw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyvux->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyvxu->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyuvx->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyuxv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyxvu->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuvwx->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuvxw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuwvx->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuwxv->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuxvw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yzwa,Zyuz,Wuwx->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zyuz,Wuxw->KWZ', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,a,Za,Wx->KWZ', X_abb, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,a,Zyza,Wyzx->KWZ', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,a,Zyza,Wyxz->KWZ', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,a,yZza,Wyxz->KWZ', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,a,yzWa,Zxzy->KWZ', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,a,yzWa,Zxyz->KWZ', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Wy,zwya,Zxwz->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Wy,zwya,Zxzw->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,Zy,zywa,Wzxw->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,Zy,ya,Wx->KWZ', X_abb, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zy,yzwa,Wzwx->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zy,yzwa,Wzxw->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,Zwya,Wwzx->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,Zwya,Wwxz->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,Zywa,Wzwx->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,Zywa,Wzxw->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,yz,wZya,Wwxz->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,wyWa,Zxwz->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,wyWa,Zxzw->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,yz,yZwa,Wzxw->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,ywWa,Zxwz->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,ywWa,Zxzw->KWZ', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,zwuv,Wyuwxv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,zwuv,Wyuxwv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,ywuv,Wwvzxu->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,ywuv,Wwvxzu->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,yZza,zwuv,Wyuxwv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,yZza,ywuv,Wwvxzu->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,ya,Wzyw,Zxwz->KWZ', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,ya,Wzyw,Zxzw->KWZ', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,ya,Zzwy,Wwzx->KWZ', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,ya,Zzwy,Wwxz->KWZ', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,ya,Zyzw,Wzxw->KWZ', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,zwuv,Zxuwyv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,zwuv,Zxuywv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,ywuv,Zxuwzv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywuv,Zxuzwv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,ywzu,Zxwu->KWZ', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywzu,Zxuw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuzyv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuyzv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuvw,Zxvuzy->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuvw,Zxvzuy->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuzv,Zxwvuy->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuzv,Zxwuvy->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwuzv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwzuv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvuwx->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvxwu->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuvy,Wzvuxw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvy,Wzvxuw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyuxv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyxuv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,yzwa,Zzuv,Wyuxwv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,yzwa,Zzuy,Wuxw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuwxv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuxwv->KWZ', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zyuz,Wuwx->KWZ', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuz,Wuxw->KWZ', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_caa__abb:f_caa__abb] -= sigma_caa.reshape(-1).copy()

        sigma_caa  = 1/2 * einsum('ixa,KZai,Wx->KWZ', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixa,Kyai,WyZx->KWZ', X_aaa, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixa,Kyai,WyxZ->KWZ', X_aaa, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,Za,Wx->KWZ', X_bab, h_ae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,Zyza,Wzxy->KWZ', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,Wzyx->KWZ', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yWza,Zxzy->KWZ', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yWza,Zxyz->KWZ', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,yzZa,Wyxz->KWZ', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ixa,KZai,Wx->KWZ', X_bab, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ixa,Kyai,WyZx->KWZ', X_bab, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ixa,Kyai,WyxZ->KWZ', X_bab, v_xaex, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ixa,iKZa,Wx->KWZ', X_bab, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ixa,iKya,WyZx->KWZ', X_bab, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ixa,iKya,WyxZ->KWZ', X_bab, v_xxae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,a,Za,Wx->KWZ', X_bab, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,a,Zyza,Wyzx->KWZ', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,a,Zyza,Wyxz->KWZ', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,a,yZza,Wyxz->KWZ', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,a,yzWa,Zxzy->KWZ', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,a,yzWa,Zxyz->KWZ', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,Wy,zwya,Zxwz->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Wy,zwya,Zxzw->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,Zy,zywa,Wzxw->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,Zy,ya,Wx->KWZ', X_bab, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zy,yzwa,Wzwx->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,Zy,yzwa,Wzxw->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,Zwya,Wwzx->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yz,Zwya,Wwxz->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yz,Zywa,Wzwx->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yz,Zywa,Wzxw->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,yz,wZya,Wwxz->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,wyWa,Zxwz->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yz,wyWa,Zxzw->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,yz,yZwa,Wzxw->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yz,ywWa,Zxwz->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yz,ywWa,Zxzw->KWZ', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,Zyza,zwuv,Wyuwxv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,Zyza,zwuv,Wyuxwv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,Zyza,ywuv,Wwvzxu->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,Zyza,ywuv,Wwvxzu->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kxa,yZza,zwuv,Wyuxwv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,yZza,ywuv,Wwvxzu->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,ya,Wzyw,Zxwz->KWZ', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,ya,Wzyw,Zxzw->KWZ', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,ya,Zzwy,Wwzx->KWZ', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,ya,Zzwy,Wwxz->KWZ', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,ya,Zyzw,Wzxw->KWZ', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,zwuv,Zxuvwy->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,zwuv,Zxuvyw->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,zwuv,Zxuwvy->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,zwuv,Zxuwyv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzWa,zwuv,Zxuyvw->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywuv,Zxuwzv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yzWa,ywuv,Zxuzwv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzWa,ywzu,Zxwu->KWZ', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yzWa,ywzu,Zxuw->KWZ', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yzwa,Wwuv,Zxuzyv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wwuv,Zxuyzv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuvw,Zxvuyz->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuvw,Zxvzuy->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuvw,Zxvzyu->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuvw,Zxvyuz->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuvw,Zxvyzu->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuzv,Zxwvuy->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuzv,Zxwvyu->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuzv,Zxwuyv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuzv,Zxwyvu->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Wuzv,Zxwyuv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Wuyv,Zxwuzv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yzwa,Wuyv,Zxwzuv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvz,Wyvuwx->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yzwa,Zuvz,Wyvxwu->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuvy,Wzvwux->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuvy,Wzvwxu->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuvy,Wzvuwx->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuvy,Wzvxwu->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zuvy,Wzvxuw->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kxa,yzwa,Zuwv,Wzyuxv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kxa,yzwa,Zuwv,Wzyxuv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,yzwa,Zzuv,Wyuxwv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kxa,yzwa,Zzuy,Wuxw->KWZ', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuv,Wzuwxv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yzwa,Zyuv,Wzuxwv->KWZ', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kxa,yzwa,Zyuz,Wuwx->KWZ', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kxa,yzwa,Zyuz,Wuxw->KWZ', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_caa__bab:f_caa__bab] -= sigma_caa.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CAA-CCE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCE_CAE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_xa = mr_adc.h1eff.xa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxxa = mr_adc.v2e.xxxa

        v_xaaa = mr_adc.v2e.xaaa

        ## Amplitudes
        t1_xa = mr_adc.t1.xa

        t1_xaaa = mr_adc.t1.xaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce  = einsum('KxB,Lx->KLB', X_aaa, h_xa, optimize = einsum_type)
        sigma_cce -= einsum('LxB,Kx->KLB', X_aaa, h_xa, optimize = einsum_type)
        sigma_cce -= einsum('KxB,L,Lx->KLB', X_aaa, e_cvs, t1_xa, optimize = einsum_type)
        sigma_cce += einsum('LxB,K,Kx->KLB', X_aaa, e_cvs, t1_xa, optimize = einsum_type)
        sigma_cce += einsum('KxB,xy,Ly->KLB', X_aaa, h_aa, t1_xa, optimize = einsum_type)
        sigma_cce -= einsum('LxB,xy,Ky->KLB', X_aaa, h_aa, t1_xa, optimize = einsum_type)
        sigma_cce += einsum('KxB,Lxyz,yz->KLB', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Lyzx,zy->KLB', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('LxB,Kxyz,yz->KLB', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Kyzx,zy->KLB', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('ixB,KiLy,xy->KLB', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('ixB,LiKy,xy->KLB', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KxB,L,Lyzx,yz->KLB', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('KxB,L,Lyxz,yz->KLB', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('LxB,K,Kyzx,yz->KLB', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('LxB,K,Kyxz,yz->KLB', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,xy,Lzwy,zw->KLB', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('KxB,xy,Lzyw,zw->KLB', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('KxB,yz,Lwxy,zw->KLB', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,yz,Lwyx,zw->KLB', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KxB,yz,Lywx,zw->KLB', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('KxB,yz,Lyxw,zw->KLB', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,xy,Kzwy,zw->KLB', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('LxB,xy,Kzyw,zw->KLB', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('LxB,yz,Kwxy,zw->KLB', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,yz,Kwyx,zw->KLB', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('LxB,yz,Kywx,zw->KLB', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('LxB,yz,Kyxw,zw->KLB', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Ly,xzwy,wz->KLB', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('KxB,Ly,xyzw,zw->KLB', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Lyzw,xwuv,yvzu->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Lyzw,xwuz,yu->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Lyzw,xuvw,yuvz->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Lyzw,xuvz,yuwv->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KxB,Lyzw,xuyv,zwuv->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('KxB,Lyzw,xzuv,yvwu->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('KxB,Lyzw,xzuw,yu->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Lyzx,zwuv,yuwv->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KxB,Lyzx,ywuv,zuwv->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('KxB,Lyxz,zwuv,yuwv->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= einsum('KxB,Lyxz,ywuv,zuwv->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Ky,xzwy,wz->KLB', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('LxB,Ky,xyzw,zw->KLB', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Kyzw,xwuv,yvzu->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Kyzw,xwuz,yu->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Kyzw,xuvw,yuvz->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Kyzw,xuvz,yuwv->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('LxB,Kyzw,xuyv,zwuv->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= einsum('LxB,Kyzw,xzuv,yvwu->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= einsum('LxB,Kyzw,xzuw,yu->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Kyzx,zwuv,yuwv->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('LxB,Kyzx,ywuv,zuwv->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= einsum('LxB,Kyxz,zwuv,yuwv->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('LxB,Kyxz,ywuv,zuwv->KLB', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        # sigma_cce += 1/2 * einsum('Kxa,LyaB,xy->KLB', X_aaa, v_xaee, rdm_ca, optimize = einsum_type)
        # sigma_cce -= 1/2 * einsum('Lxa,KyaB,xy->KLB', X_aaa, v_xaee, rdm_ca, optimize = einsum_type)
        # sigma_cce -= 1/2 * einsum('Kxa,LBay,xy->KLB', X_aaa, v_xeea, rdm_ca, optimize = einsum_type)
        # sigma_cce += 1/2 * einsum('Lxa,KBay,xy->KLB', X_aaa, v_xeea, rdm_ca, optimize = einsum_type)
        # sigma_cce -= 1/2 * einsum('Kxa,LBay,xy->KLB', X_abb, v_xeea, rdm_ca, optimize = einsum_type)
        # sigma_cce += 1/2 * einsum('Lxa,KBay,xy->KLB', X_abb, v_xeea, rdm_ca, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()


        sigma_cce  = einsum('KxB,Lx->KLB', X_abb, h_xa, optimize = einsum_type)
        sigma_cce -= einsum('LxB,Kx->KLB', X_bab, h_xa, optimize = einsum_type)
        sigma_cce -= einsum('KxB,L,Lx->KLB', X_abb, e_cvs, t1_xa, optimize = einsum_type)
        sigma_cce += einsum('KxB,xy,Ly->KLB', X_abb, h_aa, t1_xa, optimize = einsum_type)
        sigma_cce += einsum('KxB,Lxyz,yz->KLB', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Lyzx,zy->KLB', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('ixB,KiLy,xy->KLB', X_abb, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('LxB,K,Kx->KLB', X_bab, e_cvs, t1_xa, optimize = einsum_type)
        sigma_cce -= einsum('LxB,xy,Ky->KLB', X_bab, h_aa, t1_xa, optimize = einsum_type)
        sigma_cce -= einsum('LxB,Kxyz,yz->KLB', X_bab, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Kyzx,zy->KLB', X_bab, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('ixB,LiKy,xy->KLB', X_bab, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KxB,L,Lyzx,yz->KLB', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('KxB,L,Lyxz,yz->KLB', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,xy,Lzwy,zw->KLB', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('KxB,xy,Lzyw,zw->KLB', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('KxB,yz,Lwxy,zw->KLB', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,yz,Lwyx,zw->KLB', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KxB,yz,Lywx,zw->KLB', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('KxB,yz,Lyxw,zw->KLB', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Ly,xzwy,wz->KLB', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('KxB,Ly,xyzw,zw->KLB', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Lyzw,xwuv,yvzu->KLB', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Lyzw,xwuz,yu->KLB', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Lyzw,xuvw,yuvz->KLB', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Lyzw,xuvz,yuwv->KLB', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KxB,Lyzw,xuyv,zwuv->KLB', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('KxB,Lyzw,xzuv,yvwu->KLB', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('KxB,Lyzw,xzuw,yu->KLB', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KxB,Lyzx,zwuv,yuwv->KLB', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KxB,Lyzx,ywuv,zuwv->KLB', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('KxB,Lyxz,zwuv,yuwv->KLB', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= einsum('KxB,Lyxz,ywuv,zuwv->KLB', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('LxB,K,Kyzx,yz->KLB', X_bab, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('LxB,K,Kyxz,yz->KLB', X_bab, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,xy,Kzwy,zw->KLB', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('LxB,xy,Kzyw,zw->KLB', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('LxB,yz,Kwxy,zw->KLB', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,yz,Kwyx,zw->KLB', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('LxB,yz,Kywx,zw->KLB', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('LxB,yz,Kyxw,zw->KLB', X_bab, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Ky,xzwy,wz->KLB', X_bab, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('LxB,Ky,xyzw,zw->KLB', X_bab, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Kyzw,xwuv,yvzu->KLB', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Kyzw,xwuz,yu->KLB', X_bab, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Kyzw,xuvw,yuvz->KLB', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Kyzw,xuvz,yuwv->KLB', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('LxB,Kyzw,xuyv,zwuv->KLB', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= einsum('LxB,Kyzw,xzuv,yvwu->KLB', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= einsum('LxB,Kyzw,xzuw,yu->KLB', X_bab, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('LxB,Kyzx,zwuv,yuwv->KLB', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('LxB,Kyzx,ywuv,zuwv->KLB', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= einsum('LxB,Kyxz,zwuv,yuwv->KLB', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('LxB,Kyxz,ywuv,zuwv->KLB', X_bab, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        # sigma_cce += 1/2 * einsum('Kxa,LyaB,xy->KLB', X_abb, v_xaee, rdm_ca, optimize = einsum_type)
        # sigma_cce -= 1/2 * einsum('Lxa,KyaB,xy->KLB', X_bab, v_xaee, rdm_ca, optimize = einsum_type)
        # sigma_cce -= 1/2 * einsum('Kxa,LBay,xy->KLB', X_aaa, v_xeea, rdm_ca, optimize = einsum_type)
        # sigma_cce -= 1/2 * einsum('Kxa,LBay,xy->KLB', X_abb, v_xeea, rdm_ca, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CCE-CAE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCE_CAE__V_XAEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_xaee):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce  = 1/2 * einsum('Kxa,LyaB,xy->KLB', X_aaa, v_xaee, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxa,KyaB,xy->KLB', X_aaa, v_xaee, rdm_ca, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cce  = 1/2 * einsum('Kxa,LyaB,xy->KLB', X_abb, v_xaee, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lxa,KyaB,xy->KLB', X_bab, v_xaee, rdm_ca, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.xaee", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCE_CAE__V_XEEA(mr_adc, X_aaa, X_abb, sigma, v_xeea):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce =- 1/2 * einsum('Kxa,LBay,xy->KLB', X_aaa, v_xeea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxa,KBay,xy->KLB', X_aaa, v_xeea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxa,LBay,xy->KLB', X_abb, v_xeea, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lxa,KBay,xy->KLB', X_abb, v_xeea, rdm_ca, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cce =- 1/2 * einsum('Kxa,LBay,xy->KLB', X_aaa, v_xeea, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kxa,LBay,xy->KLB', X_abb, v_xeea, rdm_ca, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.xeea", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CAE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Two-electron integrals
        v_xxaa = mr_adc.v2e.xxaa
        v_xaax = mr_adc.v2e.xaax

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae  = 1/2 * einsum('ixB,Kiyz,Zzxy->KZB', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('ixB,Kyzi,Zyzx->KZB', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('ixB,Kyzi,Zyxz->KZB', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ixB,Kiyz,yz,Zx->KZB', X_aaa, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/4 * einsum('ixB,Kyzi,zy,Zx->KZB', X_aaa, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        # sigma_cae += 1/2 * einsum('ixa,iKBa,Zx->KZB', X_aaa, v_xxee, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('ixa,KBai,Zx->KZB', X_aaa, v_xeex, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('ixa,KBai,Zx->KZB', X_bab, v_xeex, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('Kxa,yzBa,Zyxz->KZB', X_aaa, v_aaee, rdm_ccaa, optimize = einsum_type)
        # sigma_cae += 1/2 * einsum('Kxa,yzBa,yz,Zx->KZB', X_aaa, v_aaee, rdm_ca, rdm_ca, optimize = einsum_type)
        # sigma_cae += 1/6 * einsum('Kxa,yBaz,Zzxy->KZB', X_aaa, v_aeea, rdm_ccaa, optimize = einsum_type)
        # sigma_cae -= 1/6 * einsum('Kxa,yBaz,Zzyx->KZB', X_aaa, v_aeea, rdm_ccaa, optimize = einsum_type)
        # sigma_cae -= 1/6 * einsum('Kxa,yBaz,Zzxy->KZB', X_abb, v_aeea, rdm_ccaa, optimize = einsum_type)
        # sigma_cae -= 1/3 * einsum('Kxa,yBaz,Zzyx->KZB', X_abb, v_aeea, rdm_ccaa, optimize = einsum_type)
        # sigma_cae -= 1/4 * einsum('Kxa,yBaz,zy,Zx->KZB', X_aaa, v_aeea, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()


        sigma_cae  = 1/2 * einsum('ixB,Kiyz,Zzxy->KZB', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('ixB,Kyzi,Zyzx->KZB', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('ixB,Kyzi,Zyxz->KZB', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('ixB,Kyzi,Zyzx->KZB', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('ixB,Kyzi,Zyxz->KZB', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ixB,Kiyz,yz,Zx->KZB', X_abb, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/4 * einsum('ixB,Kyzi,zy,Zx->KZB', X_abb, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        # sigma_cae += 1/2 * einsum('ixa,iKBa,Zx->KZB', X_abb, v_xxee, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('Kxa,yzBa,Zyxz->KZB', X_abb, v_aaee, rdm_ccaa, optimize = einsum_type)
        # sigma_cae += 1/2 * einsum('Kxa,yzBa,yz,Zx->KZB', X_abb, v_aaee, rdm_ca, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/6 * einsum('Kxa,yBaz,Zzxy->KZB', X_aaa, v_aeea, rdm_ccaa, optimize = einsum_type)
        # sigma_cae -= 1/3 * einsum('Kxa,yBaz,Zzyx->KZB', X_aaa, v_aeea, rdm_ccaa, optimize = einsum_type)
        # sigma_cae += 1/6 * einsum('Kxa,yBaz,Zzxy->KZB', X_abb, v_aeea, rdm_ccaa, optimize = einsum_type)
        # sigma_cae -= 1/6 * einsum('Kxa,yBaz,Zzyx->KZB', X_abb, v_aeea, rdm_ccaa, optimize = einsum_type)
        # sigma_cae -= 1/4 * einsum('Kxa,yBaz,zy,Zx->KZB', X_abb, v_aeea, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()


        sigma_cae  = 1/3 * einsum('ixB,Kyzi,Zyzx->KZB', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('ixB,Kyzi,Zyxz->KZB', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('ixB,Kiyz,Zzxy->KZB', X_bab, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('ixB,Kyzi,Zyzx->KZB', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('ixB,Kyzi,Zyxz->KZB', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ixB,Kiyz,yz,Zx->KZB', X_bab, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/4 * einsum('ixB,Kyzi,zy,Zx->KZB', X_bab, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        # sigma_cae += 1/2 * einsum('ixa,iKBa,Zx->KZB', X_bab, v_xxee, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('ixa,KBai,Zx->KZB', X_aaa, v_xeex, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('ixa,KBai,Zx->KZB', X_bab, v_xeex, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('Kxa,yzBa,Zyxz->KZB', X_bab, v_aaee, rdm_ccaa, optimize = einsum_type)
        # sigma_cae += 1/2 * einsum('Kxa,yzBa,yz,Zx->KZB', X_bab, v_aaee, rdm_ca, rdm_ca, optimize = einsum_type)
        # sigma_cae += 1/3 * einsum('Kxa,yBaz,Zzxy->KZB', X_bab, v_aeea, rdm_ccaa, optimize = einsum_type)
        # sigma_cae += 1/6 * einsum('Kxa,yBaz,Zzyx->KZB', X_bab, v_aeea, rdm_ccaa, optimize = einsum_type)
        # sigma_cae -= 1/4 * einsum('Kxa,yBaz,zy,Zx->KZB', X_bab, v_aeea, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CAE-CAE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CAE__V_XXEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_xxee):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae  = 1/2 * einsum('ixa,iKBa,Zx->KZB', X_aaa, v_xxee, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/2 * einsum('ixa,iKBa,Zx->KZB', X_abb, v_xxee, rdm_ca, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/2 * einsum('ixa,iKBa,Zx->KZB', X_bab, v_xxee, rdm_ca, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.xxee", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CAE__V_XEEX(mr_adc, X_aaa, X_bab, sigma, v_xeex):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae =- 1/2 * einsum('ixa,KBai,Zx->KZB', X_aaa, v_xeex, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ixa,KBai,Zx->KZB', X_bab, v_xeex, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae =- 1/2 * einsum('ixa,KBai,Zx->KZB', X_aaa, v_xeex, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ixa,KBai,Zx->KZB', X_bab, v_xeex, rdm_ca, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.xeex", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CAE__V_AAEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_aaee):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae =- 1/2 * einsum('Kxa,yzBa,Zyxz->KZB', X_aaa, v_aaee, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxa,yzBa,yz,Zx->KZB', X_aaa, v_aaee, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae =- 1/2 * einsum('Kxa,yzBa,Zyxz->KZB', X_abb, v_aaee, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxa,yzBa,yz,Zx->KZB', X_abb, v_aaee, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()

        sigma_cae =- 1/2 * einsum('Kxa,yzBa,Zyxz->KZB', X_bab, v_aaee, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kxa,yzBa,yz,Zx->KZB', X_bab, v_aaee, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.aaee", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CAE__V_AEEA(mr_adc, X_aaa, X_abb, X_bab, sigma, v_aeea):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae  = 1/6 * einsum('Kxa,yBaz,Zzxy->KZB', X_aaa, v_aeea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxa,yBaz,Zzyx->KZB', X_aaa, v_aeea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxa,yBaz,Zzxy->KZB', X_abb, v_aeea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxa,yBaz,Zzyx->KZB', X_abb, v_aeea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/4 * einsum('Kxa,yBaz,zy,Zx->KZB', X_aaa, v_aeea, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae =- 1/6 * einsum('Kxa,yBaz,Zzxy->KZB', X_aaa, v_aeea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kxa,yBaz,Zzyx->KZB', X_aaa, v_aeea, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxa,yBaz,Zzxy->KZB', X_abb, v_aeea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kxa,yBaz,Zzyx->KZB', X_abb, v_aeea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/4 * einsum('Kxa,yBaz,zy,Zx->KZB', X_abb, v_aeea, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/3 * einsum('Kxa,yBaz,Zzxy->KZB', X_bab, v_aeea, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kxa,yBaz,Zzyx->KZB', X_bab, v_aeea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/4 * einsum('Kxa,yBaz,zy,Zx->KZB', X_bab, v_aeea, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.aeea", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCA_CAE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Two-electron integrals
        v_xaea = mr_adc.v2e.xaea

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cca =- 1/2 * einsum('Kxa,LWay,xy->KLW', X_aaa, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxa,LyaW,xy->KLW', X_aaa, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxa,Lyaz,Wxzy->KLW', X_aaa, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxa,Lyaz,Wxyz->KLW', X_aaa, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxa,KWay,xy->KLW', X_aaa, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxa,KyaW,xy->KLW', X_aaa, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxa,Kyaz,Wxzy->KLW', X_aaa, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxa,Kyaz,Wxyz->KLW', X_aaa, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxa,LWay,xy->KLW', X_abb, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxa,Lyaz,Wxzy->KLW', X_abb, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxa,Lyaz,Wxyz->KLW', X_abb, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lxa,KWay,xy->KLW', X_abb, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lxa,Kyaz,Wxzy->KLW', X_abb, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lxa,Kyaz,Wxyz->KLW', X_abb, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma[s_cca__aaa:f_cca__aaa] += sigma_cca[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cca =- 1/2 * einsum('Kxa,LWay,xy->KLW', X_aaa, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxa,Lyaz,Wxzy->KLW', X_aaa, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Kxa,Lyaz,Wxyz->KLW', X_aaa, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kxa,LWay,xy->KLW', X_abb, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kxa,LyaW,xy->KLW', X_abb, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kxa,Lyaz,Wxzy->KLW', X_abb, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kxa,Lyaz,Wxyz->KLW', X_abb, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lxa,KyaW,xy->KLW', X_bab, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lxa,Kyaz,Wxzy->KLW', X_bab, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lxa,Kyaz,Wxyz->KLW', X_bab, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma[s_cca__abb:f_cca__abb] += sigma_cca.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CCA-CAE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CAE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_val = mr_adc.mo_energy.v

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_va = mr_adc.h1eff.va

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxva = mr_adc.v2e.xxva
        v_vxxa = mr_adc.v2e.vxxa

        v_vaaa = mr_adc.v2e.vaaa

        ## Amplitudes
        t1_va = mr_adc.t1.va
        t1_vaaa = mr_adc.t1.vaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        sigma_cve  = einsum('KxB,Lx->KLB', X_aaa, h_va, optimize = einsum_type)
        sigma_cve -= einsum('KxB,L,Lx->KLB', X_aaa, e_val, t1_va, optimize = einsum_type)
        sigma_cve += einsum('KxB,xy,Ly->KLB', X_aaa, h_aa, t1_va, optimize = einsum_type)
        sigma_cve += einsum('KxB,Lxyz,yz->KLB', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzx,zy->KLB', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('ixB,KiLy,xy->KLB', X_aaa, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('ixB,LiKy,xy->KLB', X_aaa, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KxB,L,Lyzx,yz->KLB', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KxB,L,Lyxz,yz->KLB', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,xy,Lzwy,zw->KLB', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KxB,xy,Lzyw,zw->KLB', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KxB,yz,Lwxy,zw->KLB', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,yz,Lwyx,zw->KLB', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KxB,yz,Lywx,zw->KLB', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KxB,yz,Lyxw,zw->KLB', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Ly,xzwy,wz->KLB', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KxB,Ly,xyzw,zw->KLB', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzw,xwuv,yvzu->KLB', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzw,xwuz,yu->KLB', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzw,xuvw,yuvz->KLB', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzw,xuvz,yuwv->KLB', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KxB,Lyzw,xuyv,zwuv->KLB', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KxB,Lyzw,xzuv,yvwu->KLB', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KxB,Lyzw,xzuw,yu->KLB', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzx,zwuv,yuwv->KLB', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KxB,Lyzx,ywuv,zuwv->KLB', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KxB,Lyxz,zwuv,yuwv->KLB', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= einsum('KxB,Lyxz,ywuv,zuwv->KLB', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        # sigma_cve += 1/2 * einsum('Kxa,LyaB,xy->KLB', X_aaa, v_vaee, rdm_ca, optimize = einsum_type)
        # sigma_cve -= 1/2 * einsum('Kxa,LBay,xy->KLB', X_aaa, v_veea, rdm_ca, optimize = einsum_type)
        # sigma_cve -= 1/2 * einsum('Kxa,LBay,xy->KLB', X_abb, v_veea, rdm_ca, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve  = einsum('KxB,Lx->KLB', X_abb, h_va, optimize = einsum_type)
        sigma_cve -= einsum('KxB,L,Lx->KLB', X_abb, e_val, t1_va, optimize = einsum_type)
        sigma_cve += einsum('KxB,xy,Ly->KLB', X_abb, h_aa, t1_va, optimize = einsum_type)
        sigma_cve += einsum('KxB,Lxyz,yz->KLB', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzx,zy->KLB', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('ixB,KiLy,xy->KLB', X_abb, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('ixB,LiKy,xy->KLB', X_bab, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KxB,L,Lyzx,yz->KLB', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KxB,L,Lyxz,yz->KLB', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,xy,Lzwy,zw->KLB', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KxB,xy,Lzyw,zw->KLB', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KxB,yz,Lwxy,zw->KLB', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,yz,Lwyx,zw->KLB', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KxB,yz,Lywx,zw->KLB', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KxB,yz,Lyxw,zw->KLB', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Ly,xzwy,wz->KLB', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KxB,Ly,xyzw,zw->KLB', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzw,xwuv,yvzu->KLB', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzw,xwuz,yu->KLB', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzw,xuvw,yuvz->KLB', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzw,xuvz,yuwv->KLB', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KxB,Lyzw,xuyv,zwuv->KLB', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KxB,Lyzw,xzuv,yvwu->KLB', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KxB,Lyzw,xzuw,yu->KLB', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzx,zwuv,yuwv->KLB', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KxB,Lyzx,ywuv,zuwv->KLB', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KxB,Lyxz,zwuv,yuwv->KLB', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= einsum('KxB,Lyxz,ywuv,zuwv->KLB', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        # sigma_cve += 1/2 * einsum('Kxa,LyaB,xy->KLB', X_abb, v_vaee, rdm_ca, optimize = einsum_type)
        # sigma_cve -= 1/2 * einsum('Kxa,LBay,xy->KLB', X_aaa, v_veea, rdm_ca, optimize = einsum_type)
        # sigma_cve -= 1/2 * einsum('Kxa,LBay,xy->KLB', X_abb, v_veea, rdm_ca, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        sigma_cve  = einsum('KxB,Lx->KLB', X_bab, h_va, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('ixB,LiKy,xy->KLB', X_abb, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KxB,L,Lx->KLB', X_bab, e_val, t1_va, optimize = einsum_type)
        sigma_cve += einsum('KxB,xy,Ly->KLB', X_bab, h_aa, t1_va, optimize = einsum_type)
        sigma_cve += einsum('KxB,Lxyz,yz->KLB', X_bab, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzx,zy->KLB', X_bab, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('ixB,KiLy,xy->KLB', X_bab, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KxB,L,Lyzx,yz->KLB', X_bab, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KxB,L,Lyxz,yz->KLB', X_bab, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,xy,Lzwy,zw->KLB', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KxB,xy,Lzyw,zw->KLB', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KxB,yz,Lwxy,zw->KLB', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,yz,Lwyx,zw->KLB', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KxB,yz,Lywx,zw->KLB', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KxB,yz,Lyxw,zw->KLB', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Ly,xzwy,wz->KLB', X_bab, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KxB,Ly,xyzw,zw->KLB', X_bab, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzw,xwuv,yvzu->KLB', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzw,xwuz,yu->KLB', X_bab, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzw,xuvw,yuvz->KLB', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzw,xuvz,yuwv->KLB', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KxB,Lyzw,xuyv,zwuv->KLB', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KxB,Lyzw,xzuv,yvwu->KLB', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KxB,Lyzw,xzuw,yu->KLB', X_bab, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KxB,Lyzx,zwuv,yuwv->KLB', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KxB,Lyzx,ywuv,zuwv->KLB', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KxB,Lyxz,zwuv,yuwv->KLB', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= einsum('KxB,Lyxz,ywuv,zuwv->KLB', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        # sigma_cve += 1/2 * einsum('Kxa,LyaB,xy->KLB', X_bab, v_vaee, rdm_ca, optimize = einsum_type)
        sigma[s_cve__bab:f_cve__bab] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CVE-CAE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CAE__V_VAEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_vaee):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        sigma_cve  = 1/2 * einsum('Kxa,LyaB,xy->KLB', X_aaa, v_vaee, rdm_ca, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve  = 1/2 * einsum('Kxa,LyaB,xy->KLB', X_abb, v_vaee, rdm_ca, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        sigma_cve  = 1/2 * einsum('Kxa,LyaB,xy->KLB', X_bab, v_vaee, rdm_ca, optimize = einsum_type)
        sigma[s_cve__bab:f_cve__bab] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.vaee", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CAE__V_VEEA(mr_adc, X_aaa, X_abb, sigma, v_veea):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb

        sigma_cve =- 1/2 * einsum('Kxa,LBay,xy->KLB', X_aaa, v_veea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxa,LBay,xy->KLB', X_abb, v_veea, rdm_ca, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve =- 1/2 * einsum('Kxa,LBay,xy->KLB', X_aaa, v_veea, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kxa,LBay,xy->KLB', X_abb, v_veea, rdm_ca, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.veea", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVA_CAE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Two-electron integrals
        v_vaea = mr_adc.v2e.vaea

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        sigma_cva =- 1/2 * einsum('Kxa,LWay,xy->KLW', X_aaa, v_vaea, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxa,LyaW,xy->KLW', X_aaa, v_vaea, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxa,Lyaz,Wxzy->KLW', X_aaa, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxa,Lyaz,Wxyz->KLW', X_aaa, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxa,LWay,xy->KLW', X_abb, v_vaea, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxa,Lyaz,Wxzy->KLW', X_abb, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxa,Lyaz,Wxyz->KLW', X_abb, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma[s_cva__aaa:f_cva__aaa] += sigma_cva.reshape(-1).copy()

        sigma_cva =- 1/2 * einsum('Kxa,LWay,xy->KLW', X_aaa, v_vaea, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxa,Lyaz,Wxzy->KLW', X_aaa, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kxa,Lyaz,Wxyz->KLW', X_aaa, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kxa,LWay,xy->KLW', X_abb, v_vaea, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kxa,LyaW,xy->KLW', X_abb, v_vaea, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxa,Lyaz,Wxzy->KLW', X_abb, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kxa,Lyaz,Wxyz->KLW', X_abb, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma[s_cva__abb:f_cva__abb] += sigma_cva.reshape(-1).copy()

        sigma_cva  = 1/2 * einsum('Kxa,LyaW,xy->KLW', X_bab, v_vaea, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kxa,Lyaz,Wxzy->KLW', X_bab, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kxa,Lyaz,Wxyz->KLW', X_bab, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma[s_cva__bab:f_cva__bab] += sigma_cva.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CVA-CAE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAA_CCA(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_cvs = mr_adc.mo_energy.x

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        h_xa = mr_adc.h1eff.xa

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxxa = mr_adc.v2e.xxxa

        v_xaaa = mr_adc.v2e.xaaa

        ## Amplitudes
        t1_xa = mr_adc.t1.xa

        t1_xaaa = mr_adc.t1.xaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        # Note: implemented as a transpose to avoid 4-RDM
        sigma_caa =- einsum('KiZ,iW->KWZ', X_aaa, h_xa, optimize = einsum_type)
        sigma_caa += einsum('KiZ,i,iW->KWZ', X_aaa, e_cvs, t1_xa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iW,Zx->KWZ', X_aaa, h_xa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,Wx,ix->KWZ', X_aaa, h_aa, t1_xa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iWyz,Zzxy->KWZ', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,Zyzx->KWZ', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,Zyxz->KWZ', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,iWxy,yx->KWZ', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyW,xy->KWZ', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyZz,Wxzy->KWZ', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyZz,Wxyz->KWZ', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iWyx,Zy->KWZ', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyZx,Wy->KWZ', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,ixZy,Wy->KWZ', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,ixyW,Zy->KWZ', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ijx,jKiy,WxZy->KWZ', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ijx,jKiy,WxyZ->KWZ', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ijx,iKjy,WxZy->KWZ', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ijx,iKjy,WxyZ->KWZ', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/4 * einsum('ijZ,iKjx,Wx->KWZ', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/4 * einsum('ijZ,jKix,Wx->KWZ', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/4 * einsum('ijx,iKjx,WZ->KWZ', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/4 * einsum('ijx,jKix,WZ->KWZ', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzW,Zyzx->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,Zyxz->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyZz,Wxzy->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyZz,Wxyz->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,ixZy,Wy->KWZ', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,ixyW,Zy->KWZ', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ijx,iKjy,WxZy->KWZ', X_abb, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ijx,iKjy,WxyZ->KWZ', X_abb, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ijx,iKjx,WZ->KWZ', X_abb, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iW,Zx->KWZ', X_aaa, e_cvs, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iZyz,Wxzy->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iZyz,Wxyz->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('KiZ,i,ixWy,yx->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,i,ixyW,yx->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iyWz,Zzxy->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iyzW,Zzxy->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iyzW,Zzyx->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iZyx,Wy->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iZxy,Wy->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iyWx,Zy->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iyxW,Zy->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Wy,izwy,Zwzx->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,Wy,izwy,Zwxz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,izyw,Zwxz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iwWy,Zzxw->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iwyW,Zzwx->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iwyW,Zzxw->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,Wx,iyzx,yz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,Wx,iyxz,yz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,xy,izWx,yz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,xy,izxW,yz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('KiZ,xy,ixWz,yz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,xy,ixzW,yz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,iy,Zx->KWZ', X_aaa, h_aa, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Zy,iyzw,Wxwz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,Zy,iyzw,Wxzw->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iZwy,Wxwz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZwy,Wxzw->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZyw,Wxwz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iZyw,Wxzw->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iyWw,Zwxz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iywW,Zwzx->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iywW,Zwxz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,izyx,Zz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Wy,izxy,Zz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Zy,iyzx,Wz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Zy,iyxz,Wz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iZyx,Wz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iZxy,Wz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iyWx,Zz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iyxW,Zz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,iZzy,Wz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,iZyz,Wz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,izWy,Zz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,izyW,Zz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwuv,Wxuwyv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuywv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,ywuv,Wxuwzv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,ywuv,Wxuzwv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Wzwy,Zwzx->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Wzwy,Zwxz->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Wyzw,Zzxw->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,zwuv,Zwvxyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvxyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,zwuv,Zwvyxu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuxyv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyxv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuz,Zuxy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuz,Zuyx->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvw,Zzvuxy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvw,Zzvxuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuyx->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvxyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuxv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwxuv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzuv,Zwuxyv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzuw,Zuxy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ix,Wyzx,zy->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ix,Wxyz,yz->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixWy,yzwu,xwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('KiZ,ixWy,xzwu,ywzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyW,yzwu,xwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,ixyW,xzwu,ywzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wzwu,xuyw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wzwy,xw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wwuz,xwuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wwuy,xwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,ixyz,Wwxu,yzwu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixyz,Wywu,xuzw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixyz,Wywz,xw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwyu,Wxwu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwyu,Wxuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Zzyw,Wxwz->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Zzyw,Wxzw->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWz,ywuv,Zzuxwv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,ywuv,Zzuwxv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuxwv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuvy,Wxvuzw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuvy,Wxvzuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuzv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyzuv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuzv,Wxyvuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuzv,Wxyuvw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwzv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuzwv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyz,xzwu,Wuyw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyz,xzwy,Ww->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuz,Wwuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,xwuz,Wwyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,xwuy,Wwuz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuy,Wwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywu,Wuzw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywz,Ww->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyx,yzwu,Wwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZxy,yzwu,Wwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Wzxy,Zz->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Wyxz,Zz->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Zzyx,Wz->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Zxyz,Wz->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,xzwu,Zwyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,xwuz,Zuwy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWz,xwyu,Zzwu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWx,yzwu,Zwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzW,xzwu,Zwyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwuz,Zuwy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwuz,Zuyw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwyu,Zzuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwyu,Zzwu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wuxz,Zwuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuxw,Zzuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuxw,Zzyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzxu,Zwuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzxw,Zy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwxu,Zzuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwxu,Zzyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wwxz,Zy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zuzx,Wyuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwx,Wyuz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwx,Wyzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyux,Wuzw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyux,Wuwz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zxuy,Wuzw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Zxzu,Wyuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Zxwu,Wyzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzx,Wzwu,Zwyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwuz,Zuwy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwuz,Zuyw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwyu,Zzuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwyu,Zzwu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwuy,Wuzw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwuy,Wuwz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwzu,Wyuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwzu,Wywu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzx,Zywu,Wwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxW,yzwu,Zwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wzwu,Zwyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wwuz,Zuwy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Wwyu,Zzwu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zwuy,Wuwz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Zwzu,Wywu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zywu,Wwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,i,iZyz,Wxzy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iZyz,Wxyz->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iyzW,Zzxy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,i,iyzW,Zzyx->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iZxy,Wy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iyxW,Zy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,Wy,izwy,Zwzx->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Wy,izwy,Zwxz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,yz,iwyW,Zzwx->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iwyW,Zzxw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,Zy,iyzw,Wxwz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Zy,iyzw,Wxzw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZwy,Wxwz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iZwy,Wxzw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iZyw,Wxwz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZyw,Wxzw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iywW,Zwzx->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iywW,Zwxz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Wy,izxy,Zz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Zy,iyxz,Wz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iZxy,Wz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iyxW,Zz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,iZyz,Wz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,izyW,Zz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuvwy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuvyw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuwvy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwuv,Wxuwyv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuyvw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,ywuv,Wxuwzv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,ywuv,Wxuzwv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iy,Wzwy,Zwzx->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Wzwy,Zwxz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvuxy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvuyx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvxuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvyux->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,zwuv,Zwvyxu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuvxy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuvyx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuxvy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyvx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyxv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuz,Zuxy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wwuz,Zuyx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wuvw,Zzvuxy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvw,Zzvxuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuxy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuyx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvxuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvyux->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvyxu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwvux->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwvxu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuvx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuxv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwxvu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,zwyu,Wxwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwyu,Wxuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Zzyw,Wxwz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iy,Zzyw,Wxzw->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuvwx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuvxw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuwvx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,ywuv,Zzuwxv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuxvw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Zuvy,Wxvuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuvy,Wxvzuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyvuz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyvzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuvz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuzv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyzvu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuzv,Wxyvuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Zuzv,Wxyuvw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuvwz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuvzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwvz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwzv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuzvw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,xwuz,Wwuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuz,Wwyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuy,Wwuz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,xwuy,Wwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywu,Wuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywz,Ww->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZxy,yzwu,Wwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Wzxy,Zz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Zzyx,Wz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzW,xzwu,Zwyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwuz,Zuwy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzW,xwuz,Zuyw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzW,xwyu,Zzuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwyu,Zzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wuxz,Zwuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wuxw,Zzuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuxw,Zzyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwxu,Zzuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wwxu,Zzyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wwxz,Zy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zuzx,Wyuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Zuwx,Wyuz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwx,Wyzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyux,Wuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Zyux,Wuwz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzx,Wwuz,Zuwy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwuz,Zuyw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwyu,Zzuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzx,Wwyu,Zzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwuy,Wuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzx,Zwuy,Wuwz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwzu,Wyuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzx,Zwzu,Wywu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxW,yzwu,Zwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wzwu,Zwyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wwuz,Zuwy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Wwyu,Zzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zwuy,Wuwz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Zwzu,Wywu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zywu,Wwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_caa__aaa:f_caa__aaa] -= sigma_caa.reshape(-1).copy()

        sigma_caa =- einsum('KiZ,iW->KWZ', X_abb, h_xa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzW,Zyzx->KWZ', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,Zyxz->KWZ', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyZz,Wxzy->KWZ', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyZz,Wxyz->KWZ', X_aaa, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,ixZy,Wy->KWZ', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,ixyW,Zy->KWZ', X_aaa, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ijx,jKiy,WxZy->KWZ', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/12 * einsum('ijx,jKiy,WxyZ->KWZ', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ijx,iKjy,WxZy->KWZ', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/12 * einsum('ijx,iKjy,WxyZ->KWZ', X_aaa, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/4 * einsum('ijx,iKjx,WZ->KWZ', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/4 * einsum('ijx,jKix,WZ->KWZ', X_aaa, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('KiZ,i,iW->KWZ', X_abb, e_cvs, t1_xa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iW,Zx->KWZ', X_abb, h_xa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,Wx,ix->KWZ', X_abb, h_aa, t1_xa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iWyz,Zzxy->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,Zyzx->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,Zyxz->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,iWxy,yx->KWZ', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyW,xy->KWZ', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyZz,Wxzy->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyZz,Wxyz->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iWyx,Zy->KWZ', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyZx,Wy->KWZ', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,ixZy,Wy->KWZ', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,ixyW,Zy->KWZ', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ijx,iKjy,WxZy->KWZ', X_abb, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ijx,iKjy,WxyZ->KWZ', X_abb, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ijZ,iKjx,Wx->KWZ', X_abb, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ijx,iKjx,WZ->KWZ', X_abb, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,i,iZyz,Wxzy->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iZyz,Wxyz->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iyzW,Zzxy->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,i,iyzW,Zzyx->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iZxy,Wy->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iyxW,Zy->KWZ', X_aaa, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,Wy,izwy,Zwzx->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Wy,izwy,Zwxz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,yz,iwyW,Zzwx->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iwyW,Zzxw->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,Zy,iyzw,Wxwz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Zy,iyzw,Wxzw->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZwy,Wxwz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iZwy,Wxzw->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iZyw,Wxwz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZyw,Wxzw->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iywW,Zwzx->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iywW,Zwxz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Wy,izxy,Zz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Zy,iyxz,Wz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iZxy,Wz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iyxW,Zz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,iZyz,Wz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,izyW,Zz->KWZ', X_aaa, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuvwy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuvyw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuwvy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwuv,Wxuwyv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuyvw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,ywuv,Wxuwzv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,ywuv,Wxuzwv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iy,Wzwy,Zwzx->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Wzwy,Zwxz->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvuxy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvuyx->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvxuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvyux->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,zwuv,Zwvyxu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuvxy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuvyx->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuxvy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyvx->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyxv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuz,Zuxy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wwuz,Zuyx->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wuvw,Zzvuxy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvw,Zzvxuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuxy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuyx->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvxuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvyux->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvyxu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwvux->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwvxu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuvx->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuxv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwxvu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,zwyu,Wxwu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwyu,Wxuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Zzyw,Wxwz->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iy,Zzyw,Wxzw->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuvwx->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuvxw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuwvx->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,ywuv,Zzuwxv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuxvw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Zuvy,Wxvuzw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuvy,Wxvzuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyvuz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyvzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuvz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuzv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyzvu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuzv,Wxyvuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Zuzv,Wxyuvw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuvwz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuvzw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwvz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwzv->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuzvw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,xwuz,Wwuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuz,Wwyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuy,Wwuz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,xwuy,Wwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywu,Wuzw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywz,Ww->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZxy,yzwu,Wwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Wzxy,Zz->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Zzyx,Wz->KWZ', X_aaa, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzW,xzwu,Zwyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwuz,Zuwy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzW,xwuz,Zuyw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzW,xwyu,Zzuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwyu,Zzwu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wuxz,Zwuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wuxw,Zzuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuxw,Zzyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwxu,Zzuy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wwxu,Zzyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wwxz,Zy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zuzx,Wyuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Zuwx,Wyuz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwx,Wyzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyux,Wuzw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Zyux,Wuwz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzx,Wwuz,Zuwy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwuz,Zuyw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwyu,Zzuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzx,Wwyu,Zzwu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwuy,Wuzw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzx,Zwuy,Wuwz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwzu,Wyuw->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzx,Zwzu,Wywu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxW,yzwu,Zwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wzwu,Zwyu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wwuz,Zuwy->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Wwyu,Zzwu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zwuy,Wuwz->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Zwzu,Wywu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zywu,Wwzu->KWZ', X_aaa, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iW,Zx->KWZ', X_abb, e_cvs, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iZyz,Wxzy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iZyz,Wxyz->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('KiZ,i,ixWy,yx->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,i,ixyW,yx->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iyWz,Zzxy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iyzW,Zzxy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iyzW,Zzyx->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iZyx,Wy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iZxy,Wy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iyWx,Zy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iyxW,Zy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Wy,izwy,Zwzx->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,Wy,izwy,Zwxz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,izyw,Zwxz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iwWy,Zzxw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iwyW,Zzwx->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iwyW,Zzxw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,Wx,iyzx,yz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,Wx,iyxz,yz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,xy,izWx,yz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,xy,izxW,yz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('KiZ,xy,ixWz,yz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,xy,ixzW,yz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,iy,Zx->KWZ', X_abb, h_aa, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Zy,iyzw,Wxwz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,Zy,iyzw,Wxzw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iZwy,Wxwz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZwy,Wxzw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZyw,Wxwz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iZyw,Wxzw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iyWw,Zwxz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iywW,Zwzx->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iywW,Zwxz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,izyx,Zz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Wy,izxy,Zz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Zy,iyzx,Wz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Zy,iyxz,Wz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iZyx,Wz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iZxy,Wz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iyWx,Zz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iyxW,Zz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,iZzy,Wz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,iZyz,Wz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,izWy,Zz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,izyW,Zz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwuv,Wxuwyv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuywv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,ywuv,Wxuwzv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,ywuv,Wxuzwv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Wzwy,Zwzx->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Wzwy,Zwxz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Wyzw,Zzxw->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,zwuv,Zwvxyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvxyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,zwuv,Zwvyxu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuxyv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyxv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuz,Zuxy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuz,Zuyx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvw,Zzvuxy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvw,Zzvxuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuyx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvxyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuxv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwxuv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzuv,Zwuxyv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzuw,Zuxy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ix,Wyzx,zy->KWZ', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ix,Wxyz,yz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixWy,yzwu,xwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('KiZ,ixWy,xzwu,ywzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyW,yzwu,xwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,ixyW,xzwu,ywzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wzwu,xuyw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wzwy,xw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wwuz,xwuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wwuy,xwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,ixyz,Wwxu,yzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixyz,Wywu,xuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixyz,Wywz,xw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwyu,Wxwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwyu,Wxuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Zzyw,Wxwz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Zzyw,Wxzw->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWz,ywuv,Zzuxwv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,ywuv,Zzuwxv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuxwv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuvy,Wxvuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuvy,Wxvzuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuzv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyzuv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuzv,Wxyvuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuzv,Wxyuvw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwzv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuzwv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyz,xzwu,Wuyw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyz,xzwy,Ww->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuz,Wwuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,xwuz,Wwyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,xwuy,Wwuz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuy,Wwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywu,Wuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywz,Ww->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyx,yzwu,Wwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZxy,yzwu,Wwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Wzxy,Zz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Wyxz,Zz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Zzyx,Wz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Zxyz,Wz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,xzwu,Zwyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,xwuz,Zuwy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWz,xwyu,Zzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWx,yzwu,Zwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzW,xzwu,Zwyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwuz,Zuwy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwuz,Zuyw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwyu,Zzuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwyu,Zzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wuxz,Zwuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuxw,Zzuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuxw,Zzyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzxu,Zwuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzxw,Zy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwxu,Zzuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwxu,Zzyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wwxz,Zy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zuzx,Wyuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwx,Wyuz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwx,Wyzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyux,Wuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyux,Wuwz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zxuy,Wuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Zxzu,Wyuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Zxwu,Wyzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzx,Wzwu,Zwyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwuz,Zuwy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwuz,Zuyw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwyu,Zzuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwyu,Zzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwuy,Wuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwuy,Wuwz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwzu,Wyuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwzu,Wywu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzx,Zywu,Wwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxW,yzwu,Zwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wzwu,Zwyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wwuz,Zuwy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Wwyu,Zzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zwuy,Wuwz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Zwzu,Wywu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zywu,Wwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_caa__abb:f_caa__abb] -= sigma_caa.reshape(-1).copy()

        sigma_caa  = einsum('iKZ,iW->KWZ', X_abb, h_xa, optimize = einsum_type)
        sigma_caa -= einsum('iKZ,i,iW->KWZ', X_abb, e_cvs, t1_xa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iW,Zx->KWZ', X_abb, h_xa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('iKZ,Wx,ix->KWZ', X_abb, h_aa, t1_xa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyZz,Wxzy->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iyZz,Wxyz->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ijx,jKiy,WxZy->KWZ', X_abb, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ijx,jKiy,WxyZ->KWZ', X_abb, v_xxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('iKZ,iWxy,yx->KWZ', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKZ,ixyW,xy->KWZ', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iWyz,Zzxy->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzW,Zyzx->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iyzW,Zyxz->KWZ', X_abb, v_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iWyx,Zy->KWZ', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,iyZx,Wy->KWZ', X_abb, v_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ijZ,jKix,Wx->KWZ', X_abb, v_xxxa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,i,iyWz,Zzxy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,i,iyzW,Zzxy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,i,iyzW,Zzyx->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('iKZ,i,ixWy,yx->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKZ,i,ixyW,yx->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,i,iW,Zx->KWZ', X_abb, e_cvs, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,i,iZyz,Wxzy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,i,iZyz,Wxyz->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,i,iZyx,Wy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,i,iyWx,Zy->KWZ', X_abb, e_cvs, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,Wy,iy,Zx->KWZ', X_abb, h_aa, t1_xa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,Zy,iyzw,Wxwz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,Zy,iyzw,Wxzw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,yz,iZwy,Wxwz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,yz,iZwy,Wxzw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,yz,iZyw,Wxwz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,yz,iZyw,Wxzw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,yz,iyWw,Zwxz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,yz,iywW,Zwzx->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,yz,iywW,Zwxz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKZ,Wx,iyzx,yz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('iKZ,Wx,iyxz,yz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('iKZ,xy,izWx,yz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKZ,xy,izxW,yz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('iKZ,xy,ixWz,yz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKZ,xy,ixzW,yz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,Wy,izwy,Zwzx->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,Wy,izwy,Zwxz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,Wy,izyw,Zwxz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,yz,iwWy,Zzxw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,yz,iwyW,Zzwx->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,yz,iwyW,Zzxw->KWZ', X_abb, h_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,Wy,izyx,Zz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,Zy,iyzx,Wz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,yz,iZyx,Wz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,yz,iyWx,Zz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,xy,iZzy,Wz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,xy,izWy,Zz->KWZ', X_abb, h_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iZyz,zwyu,Wxwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iZyz,zwyu,Wxuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iy,Zzyw,Wxwz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iy,Zzyw,Wxzw->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,iyWz,ywuv,Zzuxwv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzW,ywuv,Zzuwxv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iyzW,ywuv,Zzuxwv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzw,Zuvy,Wxvwuz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzw,Zuvy,Wxvwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzw,Zuvy,Wxvuwz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzw,Zuvy,Wxvzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Zuvy,Wxvzuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzw,Zuwv,Wxyuzv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iyzw,Zuwv,Wxyzuv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Zuzv,Wxyvwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzw,Zuzv,Wxyvuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Zuzv,Wxywvu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Zuzv,Wxywuv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Zuzv,Wxyuwv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Zyuv,Wxuwzv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iyzw,Zyuv,Wxuzwv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKZ,ix,Wyzx,zy->KWZ', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('iKZ,ix,Wxyz,yz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('iKZ,ixWy,yzwu,xwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('iKZ,ixWy,xzwu,ywzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKZ,ixyW,yzwu,xwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKZ,ixyW,xzwu,ywzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKZ,ixyz,Wzwu,xuyw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKZ,ixyz,Wzwy,xw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKZ,ixyz,Wwuz,xwuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKZ,ixyz,Wwuy,xwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKZ,ixyz,Wwxu,yzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('iKZ,ixyz,Wywu,xuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('iKZ,ixyz,Wywz,xw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iZyz,zwuv,Wxuwyv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iZyz,zwuv,Wxuywv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iZyz,ywuv,Wxuvwz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iZyz,ywuv,Wxuvzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iZyz,ywuv,Wxuwvz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iZyz,ywuv,Wxuwzv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iZyz,ywuv,Wxuzvw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iy,Wzwy,Zwzx->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iy,Wzwy,Zwxz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iy,Wyzw,Zzxw->KWZ', X_abb, t1_xa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iyWz,zwuv,Zwvxyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iyzW,zwuv,Zwvxyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzW,zwuv,Zwvyxu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iyzw,Wwuv,Zzuxyv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Wwuv,Zzuyxv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iyzw,Wwuz,Zuxy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Wwuz,Zuyx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzw,Wuvw,Zzvuyx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Wuvw,Zzvxuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzw,Wuvw,Zzvxyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzw,Wuvw,Zzvyux->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzw,Wuvw,Zzvyxu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Wuvz,Zwvuyx->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iyzw,Wuvz,Zwvxyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzw,Wuyv,Zzwuxv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iyzw,Wuyv,Zzwxuv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iyzw,Wzuv,Zwuxyv->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iyzw,Wzuw,Zuxy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,iZyz,xzwu,Wuyw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,iZyz,xzwy,Ww->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iZyz,xwuz,Wwuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iZyz,xwuz,Wwyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iZyz,xwuy,Wwuz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iZyz,xwuy,Wwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,iZyx,yzwu,Wwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iy,Wyxz,Zz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,iy,Zxyz,Wz->KWZ', X_abb, t1_xa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iyWz,xzwu,Zwyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iyWz,xwuz,Zuwy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,iyWz,xwyu,Zzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,iyWx,yzwu,Zwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iyzW,xwuz,Zuwy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzW,xwuz,Zuyw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzW,xwyu,Zzuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iyzW,xwyu,Zzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Wuxw,Zzuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iyzw,Wuxw,Zzyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iyzw,Wzxu,Zwuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iyzw,Wzxw,Zy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iyzw,Wwxu,Zzuy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Wwxu,Zzyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzw,Zuwx,Wyuz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iyzw,Zuwx,Wyzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iyzw,Zyux,Wuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzw,Zyux,Wuwz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iyzw,Zxuy,Wuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,iyzw,Zxzu,Wyuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('iKx,iyzw,Zxwu,Wyzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iyzx,Wzwu,Zwyu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzx,Wwuz,Zuwy->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iyzx,Wwuz,Zuyw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iyzx,Wwyu,Zzuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzx,Wwyu,Zzwu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('iKx,iyzx,Zwuy,Wuzw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('iKx,iyzx,Zwuy,Wuwz->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('iKx,iyzx,Zwzu,Wyuw->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('iKx,iyzx,Zwzu,Wywu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('iKx,iyzx,Zywu,Wwzu->KWZ', X_abb, t1_xaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_caa__bab:f_caa__bab] -= sigma_caa.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CAA-CCA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCE_CCA(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Molecular Orbitals Energies
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa

        h_ae = mr_adc.h1eff.ae

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxae = mr_adc.v2e.xxae
        v_xaex = mr_adc.v2e.xaex

        v_aaae = mr_adc.v2e.aaae

        ## Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce =- einsum('KLx,xB->KLB', X_aaa, h_ae, optimize = einsum_type)
        sigma_cce += einsum('Kix,LixB->KLB', X_aaa, v_xxae, optimize = einsum_type)
        sigma_cce -= einsum('Kix,ixBL->KLB', X_aaa, v_xaex, optimize = einsum_type)
        sigma_cce -= einsum('Lix,KixB->KLB', X_aaa, v_xxae, optimize = einsum_type)
        sigma_cce += einsum('Lix,ixBK->KLB', X_aaa, v_xaex, optimize = einsum_type)
        sigma_cce -= einsum('Kix,ixBL->KLB', X_abb, v_xaex, optimize = einsum_type)
        sigma_cce += einsum('Lix,ixBK->KLB', X_abb, v_xaex, optimize = einsum_type)
        sigma_cce -= einsum('KLx,B,xB->KLB', X_aaa, e_extern, t1_ae, optimize = einsum_type)
        sigma_cce += einsum('KLx,xy,yB->KLB', X_aaa, h_aa, t1_ae, optimize = einsum_type)
        sigma_cce -= einsum('KLx,yzxB,zy->KLB', X_aaa, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KLx,xyzB,yz->KLB', X_aaa, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kix,LiyB,xy->KLB', X_aaa, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kix,iyBL,xy->KLB', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lix,KiyB,xy->KLB', X_aaa, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lix,iyBK,xy->KLB', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kix,iyBL,xy->KLB', X_abb, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lix,iyBK,xy->KLB', X_abb, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('KLx,B,yxzB,zy->KLB', X_aaa, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KLx,B,xyzB,zy->KLB', X_aaa, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('KLx,yz,wxyB,zw->KLB', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('KLx,yz,yxwB,zw->KLB', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KLx,yz,xwyB,zw->KLB', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,yz,xywB,zw->KLB', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('KLx,xy,zywB,wz->KLB', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,xy,yzwB,wz->KLB', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,yB,xzwy,wz->KLB', X_aaa, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('KLx,yB,xyzw,zw->KLB', X_aaa, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,yzwB,xuvz,wuyv->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,yzwB,xuvy,wuvz->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KLx,yzwB,xuwv,zyuv->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('KLx,yzwB,xzuv,wvyu->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('KLx,yzwB,xzuy,wu->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,yzwB,xyuv,wvzu->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,yzwB,xyuz,wu->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('KLx,yxzB,zwuv,yuwv->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('KLx,yxzB,ywuv,zuwv->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KLx,xyzB,zwuv,yuwv->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,xyzB,ywuv,zuwv->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cce =- einsum('Kix,ixBL->KLB', X_aaa, v_xaex, optimize = einsum_type)
        sigma_cce -= einsum('KLx,xB->KLB', X_abb, h_ae, optimize = einsum_type)
        sigma_cce += einsum('Kix,LixB->KLB', X_abb, v_xxae, optimize = einsum_type)
        sigma_cce -= einsum('Kix,ixBL->KLB', X_abb, v_xaex, optimize = einsum_type)
        sigma_cce += einsum('iLx,KixB->KLB', X_abb, v_xxae, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kix,iyBL,xy->KLB', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('KLx,B,xB->KLB', X_abb, e_extern, t1_ae, optimize = einsum_type)
        sigma_cce += einsum('KLx,xy,yB->KLB', X_abb, h_aa, t1_ae, optimize = einsum_type)
        sigma_cce -= einsum('KLx,yzxB,zy->KLB', X_abb, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KLx,xyzB,yz->KLB', X_abb, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kix,LiyB,xy->KLB', X_abb, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kix,iyBL,xy->KLB', X_abb, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('iLx,KiyB,xy->KLB', X_abb, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('KLx,B,yxzB,zy->KLB', X_abb, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KLx,B,xyzB,zy->KLB', X_abb, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('KLx,yz,wxyB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('KLx,yz,yxwB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KLx,yz,xwyB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,yz,xywB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('KLx,xy,zywB,wz->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,xy,yzwB,wz->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,yB,xzwy,wz->KLB', X_abb, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce += einsum('KLx,yB,xyzw,zw->KLB', X_abb, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,yzwB,xuvz,wuyv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,yzwB,xuvy,wuvz->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KLx,yzwB,xuwv,zyuv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('KLx,yzwB,xzuv,wvyu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('KLx,yzwB,xzuy,wu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,yzwB,xyuv,wvzu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,yzwB,xyuz,wu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cce -= einsum('KLx,yxzB,zwuv,yuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += einsum('KLx,yxzB,ywuv,zuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('KLx,xyzB,zwuv,yuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('KLx,xyzB,ywuv,zuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CCE-CCA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CCA(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Two-electron integrals
        v_xaea = mr_adc.v2e.xaea

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae  = 1/6 * einsum('Kix,iyBz,Zxzy->KZB', X_aaa, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kix,iyBz,Zxyz->KZB', X_aaa, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kix,iyBx,Zy->KZB', X_aaa, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kix,ixBy,Zy->KZB', X_aaa, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kix,iyBz,Zxzy->KZB', X_abb, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kix,iyBz,Zxyz->KZB', X_abb, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kix,ixBy,Zy->KZB', X_abb, v_xaea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/3 * einsum('Kix,iyBz,Zxzy->KZB', X_aaa, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kix,iyBz,Zxyz->KZB', X_aaa, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kix,ixBy,Zy->KZB', X_aaa, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kix,iyBz,Zxzy->KZB', X_abb, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kix,iyBz,Zxyz->KZB', X_abb, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kix,iyBx,Zy->KZB', X_abb, v_xaea, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kix,ixBy,Zy->KZB', X_abb, v_xaea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/6 * einsum('iKx,iyBz,Zxzy->KZB', X_abb, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('iKx,iyBz,Zxyz->KZB', X_abb, v_xaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('iKx,iyBx,Zy->KZB', X_abb, v_xaea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CAE-CCA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCA_CCA(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Two-electron integrals
        v_xxxx = mr_adc.v2e.xxxx

        v_xxaa = mr_adc.v2e.xxaa
        v_xaax = mr_adc.v2e.xaax

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cca =- einsum('Kix,LWxi->KLW', X_aaa, v_xaax, optimize = einsum_type)
        sigma_cca += einsum('Kix,LixW->KLW', X_aaa, v_xxaa, optimize = einsum_type)
        sigma_cca += einsum('Lix,KWxi->KLW', X_aaa, v_xaax, optimize = einsum_type)
        sigma_cca -= einsum('Lix,KixW->KLW', X_aaa, v_xxaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('ijW,KiLj->KLW', X_aaa, v_xxxx, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('ijW,KjLi->KLW', X_aaa, v_xxxx, optimize = einsum_type)
        sigma_cca -= einsum('Kix,LWxi->KLW', X_abb, v_xaax, optimize = einsum_type)
        sigma_cca += einsum('Lix,KWxi->KLW', X_abb, v_xaax, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,LWyi,xy->KLW', X_aaa, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kix,LiyW,xy->KLW', X_aaa, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kix,Liyz,Wyxz->KLW', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kix,Lyzi,Wzyx->KLW', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kix,Lixy,Wy->KLW', X_aaa, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_aaa, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lix,KWyi,xy->KLW', X_aaa, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lix,KiyW,xy->KLW', X_aaa, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lix,Kiyz,Wyxz->KLW', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lix,Kyzi,Wzxy->KLW', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lix,Kyzi,Wzyx->KLW', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lix,Kixy,Wy->KLW', X_aaa, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lix,Kyxi,Wy->KLW', X_aaa, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/4 * einsum('ijx,KjLi,Wx->KLW', X_aaa, v_xxxx, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/4 * einsum('ijx,KiLj,Wx->KLW', X_aaa, v_xxxx, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,LWyi,xy->KLW', X_abb, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kix,Lyzi,Wzyx->KLW', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_abb, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lix,KWyi,xy->KLW', X_abb, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lix,Kyzi,Wzxy->KLW', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lix,Kyzi,Wzyx->KLW', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lix,Kyxi,Wy->KLW', X_abb, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,Liyz,yz,Wx->KLW', X_aaa, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/4 * einsum('Kix,Lyzi,zy,Wx->KLW', X_aaa, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lix,Kiyz,yz,Wx->KLW', X_aaa, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/4 * einsum('Lix,Kyzi,zy,Wx->KLW', X_aaa, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cca__aaa:f_cca__aaa] += sigma_cca[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cca =- einsum('Kix,LWxi->KLW', X_aaa, v_xaax, optimize = einsum_type)
        sigma_cca -= einsum('Kix,LWxi->KLW', X_abb, v_xaax, optimize = einsum_type)
        sigma_cca += einsum('Kix,LixW->KLW', X_abb, v_xxaa, optimize = einsum_type)
        sigma_cca -= einsum('ijW,KiLj->KLW', X_abb, v_xxxx, optimize = einsum_type)
        sigma_cca += einsum('iLx,KixW->KLW', X_abb, v_xxaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,LWyi,xy->KLW', X_aaa, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kix,Lyzi,Wzyx->KLW', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_aaa, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,LWyi,xy->KLW', X_abb, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kix,LiyW,xy->KLW', X_abb, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kix,Liyz,Wyxz->KLW', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kix,Lyzi,Wzyx->KLW', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kix,Lixy,Wy->KLW', X_abb, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_abb, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('iLx,KiyW,xy->KLW', X_abb, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('iLx,Kiyz,Wyxz->KLW', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('iLx,Kyzi,Wzxy->KLW', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('iLx,Kyzi,Wzyx->KLW', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('iLx,Kixy,Wy->KLW', X_abb, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('ijx,KiLj,Wx->KLW', X_abb, v_xxxx, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,Liyz,yz,Wx->KLW', X_abb, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/4 * einsum('Kix,Lyzi,zy,Wx->KLW', X_abb, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('iLx,Kiyz,yz,Wx->KLW', X_abb, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/4 * einsum('iLx,Kyzi,zy,Wx->KLW', X_abb, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cca__abb:f_cca__abb] += sigma_cca.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CCA-CCA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CCA(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Two-electron integrals
        v_vxae = mr_adc.v2e.vxae
        v_xaev = mr_adc.v2e.xaev

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        sigma_cve  = einsum('Kix,LixB->KLB', X_aaa, v_vxae, optimize = einsum_type)
        sigma_cve -= einsum('Kix,ixBL->KLB', X_aaa, v_xaev, optimize = einsum_type)
        sigma_cve -= einsum('Kix,ixBL->KLB', X_abb, v_xaev, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kix,LiyB,xy->KLB', X_aaa, v_vxae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kix,iyBL,xy->KLB', X_aaa, v_xaev, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kix,iyBL,xy->KLB', X_abb, v_xaev, rdm_ca, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve =- einsum('Kix,ixBL->KLB', X_aaa, v_xaev, optimize = einsum_type)
        sigma_cve += einsum('Kix,LixB->KLB', X_abb, v_vxae, optimize = einsum_type)
        sigma_cve -= einsum('Kix,ixBL->KLB', X_abb, v_xaev, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kix,iyBL,xy->KLB', X_aaa, v_xaev, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kix,LiyB,xy->KLB', X_abb, v_vxae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kix,iyBL,xy->KLB', X_abb, v_xaev, rdm_ca, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        sigma_cve =- einsum('iKx,LixB->KLB', X_abb, v_vxae, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('iKx,LiyB,xy->KLB', X_abb, v_vxae, rdm_ca, optimize = einsum_type)
        sigma[s_cve__bab:f_cve__bab] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CVE-CCA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVA_CCA(mr_adc, X_aaa, X_abb, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Two-electron integrals
        v_xxvx = mr_adc.v2e.xxvx

        v_vxaa = mr_adc.v2e.vxaa
        v_vaax = mr_adc.v2e.vaax

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        sigma_cva =- einsum('Kix,LWxi->KLW', X_aaa, v_vaax, optimize = einsum_type)
        sigma_cva += einsum('Kix,LixW->KLW', X_aaa, v_vxaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('ijW,KiLj->KLW', X_aaa, v_xxvx, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('ijW,KjLi->KLW', X_aaa, v_xxvx, optimize = einsum_type)
        sigma_cva -= einsum('Kix,LWxi->KLW', X_abb, v_vaax, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,LWyi,xy->KLW', X_aaa, v_vaax, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,LiyW,xy->KLW', X_aaa, v_vxaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,Liyz,Wyxz->KLW', X_aaa, v_vxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_aaa, v_vaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kix,Lyzi,Wzyx->KLW', X_aaa, v_vaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,Lixy,Wy->KLW', X_aaa, v_vxaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_aaa, v_vaax, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/4 * einsum('ijx,KjLi,Wx->KLW', X_aaa, v_xxvx, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/4 * einsum('ijx,KiLj,Wx->KLW', X_aaa, v_xxvx, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,LWyi,xy->KLW', X_abb, v_vaax, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_abb, v_vaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kix,Lyzi,Wzyx->KLW', X_abb, v_vaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_abb, v_vaax, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Liyz,yz,Wx->KLW', X_aaa, v_vxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/4 * einsum('Kix,Lyzi,zy,Wx->KLW', X_aaa, v_vaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cva__aaa:f_cva__aaa] += sigma_cva.reshape(-1).copy()

        sigma_cva =- einsum('Kix,LWxi->KLW', X_aaa, v_vaax, optimize = einsum_type)
        sigma_cva -= einsum('Kix,LWxi->KLW', X_abb, v_vaax, optimize = einsum_type)
        sigma_cva += einsum('Kix,LixW->KLW', X_abb, v_vxaa, optimize = einsum_type)
        sigma_cva -= einsum('ijW,KiLj->KLW', X_abb, v_xxvx, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,LWyi,xy->KLW', X_aaa, v_vaax, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_aaa, v_vaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kix,Lyzi,Wzyx->KLW', X_aaa, v_vaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_aaa, v_vaax, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,LWyi,xy->KLW', X_abb, v_vaax, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,LiyW,xy->KLW', X_abb, v_vxaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,Liyz,Wyxz->KLW', X_abb, v_vxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_abb, v_vaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kix,Lyzi,Wzyx->KLW', X_abb, v_vaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,Lixy,Wy->KLW', X_abb, v_vxaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_abb, v_vaax, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('ijx,KiLj,Wx->KLW', X_abb, v_xxvx, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Liyz,yz,Wx->KLW', X_abb, v_vxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/4 * einsum('Kix,Lyzi,zy,Wx->KLW', X_abb, v_vaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cva__abb:f_cva__abb] += sigma_cva.reshape(-1).copy()

        sigma_cva  = einsum('ijW,KjLi->KLW', X_abb, v_xxvx, optimize = einsum_type)
        sigma_cva -= einsum('iKx,LixW->KLW', X_abb, v_vxaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iKx,LiyW,xy->KLW', X_abb, v_vxaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iKx,Liyz,Wyxz->KLW', X_abb, v_vxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('iKx,Lyzi,Wzxy->KLW', X_abb, v_vaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('iKx,Lyzi,Wzyx->KLW', X_abb, v_vaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iKx,Lixy,Wy->KLW', X_abb, v_vxaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('ijx,KjLi,Wx->KLW', X_abb, v_xxvx, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iKx,Liyz,yz,Wx->KLW', X_abb, v_vxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/4 * einsum('iKx,Lyzi,zy,Wx->KLW', X_abb, v_vaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cva__bab:f_cva__bab] += sigma_cva.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CVA-CCA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAA_CVE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_val = mr_adc.mo_energy.v
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_ve = mr_adc.h1eff.ve

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxve = mr_adc.v2e.xxve
        v_vxxe = mr_adc.v2e.vxxe

        v_vaae = mr_adc.v2e.vaae
        v_veaa = mr_adc.v2e.veaa

        ## Amplitudes
        t1_ve = mr_adc.t1.ve

        t1_vaea = mr_adc.t1.vaea
        t1_vaae = mr_adc.t1.vaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        sigma_caa =- 1/2 * einsum('Kia,ia,WZ->KWZ', X_aaa, h_ve, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaZx,Wx->KWZ', X_aaa, v_veaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaxy,WxZy->KWZ', X_aaa, v_veaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixZa,Wx->KWZ', X_aaa, v_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,WyZx->KWZ', X_aaa, v_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,WyxZ->KWZ', X_aaa, v_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ija,iKja,WZ->KWZ', X_aaa, v_xxve, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ija,jKia,WZ->KWZ', X_aaa, v_vxxe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ia,WZ->KWZ', X_abb, h_ve, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaZx,Wx->KWZ', X_abb, v_veaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaxy,WxZy->KWZ', X_abb, v_veaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,WyZx->KWZ', X_abb, v_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,WyxZ->KWZ', X_abb, v_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ija,iKja,WZ->KWZ', X_abb, v_xxve, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ija,jKia,WZ->KWZ', X_bab, v_vxxe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,iZax,Wx->KWZ', X_aaa, e_extern, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,a,iZxa,Wx->KWZ', X_aaa, e_extern, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ia,WZ->KWZ', X_aaa, e_extern, t1_ve, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ixay,WxZy->KWZ', X_aaa, e_extern, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,a,ixya,WxZy->KWZ', X_aaa, e_extern, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,a,ixya,WxyZ->KWZ', X_aaa, e_extern, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,iZax,Wx->KWZ', X_aaa, e_val, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,i,iZxa,Wx->KWZ', X_aaa, e_val, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ia,WZ->KWZ', X_aaa, e_val, t1_ve, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ixay,WxZy->KWZ', X_aaa, e_val, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,i,ixya,WxZy->KWZ', X_aaa, e_val, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,i,ixya,WxyZ->KWZ', X_aaa, e_val, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,Zx,ixay,Wy->KWZ', X_aaa, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,Zx,ixya,Wy->KWZ', X_aaa, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,iZax,Wy->KWZ', X_aaa, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,iZxa,Wy->KWZ', X_aaa, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,izax,WzZy->KWZ', X_aaa, h_aa, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,izxa,WzZy->KWZ', X_aaa, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,izxa,WzyZ->KWZ', X_aaa, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,ixaz,WyZz->KWZ', X_aaa, h_aa, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,ixza,WyZz->KWZ', X_aaa, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,ixza,WyzZ->KWZ', X_aaa, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iZax,xyzw,Wzyw->KWZ', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,iZxa,xyzw,Wzyw->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zzwx,Wwzy->KWZ', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,Zzyw,Wxzw->KWZ', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zxzw,Wzyw->KWZ', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,yzwu,WxwZzu->KWZ', X_aaa, t1_vaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,xzwu,WzuZyw->KWZ', X_aaa, t1_vaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzwx,Wwzy->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzwx,Wwyz->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzyw,Wxzw->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzyw,Wxwz->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixya,Zxzw,Wzyw->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,yzwu,WxwZzu->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,yzwu,WxwzZu->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,xzwu,WzuZyw->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,xzwu,WzuyZw->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,iZax,Wx->KWZ', X_abb, e_extern, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ia,WZ->KWZ', X_abb, e_extern, t1_ve, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ixay,WxZy->KWZ', X_abb, e_extern, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,a,ixya,WxZy->KWZ', X_abb, e_extern, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,a,ixya,WxyZ->KWZ', X_abb, e_extern, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,iZax,Wx->KWZ', X_abb, e_val, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ia,WZ->KWZ', X_abb, e_val, t1_ve, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ixay,WxZy->KWZ', X_abb, e_val, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,i,ixya,WxZy->KWZ', X_abb, e_val, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,i,ixya,WxyZ->KWZ', X_abb, e_val, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,Zx,ixay,Wy->KWZ', X_abb, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,iZax,Wy->KWZ', X_abb, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,izax,WzZy->KWZ', X_abb, h_aa, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,xy,izxa,WzZy->KWZ', X_abb, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,izxa,WzyZ->KWZ', X_abb, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,ixaz,WyZz->KWZ', X_abb, h_aa, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,xy,ixza,WyZz->KWZ', X_abb, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,ixza,WyzZ->KWZ', X_abb, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iZax,xyzw,Wzyw->KWZ', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zzwx,Wwzy->KWZ', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,Zzyw,Wxzw->KWZ', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zxzw,Wzyw->KWZ', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,yzwu,WxwZzu->KWZ', X_abb, t1_vaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,xzwu,WzuZyw->KWZ', X_abb, t1_vaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,ixya,Zzwx,Wwzy->KWZ', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzwx,Wwyz->KWZ', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,Zzyw,Wxzw->KWZ', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzyw,Wxwz->KWZ', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,yzwu,WxwZzu->KWZ', X_abb, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,yzwu,WxwzZu->KWZ', X_abb, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,ixya,xzwu,WzuZyw->KWZ', X_abb, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,xzwu,WzuyZw->KWZ', X_abb, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_caa__aaa:f_caa__aaa] += sigma_caa.reshape(-1).copy()

        sigma_caa =- 1/2 * einsum('Kia,ia,WZ->KWZ', X_aaa, h_ve, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaZx,Wx->KWZ', X_aaa, v_veaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaxy,WxZy->KWZ', X_aaa, v_veaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,WyZx->KWZ', X_aaa, v_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,WyxZ->KWZ', X_aaa, v_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ija,iKja,WZ->KWZ', X_aaa, v_xxve, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ija,jKia,WZ->KWZ', X_aaa, v_vxxe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ia,WZ->KWZ', X_abb, h_ve, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaZx,Wx->KWZ', X_abb, v_veaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iaxy,WxZy->KWZ', X_abb, v_veaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixZa,Wx->KWZ', X_abb, v_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,WyZx->KWZ', X_abb, v_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,WyxZ->KWZ', X_abb, v_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ija,iKja,WZ->KWZ', X_abb, v_xxve, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ija,jKia,WZ->KWZ', X_bab, v_vxxe, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,iZax,Wx->KWZ', X_aaa, e_extern, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ia,WZ->KWZ', X_aaa, e_extern, t1_ve, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ixay,WxZy->KWZ', X_aaa, e_extern, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,a,ixya,WxZy->KWZ', X_aaa, e_extern, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,a,ixya,WxyZ->KWZ', X_aaa, e_extern, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,iZax,Wx->KWZ', X_aaa, e_val, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ia,WZ->KWZ', X_aaa, e_val, t1_ve, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ixay,WxZy->KWZ', X_aaa, e_val, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,i,ixya,WxZy->KWZ', X_aaa, e_val, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,i,ixya,WxyZ->KWZ', X_aaa, e_val, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,Zx,ixay,Wy->KWZ', X_aaa, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,iZax,Wy->KWZ', X_aaa, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,izax,WzZy->KWZ', X_aaa, h_aa, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,xy,izxa,WzZy->KWZ', X_aaa, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,izxa,WzyZ->KWZ', X_aaa, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,ixaz,WyZz->KWZ', X_aaa, h_aa, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,xy,ixza,WyZz->KWZ', X_aaa, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,ixza,WyzZ->KWZ', X_aaa, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iZax,xyzw,Wzyw->KWZ', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zzwx,Wwzy->KWZ', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,Zzyw,Wxzw->KWZ', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zxzw,Wzyw->KWZ', X_aaa, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,yzwu,WxwZzu->KWZ', X_aaa, t1_vaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,xzwu,WzuZyw->KWZ', X_aaa, t1_vaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,ixya,Zzwx,Wwzy->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzwx,Wwyz->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,Zzyw,Wxzw->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzyw,Wxwz->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,yzwu,WxwZzu->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,yzwu,WxwzZu->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,ixya,xzwu,WzuZyw->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,xzwu,WzuyZw->KWZ', X_aaa, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,iZax,Wx->KWZ', X_abb, e_extern, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,a,iZxa,Wx->KWZ', X_abb, e_extern, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ia,WZ->KWZ', X_abb, e_extern, t1_ve, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,a,ixay,WxZy->KWZ', X_abb, e_extern, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,a,ixya,WxZy->KWZ', X_abb, e_extern, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,a,ixya,WxyZ->KWZ', X_abb, e_extern, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,iZax,Wx->KWZ', X_abb, e_val, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,i,iZxa,Wx->KWZ', X_abb, e_val, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ia,WZ->KWZ', X_abb, e_val, t1_ve, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,i,ixay,WxZy->KWZ', X_abb, e_val, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,i,ixya,WxZy->KWZ', X_abb, e_val, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,i,ixya,WxyZ->KWZ', X_abb, e_val, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,Zx,ixay,Wy->KWZ', X_abb, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,Zx,ixya,Wy->KWZ', X_abb, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,iZax,Wy->KWZ', X_abb, h_aa, t1_vaea, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,iZxa,Wy->KWZ', X_abb, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,xy,izax,WzZy->KWZ', X_abb, h_aa, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,izxa,WzZy->KWZ', X_abb, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,izxa,WzyZ->KWZ', X_abb, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,ixaz,WyZz->KWZ', X_abb, h_aa, t1_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,ixza,WyZz->KWZ', X_abb, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,ixza,WyzZ->KWZ', X_abb, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,iZax,xyzw,Wzyw->KWZ', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,iZxa,xyzw,Wzyw->KWZ', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zzwx,Wwzy->KWZ', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,Zzyw,Wxzw->KWZ', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,Zxzw,Wzyw->KWZ', X_abb, t1_vaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixay,yzwu,WxwZzu->KWZ', X_abb, t1_vaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,ixay,xzwu,WzuZyw->KWZ', X_abb, t1_vaea, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzwx,Wwzy->KWZ', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzwx,Wwyz->KWZ', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzyw,Wxzw->KWZ', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzyw,Wxwz->KWZ', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixya,Zxzw,Wzyw->KWZ', X_abb, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,yzwu,WxwZzu->KWZ', X_abb, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,yzwu,WxwzZu->KWZ', X_abb, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,xzwu,WzuZyw->KWZ', X_abb, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,xzwu,WzuyZw->KWZ', X_abb, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_caa__abb:f_caa__abb] += sigma_caa.reshape(-1).copy()

        sigma_caa  = 1/2 * einsum('Kia,ixZa,Wx->KWZ', X_bab, v_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,WyZx->KWZ', X_bab, v_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,ixya,WyxZ->KWZ', X_bab, v_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,a,iZxa,Wx->KWZ', X_bab, e_extern, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,a,ixya,WxZy->KWZ', X_bab, e_extern, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,a,ixya,WxyZ->KWZ', X_bab, e_extern, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,i,iZxa,Wx->KWZ', X_bab, e_val, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,i,ixya,WxZy->KWZ', X_bab, e_val, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,i,ixya,WxyZ->KWZ', X_bab, e_val, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,Zx,ixya,Wy->KWZ', X_bab, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,xy,iZxa,Wy->KWZ', X_bab, h_aa, t1_vaae, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,xy,izxa,WzZy->KWZ', X_bab, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,xy,izxa,WzyZ->KWZ', X_bab, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,xy,ixza,WyZz->KWZ', X_bab, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,xy,ixza,WyzZ->KWZ', X_bab, h_aa, t1_vaae, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kia,iZxa,xyzw,Wzyw->KWZ', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,Zzwx,Wwzy->KWZ', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kia,ixya,Zzwx,Wwyz->KWZ', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,Zzyw,Wxzw->KWZ', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kia,ixya,Zzyw,Wxwz->KWZ', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kia,ixya,Zxzw,Wzyw->KWZ', X_bab, t1_vaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,yzwu,WxwZuz->KWZ', X_bab, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,yzwu,WxwuZz->KWZ', X_bab, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,yzwu,WxwuzZ->KWZ', X_bab, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,yzwu,WxwzZu->KWZ', X_bab, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,yzwu,WxwzuZ->KWZ', X_bab, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,xzwu,WzuZwy->KWZ', X_bab, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,xzwu,WzuwZy->KWZ', X_bab, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,xzwu,WzuwyZ->KWZ', X_bab, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kia,ixya,xzwu,WzuyZw->KWZ', X_bab, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kia,ixya,xzwu,WzuywZ->KWZ', X_bab, t1_vaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_caa__bab:f_caa__bab] += sigma_caa.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CAA-CVE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCE_CVE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Two-electron integrals
        v_xxxv = mr_adc.v2e.xxxv
        v_xvxx = mr_adc.v2e.xvxx

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce =- einsum('ijB,KiLj->KLB', X_aaa, v_xxxv, optimize = einsum_type)
        sigma_cce += einsum('ijB,KjLi->KLB', X_aaa, v_xvxx, optimize = einsum_type)
        # sigma_cce += einsum('Kia,iLBa->KLB', X_aaa, v_vxee, optimize = einsum_type)
        # sigma_cce -= einsum('Lia,iKBa->KLB', X_aaa, v_vxee, optimize = einsum_type)
        # sigma_cce -= einsum('Kia,LBai->KLB', X_aaa, v_xeev, optimize = einsum_type)
        # sigma_cce += einsum('Lia,KBai->KLB', X_aaa, v_xeev, optimize = einsum_type)
        # sigma_cce -= einsum('Kia,LBai->KLB', X_abb, v_xeev, optimize = einsum_type)
        # sigma_cce += einsum('Lia,KBai->KLB', X_abb, v_xeev, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cce =- einsum('ijB,KiLj->KLB', X_abb, v_xxxv, optimize = einsum_type)
        sigma_cce += einsum('ijB,KjLi->KLB', X_bab, v_xvxx, optimize = einsum_type)
        # sigma_cce += einsum('Kia,iLBa->KLB', X_abb, v_vxee, optimize = einsum_type)
        # sigma_cce -= einsum('Lia,iKBa->KLB', X_bab, v_vxee, optimize = einsum_type)
        # sigma_cce -= einsum('Kia,LBai->KLB', X_aaa, v_xeev, optimize = einsum_type)
        # sigma_cce -= einsum('Kia,LBai->KLB', X_abb, v_xeev, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CCE-CVE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCE_CVE__V_VXEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_vxee):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce  = einsum('Kia,iLBa->KLB', X_aaa, v_vxee, optimize = einsum_type)
        sigma_cce -= einsum('Lia,iKBa->KLB', X_aaa, v_vxee, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cce  = einsum('Kia,iLBa->KLB', X_abb, v_vxee, optimize = einsum_type)
        sigma_cce -= einsum('Lia,iKBa->KLB', X_bab, v_vxee, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.vxee", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCE_CVE__V_XEEV(mr_adc, X_aaa, X_abb, sigma, v_xeev):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce =- einsum('Kia,LBai->KLB', X_aaa, v_xeev, optimize = einsum_type)
        sigma_cce += einsum('Lia,KBai->KLB', X_aaa, v_xeev, optimize = einsum_type)
        sigma_cce -= einsum('Kia,LBai->KLB', X_abb, v_xeev, optimize = einsum_type)
        sigma_cce += einsum('Lia,KBai->KLB', X_abb, v_xeev, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cce =- einsum('Kia,LBai->KLB', X_aaa, v_xeev, optimize = einsum_type)
        sigma_cce -= einsum('Kia,LBai->KLB', X_abb, v_xeev, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.xeev", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CVE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_val = mr_adc.mo_energy.v

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_va = mr_adc.h1eff.va

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxva = mr_adc.v2e.xxva
        v_vxxa = mr_adc.v2e.vxxa

        v_vaaa = mr_adc.v2e.vaaa

        ## Amplitudes
        t1_va = mr_adc.t1.va
        t1_vaaa = mr_adc.t1.vaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae  = 1/2 * einsum('KiB,ix,Zx->KZB', X_aaa, h_va, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,Zyxz->KZB', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ijB,iKjx,Zx->KZB', X_aaa, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('ijB,jKix,Zx->KZB', X_aaa, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,i,ix,Zx->KZB', X_aaa, e_val, t1_va, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,i,ixyz,Zxyz->KZB', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,izwx,Zzwy->KZB', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,izxw,Zzyw->KZB', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,ix,Zy->KZB', X_aaa, h_aa, t1_va, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,xy,ixzw,Zyzw->KZB', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ix,xyzw,Zzyw->KZB', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,zwuv,Zxuywv->KZB', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuvzw->KZB', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuvwz->KZB', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuzvw->KZB', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuzwv->KZB', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuwvz->KZB', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('KiB,ixyz,ywuv,Zxuwzv->KZB', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,ywzu,Zxwu->KZB', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,ixyz,xwuv,Zwvyzu->KZB', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        # sigma_cae += 1/2 * einsum('Kia,ixBa,Zx->KZB', X_aaa, v_vaee, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('Kia,iaBx,Zx->KZB', X_aaa, v_veea, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('Kia,iaBx,Zx->KZB', X_abb, v_veea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/2 * einsum('KiB,ix,Zx->KZB', X_abb, h_va, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,Zyxz->KZB', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ijB,iKjx,Zx->KZB', X_abb, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('ijB,jKix,Zx->KZB', X_bab, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,i,ix,Zx->KZB', X_abb, e_val, t1_va, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,i,ixyz,Zxyz->KZB', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,izwx,Zzwy->KZB', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,izxw,Zzyw->KZB', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,ix,Zy->KZB', X_abb, h_aa, t1_va, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,xy,ixzw,Zyzw->KZB', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ix,xyzw,Zzyw->KZB', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,zwuv,Zxuywv->KZB', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuvzw->KZB', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuvwz->KZB', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuzvw->KZB', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuzwv->KZB', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuwvz->KZB', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('KiB,ixyz,ywuv,Zxuwzv->KZB', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,ywzu,Zxwu->KZB', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,ixyz,xwuv,Zwvyzu->KZB', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        # sigma_cae += 1/2 * einsum('Kia,ixBa,Zx->KZB', X_abb, v_vaee, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('Kia,iaBx,Zx->KZB', X_aaa, v_veea, rdm_ca, optimize = einsum_type)
        # sigma_cae -= 1/2 * einsum('Kia,iaBx,Zx->KZB', X_abb, v_veea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/2 * einsum('ijB,jKix,Zx->KZB', X_abb, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ix,Zx->KZB', X_bab, h_va, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,Zyxz->KZB', X_bab, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('ijB,iKjx,Zx->KZB', X_bab, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,i,ix,Zx->KZB', X_bab, e_val, t1_va, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,i,ixyz,Zxyz->KZB', X_bab, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,izwx,Zzwy->KZB', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,izxw,Zzyw->KZB', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,xy,ix,Zy->KZB', X_bab, h_aa, t1_va, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,xy,ixzw,Zyzw->KZB', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ix,xyzw,Zzyw->KZB', X_bab, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,zwuv,Zxuywv->KZB', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuvzw->KZB', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuvwz->KZB', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuzvw->KZB', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuzwv->KZB', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('KiB,ixyz,ywuv,Zxuwvz->KZB', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('KiB,ixyz,ywuv,Zxuwzv->KZB', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('KiB,ixyz,ywzu,Zxwu->KZB', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('KiB,ixyz,xwuv,Zwvyzu->KZB', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        # sigma_cae += 1/2 * einsum('Kia,ixBa,Zx->KZB', X_bab, v_vaee, rdm_ca, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CAE-CVE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CVE__V_VAEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_vaee):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae  = 1/2 * einsum('Kia,ixBa,Zx->KZB', X_aaa, v_vaee, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/2 * einsum('Kia,ixBa,Zx->KZB', X_abb, v_vaee, rdm_ca, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/2 * einsum('Kia,ixBa,Zx->KZB', X_bab, v_vaee, rdm_ca, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.vaee", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CVE__V_VEEA(mr_adc, X_aaa, X_abb, sigma, v_veea):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb

        sigma_cae =- 1/2 * einsum('Kia,iaBx,Zx->KZB', X_aaa, v_veea, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kia,iaBx,Zx->KZB', X_abb, v_veea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae =- 1/2 * einsum('Kia,iaBx,Zx->KZB', X_aaa, v_veea, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kia,iaBx,Zx->KZB', X_abb, v_veea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.veea", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCA_CVE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Two-electron integrals
        v_vxae = mr_adc.v2e.vxae
        v_xaev = mr_adc.v2e.xaev

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cca =- einsum('Kia,LWai->KLW', X_aaa, v_xaev, optimize = einsum_type)
        sigma_cca += einsum('Kia,iLWa->KLW', X_aaa, v_vxae, optimize = einsum_type)
        sigma_cca += einsum('Lia,KWai->KLW', X_aaa, v_xaev, optimize = einsum_type)
        sigma_cca -= einsum('Lia,iKWa->KLW', X_aaa, v_vxae, optimize = einsum_type)
        sigma_cca -= einsum('Kia,LWai->KLW', X_abb, v_xaev, optimize = einsum_type)
        sigma_cca += einsum('Lia,KWai->KLW', X_abb, v_xaev, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_aaa, v_xaev, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kia,iLxa,Wx->KLW', X_aaa, v_vxae, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lia,Kxai,Wx->KLW', X_aaa, v_xaev, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lia,iKxa,Wx->KLW', X_aaa, v_vxae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_abb, v_xaev, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lia,Kxai,Wx->KLW', X_abb, v_xaev, rdm_ca, optimize = einsum_type)
        sigma[s_cca__aaa:f_cca__aaa] += sigma_cca[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cca =- einsum('Kia,LWai->KLW', X_aaa, v_xaev, optimize = einsum_type)
        sigma_cca -= einsum('Kia,LWai->KLW', X_abb, v_xaev, optimize = einsum_type)
        sigma_cca += einsum('Kia,iLWa->KLW', X_abb, v_vxae, optimize = einsum_type)
        sigma_cca -= einsum('Lia,iKWa->KLW', X_bab, v_vxae, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_aaa, v_xaev, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_abb, v_xaev, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kia,iLxa,Wx->KLW', X_abb, v_vxae, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lia,iKxa,Wx->KLW', X_bab, v_vxae, rdm_ca, optimize = einsum_type)
        sigma[s_cca__abb:f_cca__abb] += sigma_cca.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CCA-CVE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CVE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Two-electron integrals
        v_xxvv = mr_adc.v2e.xxvv
        v_xvvx = mr_adc.v2e.xvvx

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        sigma_cve =- einsum('ijB,KiLj->KLB', X_aaa, v_xxvv, optimize = einsum_type)
        sigma_cve += einsum('ijB,KjLi->KLB', X_aaa, v_xvvx, optimize = einsum_type)
        # sigma_cve += einsum('iLa,iKBa->KLB', X_aaa, v_xxee, optimize = einsum_type)
        # sigma_cve -= einsum('iLa,KBai->KLB', X_aaa, v_xeex, optimize = einsum_type)
        # sigma_cve -= einsum('iLa,KBai->KLB', X_bab, v_xeex, optimize = einsum_type)
        # sigma_cve += einsum('Kia,iLBa->KLB', X_aaa, v_vvee, optimize = einsum_type)
        # sigma_cve -= einsum('Kia,LBai->KLB', X_aaa, v_veev, optimize = einsum_type)
        # sigma_cve -= einsum('Kia,LBai->KLB', X_abb, v_veev, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()


        sigma_cve =- einsum('ijB,KiLj->KLB', X_abb, v_xxvv, optimize = einsum_type)
        sigma_cve += einsum('ijB,KjLi->KLB', X_bab, v_xvvx, optimize = einsum_type)
        # sigma_cve += einsum('iLa,iKBa->KLB', X_abb, v_xxee, optimize = einsum_type)
        # sigma_cve += einsum('Kia,iLBa->KLB', X_abb, v_vvee, optimize = einsum_type)
        # sigma_cve -= einsum('Kia,LBai->KLB', X_aaa, v_veev, optimize = einsum_type)
        # sigma_cve -= einsum('Kia,LBai->KLB', X_abb, v_veev, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()


        sigma_cve  = einsum('ijB,KjLi->KLB', X_abb, v_xvvx, optimize = einsum_type)
        sigma_cve -= einsum('ijB,KiLj->KLB', X_bab, v_xxvv, optimize = einsum_type)
        # sigma_cve += einsum('iLa,iKBa->KLB', X_bab, v_xxee, optimize = einsum_type)
        # sigma_cve -= einsum('iLa,KBai->KLB', X_aaa, v_xeex, optimize = einsum_type)
        # sigma_cve -= einsum('iLa,KBai->KLB', X_bab, v_xeex, optimize = einsum_type)
        # sigma_cve += einsum('Kia,iLBa->KLB', X_bab, v_vvee, optimize = einsum_type)
        sigma[s_cve__bab:f_cve__bab] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CVE-CVE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CVE__V_XXEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_xxee):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        sigma_cve  = einsum('iLa,iKBa->KLB', X_aaa, v_xxee, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve  = einsum('iLa,iKBa->KLB', X_abb, v_xxee, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        sigma_cve  = einsum('iLa,iKBa->KLB', X_bab, v_xxee, optimize = einsum_type)
        sigma[s_cve__bab:f_cve__bab] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.xxee", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CVE__V_XEEX(mr_adc, X_aaa, X_bab, sigma, v_xeex):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        sigma_cve =- einsum('iLa,KBai->KLB', X_aaa, v_xeex, optimize = einsum_type)
        sigma_cve -= einsum('iLa,KBai->KLB', X_bab, v_xeex, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve =- einsum('iLa,KBai->KLB', X_aaa, v_xeex, optimize = einsum_type)
        sigma_cve -= einsum('iLa,KBai->KLB', X_bab, v_xeex, optimize = einsum_type)
        sigma[s_cve__bab:f_cve__bab] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.xeex", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CVE__V_VVEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_vvee):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        sigma_cve  = einsum('Kia,iLBa->KLB', X_aaa, v_vvee, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve  = einsum('Kia,iLBa->KLB', X_abb, v_vvee, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        sigma_cve  = einsum('Kia,iLBa->KLB', X_bab, v_vvee, optimize = einsum_type)
        sigma[s_cve__bab:f_cve__bab] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.vvee", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CVE__V_VEEV(mr_adc, X_aaa, X_abb, sigma, v_veev):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb

        sigma_cve =- einsum('Kia,LBai->KLB', X_aaa, v_veev, optimize = einsum_type)
        sigma_cve -= einsum('Kia,LBai->KLB', X_abb, v_veev, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve =- einsum('Kia,LBai->KLB', X_aaa, v_veev, optimize = einsum_type)
        sigma_cve -= einsum('Kia,LBai->KLB', X_abb, v_veev, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("contracting v2e.veev", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVA_CVE(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_ae = mr_adc.h1eff.ae

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxae = mr_adc.v2e.xxae
        v_vvae = mr_adc.v2e.vvae

        v_xaex = mr_adc.v2e.xaex
        v_vaev = mr_adc.v2e.vaev

        v_aaae = mr_adc.v2e.aaae

        ## Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        sigma_cva =- einsum('KLa,Wa->KLW', X_aaa, h_ae, optimize = einsum_type)
        sigma_cva -= einsum('Kia,LWai->KLW', X_aaa, v_vaev, optimize = einsum_type)
        sigma_cva += einsum('Kia,iLWa->KLW', X_aaa, v_vvae, optimize = einsum_type)
        sigma_cva -= einsum('iLa,KWai->KLW', X_aaa, v_xaex, optimize = einsum_type)
        sigma_cva += einsum('iLa,iKWa->KLW', X_aaa, v_xxae, optimize = einsum_type)
        sigma_cva -= einsum('Kia,LWai->KLW', X_abb, v_vaev, optimize = einsum_type)
        sigma_cva -= einsum('iLa,KWai->KLW', X_bab, v_xaex, optimize = einsum_type)
        sigma_cva -= einsum('KLa,a,Wa->KLW', X_aaa, e_extern, t1_ae, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xa,Wx->KLW', X_aaa, h_ae, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KLa,Wx,xa->KLW', X_aaa, h_aa, t1_ae, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,Wxya,yx->KLW', X_aaa, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLa,xyWa,xy->KLW', X_aaa, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xyza,Wyzx->KLW', X_aaa, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_aaa, v_vaev, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kia,iLxa,Wx->KLW', X_aaa, v_vvae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLa,Kxai,Wx->KLW', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iLa,iKxa,Wx->KLW', X_aaa, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_abb, v_vaev, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLa,Kxai,Wx->KLW', X_bab, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,a,Wxya,xy->KLW', X_aaa, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLa,a,xWya,xy->KLW', X_aaa, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,a,xa,Wx->KLW', X_aaa, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,a,xyza,Wzyx->KLW', X_aaa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,Wx,yxza,zy->KLW', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,Wx,xyza,zy->KLW', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xy,Wzxa,yz->KLW', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xy,Wxza,yz->KLW', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLa,xy,zWxa,yz->KLW', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xy,zwxa,Wywz->KLW', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xy,zxwa,Wwyz->KLW', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,xy,xWza,yz->KLW', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xy,xa,Wy->KLW', X_aaa, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xy,xzwa,Wwzy->KLW', X_aaa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,Wxya,yzwu,xwzu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,Wxya,xzwu,ywzu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= einsum('KLa,xWya,yzwu,xwzu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,xWya,xzwu,ywzu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xa,Wyzx,zy->KLW', X_aaa, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KLa,xa,Wxyz,yz->KLW', X_aaa, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xa,xyzw,Wzyw->KLW', X_aaa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,Wwuy,zwxu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,Wwux,zwuy->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xyza,Wwzu,yxwu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,xyza,Wywu,zuxw->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,xyza,Wywx,zw->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,Wxwu,zuyw->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,Wxwy,zw->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xyza,zwuv,Wwvyxu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuvwx->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuvxw->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuwvx->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('KLa,xyza,ywuv,Wzuwxv->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuxvw->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuxwv->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,ywxu,Wzwu->KLW', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,xwuv,Wzuywv->KLW', X_aaa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_cva__aaa:f_cva__aaa] += sigma_cva.reshape(-1).copy()

        sigma_cva =- einsum('Kia,LWai->KLW', X_aaa, v_vaev, optimize = einsum_type)
        sigma_cva -= einsum('KLa,Wa->KLW', X_abb, h_ae, optimize = einsum_type)
        sigma_cva -= einsum('Kia,LWai->KLW', X_abb, v_vaev, optimize = einsum_type)
        sigma_cva += einsum('Kia,iLWa->KLW', X_abb, v_vvae, optimize = einsum_type)
        sigma_cva += einsum('iLa,iKWa->KLW', X_abb, v_xxae, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_aaa, v_vaev, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLa,a,Wa->KLW', X_abb, e_extern, t1_ae, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xa,Wx->KLW', X_abb, h_ae, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KLa,Wx,xa->KLW', X_abb, h_aa, t1_ae, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,Wxya,yx->KLW', X_abb, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLa,xyWa,xy->KLW', X_abb, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xyza,Wyzx->KLW', X_abb, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kia,Lxai,Wx->KLW', X_abb, v_vaev, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kia,iLxa,Wx->KLW', X_abb, v_vvae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iLa,iKxa,Wx->KLW', X_abb, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,a,Wxya,xy->KLW', X_abb, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLa,a,xWya,xy->KLW', X_abb, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,a,xa,Wx->KLW', X_abb, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,a,xyza,Wzyx->KLW', X_abb, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,Wx,yxza,zy->KLW', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,Wx,xyza,zy->KLW', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xy,Wzxa,yz->KLW', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xy,Wxza,yz->KLW', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLa,xy,zWxa,yz->KLW', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xy,zwxa,Wywz->KLW', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xy,zxwa,Wwyz->KLW', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,xy,xWza,yz->KLW', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xy,xa,Wy->KLW', X_abb, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xy,xzwa,Wwzy->KLW', X_abb, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,Wxya,yzwu,xwzu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,Wxya,xzwu,ywzu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= einsum('KLa,xWya,yzwu,xwzu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,xWya,xzwu,ywzu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xa,Wyzx,zy->KLW', X_abb, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KLa,xa,Wxyz,yz->KLW', X_abb, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xa,xyzw,Wzyw->KLW', X_abb, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,Wwuy,zwxu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,Wwux,zwuy->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xyza,Wwzu,yxwu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,xyza,Wywu,zuxw->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,xyza,Wywx,zw->KLW', X_abb, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,Wxwu,zuyw->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,Wxwy,zw->KLW', X_abb, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xyza,zwuv,Wwvyxu->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuvwx->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuvxw->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuwvx->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('KLa,xyza,ywuv,Wzuwxv->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuxvw->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuxwv->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,ywxu,Wzwu->KLW', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,xwuv,Wzuywv->KLW', X_abb, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_cva__abb:f_cva__abb] += sigma_cva.reshape(-1).copy()

        sigma_cva =- einsum('iLa,KWai->KLW', X_aaa, v_xaex, optimize = einsum_type)
        sigma_cva -= einsum('KLa,Wa->KLW', X_bab, h_ae, optimize = einsum_type)
        sigma_cva += einsum('Kia,iLWa->KLW', X_bab, v_vvae, optimize = einsum_type)
        sigma_cva -= einsum('iLa,KWai->KLW', X_bab, v_xaex, optimize = einsum_type)
        sigma_cva += einsum('iLa,iKWa->KLW', X_bab, v_xxae, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLa,Kxai,Wx->KLW', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLa,a,Wa->KLW', X_bab, e_extern, t1_ae, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xa,Wx->KLW', X_bab, h_ae, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KLa,Wx,xa->KLW', X_bab, h_aa, t1_ae, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,Wxya,yx->KLW', X_bab, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLa,xyWa,xy->KLW', X_bab, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xyza,Wyzx->KLW', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kia,iLxa,Wx->KLW', X_bab, v_vvae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLa,Kxai,Wx->KLW', X_bab, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iLa,iKxa,Wx->KLW', X_bab, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,a,Wxya,xy->KLW', X_bab, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLa,a,xWya,xy->KLW', X_bab, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,a,xa,Wx->KLW', X_bab, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,a,xyza,Wzyx->KLW', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,Wx,yxza,zy->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,Wx,xyza,zy->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xy,Wzxa,yz->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xy,Wxza,yz->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= einsum('KLa,xy,zWxa,yz->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xy,zwxa,Wywz->KLW', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xy,zxwa,Wwyz->KLW', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,xy,xWza,yz->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xy,xa,Wy->KLW', X_bab, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xy,xzwa,Wwzy->KLW', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,Wxya,yzwu,xwzu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,Wxya,xzwu,ywzu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= einsum('KLa,xWya,yzwu,xwzu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,xWya,xzwu,ywzu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xa,Wyzx,zy->KLW', X_bab, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += einsum('KLa,xa,Wxyz,yz->KLW', X_bab, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xa,xyzw,Wzyw->KLW', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,Wwuy,zwxu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,Wwux,zwuy->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xyza,Wwzu,yxwu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,xyza,Wywu,zuxw->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += einsum('KLa,xyza,Wywx,zw->KLW', X_bab, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,Wxwu,zuyw->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,Wxwy,zw->KLW', X_bab, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('KLa,xyza,zwuv,Wwvyxu->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuvwx->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuvxw->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuwvx->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('KLa,xyza,ywuv,Wzuwxv->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuxvw->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuxwv->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,ywxu,Wzwu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('KLa,xyza,xwuv,Wzuywv->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma[s_cva__bab:f_cva__bab] += sigma_cva.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CVA-CVE", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAA_CVA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_val = mr_adc.mo_energy.v

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_va = mr_adc.h1eff.va

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxva = mr_adc.v2e.xxva
        v_vxxa = mr_adc.v2e.vxxa

        v_vaaa = mr_adc.v2e.vaaa

        ## Amplitudes
        t1_va = mr_adc.t1.va
        t1_vaaa = mr_adc.t1.vaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        # Note: implemented as a transpose to avoid 4-RDM
        sigma_caa =- einsum('KiZ,iW->KWZ', X_aaa, h_va, optimize = einsum_type)
        sigma_caa += einsum('KiZ,i,iW->KWZ', X_aaa, e_val, t1_va, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iW,Zx->KWZ', X_aaa, h_va, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,Wx,ix->KWZ', X_aaa, h_aa, t1_va, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iWyz,Zzxy->KWZ', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,Zyzx->KWZ', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,Zyxz->KWZ', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,iWxy,yx->KWZ', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyW,xy->KWZ', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyZz,Wxzy->KWZ', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyZz,Wxyz->KWZ', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iWyx,Zy->KWZ', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyZx,Wy->KWZ', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,ixZy,Wy->KWZ', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,ixyW,Zy->KWZ', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ijx,iKjy,WxZy->KWZ', X_aaa, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ijx,iKjy,WxyZ->KWZ', X_aaa, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ijx,jKiy,WxZy->KWZ', X_aaa, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ijx,jKiy,WxyZ->KWZ', X_aaa, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ijZ,iKjx,Wx->KWZ', X_aaa, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ijZ,jKix,Wx->KWZ', X_aaa, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ijx,iKjx,WZ->KWZ', X_aaa, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ijx,jKix,WZ->KWZ', X_aaa, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzW,Zyzx->KWZ', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,Zyxz->KWZ', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyZz,Wxzy->KWZ', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyZz,Wxyz->KWZ', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,ixZy,Wy->KWZ', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,ixyW,Zy->KWZ', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ijx,iKjy,WxZy->KWZ', X_abb, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ijx,iKjy,WxyZ->KWZ', X_abb, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ijx,iKjx,WZ->KWZ', X_abb, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ijx,jKiy,WxZy->KWZ', X_bab, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ijx,jKiy,WxyZ->KWZ', X_bab, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ijx,jKix,WZ->KWZ', X_bab, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iW,Zx->KWZ', X_aaa, e_val, t1_va, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iZyz,Wxzy->KWZ', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iZyz,Wxyz->KWZ', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('KiZ,i,ixWy,yx->KWZ', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,i,ixyW,yx->KWZ', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iyWz,Zzxy->KWZ', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iyzW,Zzxy->KWZ', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iyzW,Zzyx->KWZ', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iZyx,Wy->KWZ', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iZxy,Wy->KWZ', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iyWx,Zy->KWZ', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iyxW,Zy->KWZ', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Wy,izwy,Zwzx->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,Wy,izwy,Zwxz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,izyw,Zwxz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iwWy,Zzxw->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iwyW,Zzwx->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iwyW,Zzxw->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,Wx,iyzx,yz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,Wx,iyxz,yz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,xy,izWx,yz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,xy,izxW,yz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('KiZ,xy,ixWz,yz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,xy,ixzW,yz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,iy,Zx->KWZ', X_aaa, h_aa, t1_va, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Zy,iyzw,Wxwz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,Zy,iyzw,Wxzw->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iZwy,Wxwz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZwy,Wxzw->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZyw,Wxwz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iZyw,Wxzw->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iyWw,Zwxz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iywW,Zwzx->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iywW,Zwxz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,izyx,Zz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Wy,izxy,Zz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Zy,iyzx,Wz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Zy,iyxz,Wz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iZyx,Wz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iZxy,Wz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iyWx,Zz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iyxW,Zz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,iZzy,Wz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,iZyz,Wz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,izWy,Zz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,izyW,Zz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwuv,Wxuwyv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuywv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,ywuv,Wxuwzv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,ywuv,Wxuzwv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Wzwy,Zwzx->KWZ', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Wzwy,Zwxz->KWZ', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Wyzw,Zzxw->KWZ', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,zwuv,Zwvxyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvxyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,zwuv,Zwvyxu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuxyv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyxv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuz,Zuxy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuz,Zuyx->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvw,Zzvuxy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvw,Zzvxuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuyx->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvxyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuxv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwxuv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzuv,Zwuxyv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzuw,Zuxy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ix,Wyzx,zy->KWZ', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ix,Wxyz,yz->KWZ', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixWy,yzwu,xwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('KiZ,ixWy,xzwu,ywzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyW,yzwu,xwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,ixyW,xzwu,ywzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wzwu,xuyw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wzwy,xw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wwuz,xwuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wwuy,xwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,ixyz,Wwxu,yzwu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixyz,Wywu,xuzw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixyz,Wywz,xw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwyu,Wxwu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwyu,Wxuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Zzyw,Wxwz->KWZ', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Zzyw,Wxzw->KWZ', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWz,ywuv,Zzuxwv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,ywuv,Zzuwxv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuxwv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuvy,Wxvuzw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuvy,Wxvzuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuzv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyzuv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuzv,Wxyvuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuzv,Wxyuvw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwzv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuzwv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyz,xzwu,Wuyw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyz,xzwy,Ww->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuz,Wwuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,xwuz,Wwyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,xwuy,Wwuz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuy,Wwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywu,Wuzw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywz,Ww->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyx,yzwu,Wwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZxy,yzwu,Wwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Wzxy,Zz->KWZ', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Wyxz,Zz->KWZ', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Zzyx,Wz->KWZ', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Zxyz,Wz->KWZ', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,xzwu,Zwyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,xwuz,Zuwy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWz,xwyu,Zzwu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWx,yzwu,Zwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzW,xzwu,Zwyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwuz,Zuwy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwuz,Zuyw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwyu,Zzuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwyu,Zzwu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wuxz,Zwuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuxw,Zzuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuxw,Zzyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzxu,Zwuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzxw,Zy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwxu,Zzuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwxu,Zzyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wwxz,Zy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zuzx,Wyuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwx,Wyuz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwx,Wyzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyux,Wuzw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyux,Wuwz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zxuy,Wuzw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Zxzu,Wyuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Zxwu,Wyzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzx,Wzwu,Zwyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwuz,Zuwy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwuz,Zuyw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwyu,Zzuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwyu,Zzwu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwuy,Wuzw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwuy,Wuwz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwzu,Wyuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwzu,Wywu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzx,Zywu,Wwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxW,yzwu,Zwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wzwu,Zwyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wwuz,Zuwy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Wwyu,Zzwu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zwuy,Wuwz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Zwzu,Wywu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zywu,Wwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,i,iZyz,Wxzy->KWZ', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iZyz,Wxyz->KWZ', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iyzW,Zzxy->KWZ', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,i,iyzW,Zzyx->KWZ', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iZxy,Wy->KWZ', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iyxW,Zy->KWZ', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,Wy,izwy,Zwzx->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Wy,izwy,Zwxz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,yz,iwyW,Zzwx->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iwyW,Zzxw->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,Zy,iyzw,Wxwz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Zy,iyzw,Wxzw->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZwy,Wxwz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iZwy,Wxzw->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iZyw,Wxwz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZyw,Wxzw->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iywW,Zwzx->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iywW,Zwxz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Wy,izxy,Zz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Zy,iyxz,Wz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iZxy,Wz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iyxW,Zz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,iZyz,Wz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,izyW,Zz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuvwy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuvyw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuwvy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwuv,Wxuwyv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuyvw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,ywuv,Wxuwzv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,ywuv,Wxuzwv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iy,Wzwy,Zwzx->KWZ', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Wzwy,Zwxz->KWZ', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvuxy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvuyx->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvxuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvyux->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,zwuv,Zwvyxu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuvxy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuvyx->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuxvy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyvx->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyxv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuz,Zuxy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wwuz,Zuyx->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wuvw,Zzvuxy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvw,Zzvxuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuxy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuyx->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvxuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvyux->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvyxu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwvux->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwvxu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuvx->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuxv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwxvu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,zwyu,Wxwu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwyu,Wxuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Zzyw,Wxwz->KWZ', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iy,Zzyw,Wxzw->KWZ', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuvwx->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuvxw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuwvx->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,ywuv,Zzuwxv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuxvw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Zuvy,Wxvuzw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuvy,Wxvzuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyvuz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyvzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuvz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuzv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyzvu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuzv,Wxyvuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Zuzv,Wxyuvw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuvwz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuvzw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwvz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwzv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuzvw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,xwuz,Wwuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuz,Wwyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuy,Wwuz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,xwuy,Wwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywu,Wuzw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywz,Ww->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZxy,yzwu,Wwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Wzxy,Zz->KWZ', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Zzyx,Wz->KWZ', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzW,xzwu,Zwyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwuz,Zuwy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzW,xwuz,Zuyw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzW,xwyu,Zzuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwyu,Zzwu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wuxz,Zwuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wuxw,Zzuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuxw,Zzyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwxu,Zzuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wwxu,Zzyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wwxz,Zy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zuzx,Wyuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Zuwx,Wyuz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwx,Wyzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyux,Wuzw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Zyux,Wuwz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzx,Wwuz,Zuwy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwuz,Zuyw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwyu,Zzuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzx,Wwyu,Zzwu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwuy,Wuzw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzx,Zwuy,Wuwz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwzu,Wyuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzx,Zwzu,Wywu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxW,yzwu,Zwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wzwu,Zwyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wwuz,Zuwy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Wwyu,Zzwu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zwuy,Wuwz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Zwzu,Wywu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zywu,Wwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_caa__aaa:f_caa__aaa] -= sigma_caa.reshape(-1).copy()

        sigma_caa =- einsum('KiZ,iW->KWZ', X_abb, h_va, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzW,Zyzx->KWZ', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,Zyxz->KWZ', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyZz,Wxzy->KWZ', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyZz,Wxyz->KWZ', X_aaa, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,ixZy,Wy->KWZ', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,ixyW,Zy->KWZ', X_aaa, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ijx,iKjy,WxZy->KWZ', X_aaa, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ijx,iKjy,WxyZ->KWZ', X_aaa, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ijx,jKiy,WxZy->KWZ', X_aaa, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ijx,jKiy,WxyZ->KWZ', X_aaa, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ijx,iKjx,WZ->KWZ', X_aaa, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ijx,jKix,WZ->KWZ', X_aaa, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('KiZ,i,iW->KWZ', X_abb, e_val, t1_va, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iW,Zx->KWZ', X_abb, h_va, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,Wx,ix->KWZ', X_abb, h_aa, t1_va, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iWyz,Zzxy->KWZ', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,Zyzx->KWZ', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,Zyxz->KWZ', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,iWxy,yx->KWZ', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyW,xy->KWZ', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyZz,Wxzy->KWZ', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyZz,Wxyz->KWZ', X_abb, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iWyx,Zy->KWZ', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyZx,Wy->KWZ', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,ixZy,Wy->KWZ', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,ixyW,Zy->KWZ', X_abb, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ijx,iKjy,WxZy->KWZ', X_abb, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ijx,iKjy,WxyZ->KWZ', X_abb, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ijZ,iKjx,Wx->KWZ', X_abb, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ijx,iKjx,WZ->KWZ', X_abb, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ijx,jKiy,WxZy->KWZ', X_bab, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ijx,jKiy,WxyZ->KWZ', X_bab, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ijZ,jKix,Wx->KWZ', X_bab, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ijx,jKix,WZ->KWZ', X_bab, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,i,iZyz,Wxzy->KWZ', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iZyz,Wxyz->KWZ', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iyzW,Zzxy->KWZ', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,i,iyzW,Zzyx->KWZ', X_aaa, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iZxy,Wy->KWZ', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iyxW,Zy->KWZ', X_aaa, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,Wy,izwy,Zwzx->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Wy,izwy,Zwxz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,yz,iwyW,Zzwx->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iwyW,Zzxw->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,Zy,iyzw,Wxwz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Zy,iyzw,Wxzw->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZwy,Wxwz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iZwy,Wxzw->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iZyw,Wxwz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZyw,Wxzw->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iywW,Zwzx->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iywW,Zwxz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Wy,izxy,Zz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Zy,iyxz,Wz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iZxy,Wz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iyxW,Zz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,iZyz,Wz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,izyW,Zz->KWZ', X_aaa, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuvwy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuvyw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuwvy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwuv,Wxuwyv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuyvw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,ywuv,Wxuwzv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,ywuv,Wxuzwv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iy,Wzwy,Zwzx->KWZ', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Wzwy,Zwxz->KWZ', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvuxy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvuyx->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvxuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvyux->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,zwuv,Zwvyxu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuvxy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuvyx->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuxvy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyvx->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyxv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuz,Zuxy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wwuz,Zuyx->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wuvw,Zzvuxy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvw,Zzvxuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuxy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuyx->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvxuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvyux->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvyxu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwvux->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwvxu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuvx->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuxv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwxvu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,zwyu,Wxwu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwyu,Wxuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Zzyw,Wxwz->KWZ', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iy,Zzyw,Wxzw->KWZ', X_aaa, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuvwx->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuvxw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuwvx->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,ywuv,Zzuwxv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuxvw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Zuvy,Wxvuzw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuvy,Wxvzuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyvuz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyvzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuvz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuzv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyzvu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuzv,Wxyvuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Zuzv,Wxyuvw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuvwz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuvzw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwvz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwzv->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuzvw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,xwuz,Wwuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuz,Wwyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuy,Wwuz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iZyz,xwuy,Wwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywu,Wuzw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywz,Ww->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZxy,yzwu,Wwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Wzxy,Zz->KWZ', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Zzyx,Wz->KWZ', X_aaa, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzW,xzwu,Zwyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwuz,Zuwy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzW,xwuz,Zuyw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzW,xwyu,Zzuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwyu,Zzwu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wuxz,Zwuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wuxw,Zzuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuxw,Zzyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwxu,Zzuy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wwxu,Zzyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wwxz,Zy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zuzx,Wyuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Zuwx,Wyuz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwx,Wyzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyux,Wuzw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Zyux,Wuwz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzx,Wwuz,Zuwy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwuz,Zuyw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwyu,Zzuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzx,Wwyu,Zzwu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwuy,Wuzw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzx,Zwuy,Wuwz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwzu,Wyuw->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzx,Zwzu,Wywu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxW,yzwu,Zwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wzwu,Zwyu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wwuz,Zuwy->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Wwyu,Zzwu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zwuy,Wuwz->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Zwzu,Wywu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zywu,Wwzu->KWZ', X_aaa, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iW,Zx->KWZ', X_abb, e_val, t1_va, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iZyz,Wxzy->KWZ', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iZyz,Wxyz->KWZ', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('KiZ,i,ixWy,yx->KWZ', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,i,ixyW,yx->KWZ', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iyWz,Zzxy->KWZ', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iyzW,Zzxy->KWZ', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iyzW,Zzyx->KWZ', X_abb, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iZyx,Wy->KWZ', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iZxy,Wy->KWZ', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iyWx,Zy->KWZ', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iyxW,Zy->KWZ', X_abb, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Wy,izwy,Zwzx->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,Wy,izwy,Zwxz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,izyw,Zwxz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iwWy,Zzxw->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iwyW,Zzwx->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iwyW,Zzxw->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,Wx,iyzx,yz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,Wx,iyxz,yz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,xy,izWx,yz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,xy,izxW,yz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('KiZ,xy,ixWz,yz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,xy,ixzW,yz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,iy,Zx->KWZ', X_abb, h_aa, t1_va, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,Zy,iyzw,Wxwz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,Zy,iyzw,Wxzw->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iZwy,Wxwz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZwy,Wxzw->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iZyw,Wxwz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iZyw,Wxzw->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iyWw,Zwxz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iywW,Zwzx->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iywW,Zwxz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,izyx,Zz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Wy,izxy,Zz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Zy,iyzx,Wz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,Zy,iyxz,Wz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iZyx,Wz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iZxy,Wz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iyWx,Zz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iyxW,Zz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,iZzy,Wz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,iZyz,Wz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,izWy,Zz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,izyW,Zz->KWZ', X_abb, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwuv,Wxuwyv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuywv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,ywuv,Wxuwzv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,ywuv,Wxuzwv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Wzwy,Zwzx->KWZ', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Wzwy,Zwxz->KWZ', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Wyzw,Zzxw->KWZ', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,zwuv,Zwvxyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvxyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,zwuv,Zwvyxu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuxyv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyxv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuz,Zuxy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwuz,Zuyx->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvw,Zzvuxy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvw,Zzvxuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuyx->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvxyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuxv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwxuv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzuv,Zwuxyv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzuw,Zuxy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ix,Wyzx,zy->KWZ', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ix,Wxyz,yz->KWZ', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixWy,yzwu,xwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('KiZ,ixWy,xzwu,ywzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyW,yzwu,xwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,ixyW,xzwu,ywzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wzwu,xuyw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wzwy,xw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wwuz,xwuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wwuy,xwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,ixyz,Wwxu,yzwu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixyz,Wywu,xuzw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixyz,Wywz,xw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,zwyu,Wxwu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwyu,Wxuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Zzyw,Wxwz->KWZ', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Zzyw,Wxzw->KWZ', X_abb, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWz,ywuv,Zzuxwv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,ywuv,Zzuwxv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuxwv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuvy,Wxvuzw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuvy,Wxvzuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuzv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyzuv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuzv,Wxyvuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuzv,Wxyuvw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwzv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuzwv->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyz,xzwu,Wuyw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyz,xzwy,Ww->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuz,Wwuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,xwuz,Wwyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,xwuy,Wwuz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,xwuy,Wwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywu,Wuzw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZyz,xywz,Ww->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyx,yzwu,Wwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iZxy,yzwu,Wwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Wzxy,Zz->KWZ', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Wyxz,Zz->KWZ', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Zzyx,Wz->KWZ', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Zxyz,Wz->KWZ', X_abb, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,xzwu,Zwyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,xwuz,Zuwy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWz,xwyu,Zzwu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWx,yzwu,Zwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzW,xzwu,Zwyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwuz,Zuwy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwuz,Zuyw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwyu,Zzuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwyu,Zzwu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wuxz,Zwuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuxw,Zzuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuxw,Zzyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzxu,Zwuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzxw,Zy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwxu,Zzuy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wwxu,Zzyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Wwxz,Zy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zuzx,Wyuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuwx,Wyuz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwx,Wyzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyux,Wuzw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zyux,Wuwz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zxuy,Wuzw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Zxzu,Wyuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Zxwu,Wyzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzx,Wzwu,Zwyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwuz,Zuwy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwuz,Zuyw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwyu,Zzuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwyu,Zzwu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwuy,Wuzw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwuy,Wuwz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwzu,Wyuw->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwzu,Wywu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzx,Zywu,Wwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxW,yzwu,Zwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wzwu,Zwyu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Wwuz,Zuwy->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Wwyu,Zzwu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zwuy,Wuwz->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyxz,Zwzu,Wywu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyxz,Zywu,Wwzu->KWZ', X_abb, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_caa__abb:f_caa__abb] -= sigma_caa.reshape(-1).copy()

        sigma_caa =- einsum('KiZ,iW->KWZ', X_bab, h_va, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('ijx,jKiy,WxZy->KWZ', X_abb, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('ijx,jKiy,WxyZ->KWZ', X_abb, v_vxxa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('ijZ,jKix,Wx->KWZ', X_abb, v_vxxa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('KiZ,i,iW->KWZ', X_bab, e_val, t1_va, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iW,Zx->KWZ', X_bab, h_va, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,Wx,ix->KWZ', X_bab, h_aa, t1_va, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iWyz,Zzxy->KWZ', X_bab, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,Zyzx->KWZ', X_bab, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzW,Zyxz->KWZ', X_bab, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,iWxy,yx->KWZ', X_bab, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyW,xy->KWZ', X_bab, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyZz,Wxzy->KWZ', X_bab, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyZz,Wxyz->KWZ', X_bab, v_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iWyx,Zy->KWZ', X_bab, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyZx,Wy->KWZ', X_bab, v_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('ijx,iKjy,WxZy->KWZ', X_bab, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('ijx,iKjy,WxyZ->KWZ', X_bab, v_xxva, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('ijZ,iKjx,Wx->KWZ', X_bab, v_xxva, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iW,Zx->KWZ', X_bab, e_val, t1_va, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,i,iZyz,Wxzy->KWZ', X_bab, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,i,iZyz,Wxyz->KWZ', X_bab, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('KiZ,i,ixWy,yx->KWZ', X_bab, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,i,ixyW,yx->KWZ', X_bab, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iyWz,Zzxy->KWZ', X_bab, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,i,iyzW,Zzxy->KWZ', X_bab, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,i,iyzW,Zzyx->KWZ', X_bab, e_val, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,i,iZyx,Wy->KWZ', X_bab, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,i,iyWx,Zy->KWZ', X_bab, e_val, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,Wy,izwy,Zwzx->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,Wy,izwy,Zwxz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,izyw,Zwxz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,yz,iwWy,Zzxw->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,yz,iwyW,Zzwx->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,yz,iwyW,Zzxw->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,Wx,iyzx,yz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,Wx,iyxz,yz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,xy,izWx,yz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,xy,izxW,yz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += einsum('KiZ,xy,ixWz,yz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,xy,ixzW,yz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,iy,Zx->KWZ', X_bab, h_aa, t1_va, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,Zy,iyzw,Wxwz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,Zy,iyzw,Wxzw->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,yz,iZwy,Wxwz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iZwy,Wxzw->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iZyw,Wxwz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,yz,iZyw,Wxzw->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iyWw,Zwxz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,yz,iywW,Zwzx->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,yz,iywW,Zwxz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Wy,izyx,Zz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,Zy,iyzx,Wz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iZyx,Wz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,yz,iyWx,Zz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,xy,iZzy,Wz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,xy,izWy,Zz->KWZ', X_bab, h_aa, t1_vaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwuv,Wxuwyv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iZyz,zwuv,Wxuywv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,ywuv,Wxuvwz->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,ywuv,Wxuvzw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,ywuv,Wxuwvz->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,ywuv,Wxuwzv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iZyz,ywuv,Wxuzvw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iy,Wzwy,Zwzx->KWZ', X_bab, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iy,Wzwy,Zwxz->KWZ', X_bab, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Wyzw,Zzxw->KWZ', X_bab, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,zwuv,Zwvxyu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzW,zwuv,Zwvxyu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,zwuv,Zwvyxu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Wwuv,Zzuxyv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuv,Zzuyxv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Wwuz,Zuxy->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwuz,Zuyx->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvw,Zzvuyx->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvw,Zzvxuy->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvw,Zzvxyu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvw,Zzvyux->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuvw,Zzvyxu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuvz,Zwvuyx->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Wuvz,Zwvxyu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Wuyv,Zzwuxv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Wuyv,Zzwxuv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzuv,Zwuxyv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzuw,Zuxy->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ix,Wyzx,zy->KWZ', X_bab, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ix,Wxyz,yz->KWZ', X_bab, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixWy,yzwu,xwzu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += einsum('KiZ,ixWy,xzwu,ywzu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyW,yzwu,xwzu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,ixyW,xzwu,ywzu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wzwu,xuyw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wzwy,xw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wwuz,xwuy->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('KiZ,ixyz,Wwuy,xwzu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('KiZ,ixyz,Wwxu,yzwu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixyz,Wywu,xuzw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= einsum('KiZ,ixyz,Wywz,xw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,zwyu,Wxwu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iZyz,zwyu,Wxuw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iy,Zzyw,Wxwz->KWZ', X_bab, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iy,Zzyw,Wxzw->KWZ', X_bab, t1_va, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWz,ywuv,Zzuxwv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,ywuv,Zzuwxv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzW,ywuv,Zzuxwv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuvy,Wxvwuz->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuvy,Wxvwzu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuvy,Wxvuwz->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuvy,Wxvzwu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuvy,Wxvzuw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwv,Wxyuzv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Zuwv,Wxyzuv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuzv,Wxyvwu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuzv,Wxyvuw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuzv,Wxywvu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuzv,Wxywuv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zuzv,Wxyuwv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyuv,Wxuwzv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Zyuv,Wxuzwv->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyz,xzwu,Wuyw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyz,xzwy,Ww->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,xwuz,Wwuy->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iZyz,xwuz,Wwyu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iZyz,xwuy,Wwuz->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iZyz,xwuy,Wwzu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iZyx,yzwu,Wwzu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iy,Wyxz,Zz->KWZ', X_bab, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iy,Zxyz,Wz->KWZ', X_bab, t1_va, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,xzwu,Zwyu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyWz,xwuz,Zuwy->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWz,xwyu,Zzwu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyWx,yzwu,Zwzu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzW,xwuz,Zuwy->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzW,xwuz,Zuyw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzW,xwyu,Zzuw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzW,xwyu,Zzwu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wuxw,Zzuy->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Wuxw,Zzyu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzxu,Zwuy->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Wzxw,Zy->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Wwxu,Zzuy->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Wwxu,Zzyu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzw,Zuwx,Wyuz->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzw,Zuwx,Wyzu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzw,Zyux,Wuzw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzw,Zyux,Wuwz->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzw,Zxuy,Wuzw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Zxzu,Wyuw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/2 * einsum('Kix,iyzw,Zxwu,Wyzu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzx,Wzwu,Zwyu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Wwuz,Zuwy->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzx,Wwuz,Zuyw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzx,Wwyu,Zzuw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Wwyu,Zzwu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/3 * einsum('Kix,iyzx,Zwuy,Wuzw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa -= 1/6 * einsum('Kix,iyzx,Zwuy,Wuwz->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/3 * einsum('Kix,iyzx,Zwzu,Wyuw->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/6 * einsum('Kix,iyzx,Zwzu,Wywu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_caa += 1/2 * einsum('Kix,iyzx,Zywu,Wwzu->KWZ', X_bab, t1_vaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_caa__bab:f_caa__bab] -= sigma_caa.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CAA-CVA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCE_CVA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Two-electron integrals
        v_xvae = mr_adc.v2e.xvae
        v_vaex = mr_adc.v2e.vaex

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cce  = einsum('Kix,LixB->KLB', X_aaa, v_xvae, optimize = einsum_type)
        sigma_cce -= einsum('Kix,ixBL->KLB', X_aaa, v_vaex, optimize = einsum_type)
        sigma_cce -= einsum('Lix,KixB->KLB', X_aaa, v_xvae, optimize = einsum_type)
        sigma_cce += einsum('Lix,ixBK->KLB', X_aaa, v_vaex, optimize = einsum_type)
        sigma_cce -= einsum('Kix,ixBL->KLB', X_abb, v_vaex, optimize = einsum_type)
        sigma_cce += einsum('Lix,ixBK->KLB', X_abb, v_vaex, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kix,LiyB,xy->KLB', X_aaa, v_xvae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kix,iyBL,xy->KLB', X_aaa, v_vaex, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lix,KiyB,xy->KLB', X_aaa, v_xvae, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lix,iyBK,xy->KLB', X_aaa, v_vaex, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kix,iyBL,xy->KLB', X_abb, v_vaex, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Lix,iyBK,xy->KLB', X_abb, v_vaex, rdm_ca, optimize = einsum_type)
        sigma[s_cce__aaa:f_cce__aaa] += sigma_cce[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cce =- einsum('Kix,ixBL->KLB', X_aaa, v_vaex, optimize = einsum_type)
        sigma_cce += einsum('Kix,LixB->KLB', X_abb, v_xvae, optimize = einsum_type)
        sigma_cce -= einsum('Kix,ixBL->KLB', X_abb, v_vaex, optimize = einsum_type)
        sigma_cce -= einsum('Lix,KixB->KLB', X_bab, v_xvae, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kix,iyBL,xy->KLB', X_aaa, v_vaex, rdm_ca, optimize = einsum_type)
        sigma_cce -= 1/2 * einsum('Kix,LiyB,xy->KLB', X_abb, v_xvae, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Kix,iyBL,xy->KLB', X_abb, v_vaex, rdm_ca, optimize = einsum_type)
        sigma_cce += 1/2 * einsum('Lix,KiyB,xy->KLB', X_bab, v_xvae, rdm_ca, optimize = einsum_type)
        sigma[s_cce__abb:f_cce__abb] += sigma_cce.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CCE-CVA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CAE_CVA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Two-electron integrals
        v_vaea = mr_adc.v2e.vaea

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        sigma_cae  = 1/6 * einsum('Kix,iyBz,Zxzy->KZB', X_aaa, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kix,iyBz,Zxyz->KZB', X_aaa, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kix,iyBx,Zy->KZB', X_aaa, v_vaea, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kix,ixBy,Zy->KZB', X_aaa, v_vaea, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/3 * einsum('Kix,iyBz,Zxzy->KZB', X_abb, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kix,iyBz,Zxyz->KZB', X_abb, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kix,ixBy,Zy->KZB', X_abb, v_vaea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__aaa:f_cae__aaa] += sigma_cae.reshape(-1).copy()

        sigma_cae  = 1/3 * einsum('Kix,iyBz,Zxzy->KZB', X_aaa, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kix,iyBz,Zxyz->KZB', X_aaa, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kix,ixBy,Zy->KZB', X_aaa, v_vaea, rdm_ca, optimize = einsum_type)
        sigma_cae += 1/6 * einsum('Kix,iyBz,Zxzy->KZB', X_abb, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/6 * einsum('Kix,iyBz,Zxyz->KZB', X_abb, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kix,iyBx,Zy->KZB', X_abb, v_vaea, rdm_ca, optimize = einsum_type)
        sigma_cae -= 1/2 * einsum('Kix,ixBy,Zy->KZB', X_abb, v_vaea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__abb:f_cae__abb] += sigma_cae.reshape(-1).copy()

        sigma_cae =- 1/6 * einsum('Kix,iyBz,Zxzy->KZB', X_bab, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae -= 1/3 * einsum('Kix,iyBz,Zxyz->KZB', X_bab, v_vaea, rdm_ccaa, optimize = einsum_type)
        sigma_cae += 1/2 * einsum('Kix,iyBx,Zy->KZB', X_bab, v_vaea, rdm_ca, optimize = einsum_type)
        sigma[s_cae__bab:f_cae__bab] += sigma_cae.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CAE-CVA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CCA_CVA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        ## Two-electron integrals
        v_xxxv = mr_adc.v2e.xxxv
        v_xvxx = mr_adc.v2e.xvxx

        v_xvaa = mr_adc.v2e.xvaa
        v_xaav = mr_adc.v2e.xaav

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        sigma_cca =- einsum('Kix,LWxi->KLW', X_aaa, v_xaav, optimize = einsum_type)
        sigma_cca += einsum('Kix,LixW->KLW', X_aaa, v_xvaa, optimize = einsum_type)
        sigma_cca += einsum('Lix,KWxi->KLW', X_aaa, v_xaav, optimize = einsum_type)
        sigma_cca -= einsum('Lix,KixW->KLW', X_aaa, v_xvaa, optimize = einsum_type)
        sigma_cca -= einsum('ijW,KiLj->KLW', X_aaa, v_xxxv, optimize = einsum_type)
        sigma_cca += einsum('ijW,KjLi->KLW', X_aaa, v_xvxx, optimize = einsum_type)
        sigma_cca -= einsum('Kix,LWxi->KLW', X_abb, v_xaav, optimize = einsum_type)
        sigma_cca += einsum('Lix,KWxi->KLW', X_abb, v_xaav, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,LWyi,xy->KLW', X_aaa, v_xaav, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kix,LiyW,xy->KLW', X_aaa, v_xvaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kix,Liyz,Wyxz->KLW', X_aaa, v_xvaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_aaa, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kix,Lyzi,Wzyx->KLW', X_aaa, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kix,Lixy,Wy->KLW', X_aaa, v_xvaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_aaa, v_xaav, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lix,KWyi,xy->KLW', X_aaa, v_xaav, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lix,KiyW,xy->KLW', X_aaa, v_xvaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lix,Kiyz,Wyxz->KLW', X_aaa, v_xvaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lix,Kyzi,Wzxy->KLW', X_aaa, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lix,Kyzi,Wzyx->KLW', X_aaa, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lix,Kixy,Wy->KLW', X_aaa, v_xvaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lix,Kyxi,Wy->KLW', X_aaa, v_xaav, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('ijx,KjLi,Wx->KLW', X_aaa, v_xvxx, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('ijx,KiLj,Wx->KLW', X_aaa, v_xxxv, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,LWyi,xy->KLW', X_abb, v_xaav, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_abb, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kix,Lyzi,Wzyx->KLW', X_abb, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_abb, v_xaav, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lix,KWyi,xy->KLW', X_abb, v_xaav, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Lix,Kyzi,Wzxy->KLW', X_abb, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/3 * einsum('Lix,Kyzi,Wzyx->KLW', X_abb, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lix,Kyxi,Wy->KLW', X_abb, v_xaav, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,Liyz,yz,Wx->KLW', X_aaa, v_xvaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/4 * einsum('Kix,Lyzi,zy,Wx->KLW', X_aaa, v_xaav, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lix,Kiyz,yz,Wx->KLW', X_aaa, v_xvaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/4 * einsum('Lix,Kyzi,zy,Wx->KLW', X_aaa, v_xaav, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cca__aaa:f_cca__aaa] += sigma_cca[cvs_tril_ind[0], cvs_tril_ind[1]].reshape(-1).copy()

        sigma_cca =- einsum('Kix,LWxi->KLW', X_aaa, v_xaav, optimize = einsum_type)
        sigma_cca -= einsum('Kix,LWxi->KLW', X_abb, v_xaav, optimize = einsum_type)
        sigma_cca += einsum('Kix,LixW->KLW', X_abb, v_xvaa, optimize = einsum_type)
        sigma_cca -= einsum('ijW,KiLj->KLW', X_abb, v_xxxv, optimize = einsum_type)
        sigma_cca -= einsum('Lix,KixW->KLW', X_bab, v_xvaa, optimize = einsum_type)
        sigma_cca += einsum('ijW,KjLi->KLW', X_bab, v_xvxx, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,LWyi,xy->KLW', X_aaa, v_xaav, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_aaa, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Kix,Lyzi,Wzyx->KLW', X_aaa, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_aaa, v_xaav, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,LWyi,xy->KLW', X_abb, v_xaav, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kix,LiyW,xy->KLW', X_abb, v_xvaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kix,Liyz,Wyxz->KLW', X_abb, v_xvaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_abb, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Kix,Lyzi,Wzyx->KLW', X_abb, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Kix,Lixy,Wy->KLW', X_abb, v_xvaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_abb, v_xaav, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('ijx,KiLj,Wx->KLW', X_abb, v_xxxv, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lix,KiyW,xy->KLW', X_bab, v_xvaa, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lix,Kiyz,Wyxz->KLW', X_bab, v_xvaa, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/3 * einsum('Lix,Kyzi,Wzxy->KLW', X_bab, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca -= 1/6 * einsum('Lix,Kyzi,Wzyx->KLW', X_bab, v_xaav, rdm_ccaa, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Lix,Kixy,Wy->KLW', X_bab, v_xvaa, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('ijx,KjLi,Wx->KLW', X_bab, v_xvxx, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/2 * einsum('Kix,Liyz,yz,Wx->KLW', X_abb, v_xvaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/4 * einsum('Kix,Lyzi,zy,Wx->KLW', X_abb, v_xaav, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cca -= 1/2 * einsum('Lix,Kiyz,yz,Wx->KLW', X_bab, v_xvaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cca += 1/4 * einsum('Lix,Kyzi,zy,Wx->KLW', X_bab, v_xaav, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cca__abb:f_cca__abb] += sigma_cca.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CCA-CVA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVE_CVA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Molecular Orbitals Energies
        e_extern = mr_adc.mo_energy.e

        ## One-electron integrals
        h_aa = mr_adc.h1eff.aa
        h_ae = mr_adc.h1eff.ae

        ## Two-electron integrals
        v_aaaa = mr_adc.v2e.aaaa

        v_xxae = mr_adc.v2e.xxae
        v_vvae = mr_adc.v2e.vvae

        v_xaex = mr_adc.v2e.xaex
        v_vaev = mr_adc.v2e.vaev

        v_aaae = mr_adc.v2e.aaae

        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        sigma_cve =- einsum('KLx,xB->KLB', X_aaa, h_ae, optimize = einsum_type)
        sigma_cve += einsum('Kix,LixB->KLB', X_aaa, v_vvae, optimize = einsum_type)
        sigma_cve -= einsum('Kix,ixBL->KLB', X_aaa, v_vaev, optimize = einsum_type)
        sigma_cve += einsum('iLx,KixB->KLB', X_aaa, v_xxae, optimize = einsum_type)
        sigma_cve -= einsum('iLx,ixBK->KLB', X_aaa, v_xaex, optimize = einsum_type)
        sigma_cve -= einsum('Kix,ixBL->KLB', X_abb, v_vaev, optimize = einsum_type)
        sigma_cve -= einsum('iLx,ixBK->KLB', X_bab, v_xaex, optimize = einsum_type)
        sigma_cve -= einsum('KLx,B,xB->KLB', X_aaa, e_extern, t1_ae, optimize = einsum_type)
        sigma_cve += einsum('KLx,xy,yB->KLB', X_aaa, h_aa, t1_ae, optimize = einsum_type)
        sigma_cve -= einsum('KLx,yzxB,zy->KLB', X_aaa, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,xyzB,yz->KLB', X_aaa, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kix,LiyB,xy->KLB', X_aaa, v_vvae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kix,iyBL,xy->KLB', X_aaa, v_vaev, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('iLx,KiyB,xy->KLB', X_aaa, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('iLx,iyBK,xy->KLB', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kix,iyBL,xy->KLB', X_abb, v_vaev, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('iLx,iyBK,xy->KLB', X_bab, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KLx,B,yxzB,zy->KLB', X_aaa, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,B,xyzB,zy->KLB', X_aaa, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KLx,yz,wxyB,zw->KLB', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KLx,yz,yxwB,zw->KLB', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,yz,xwyB,zw->KLB', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yz,xywB,zw->KLB', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KLx,xy,zywB,wz->KLB', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,xy,yzwB,wz->KLB', X_aaa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yB,xzwy,wz->KLB', X_aaa, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KLx,yB,xyzw,zw->KLB', X_aaa, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yzwB,xuvz,wuyv->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yzwB,xuvy,wuvz->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,yzwB,xuwv,zyuv->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KLx,yzwB,xzuv,wvyu->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KLx,yzwB,xzuy,wu->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yzwB,xyuv,wvzu->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yzwB,xyuz,wu->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KLx,yxzB,zwuv,yuwv->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KLx,yxzB,ywuv,zuwv->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,xyzB,zwuv,yuwv->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,xyzB,ywuv,zuwv->KLB', X_aaa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cve__aaa:f_cve__aaa] += sigma_cve.reshape(-1).copy()

        sigma_cve =- einsum('Kix,ixBL->KLB', X_aaa, v_vaev, optimize = einsum_type)
        sigma_cve -= einsum('KLx,xB->KLB', X_abb, h_ae, optimize = einsum_type)
        sigma_cve += einsum('Kix,LixB->KLB', X_abb, v_vvae, optimize = einsum_type)
        sigma_cve -= einsum('Kix,ixBL->KLB', X_abb, v_vaev, optimize = einsum_type)
        sigma_cve += einsum('iLx,KixB->KLB', X_abb, v_xxae, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kix,iyBL,xy->KLB', X_aaa, v_vaev, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KLx,B,xB->KLB', X_abb, e_extern, t1_ae, optimize = einsum_type)
        sigma_cve += einsum('KLx,xy,yB->KLB', X_abb, h_aa, t1_ae, optimize = einsum_type)
        sigma_cve -= einsum('KLx,yzxB,zy->KLB', X_abb, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,xyzB,yz->KLB', X_abb, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kix,LiyB,xy->KLB', X_abb, v_vvae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('Kix,iyBL,xy->KLB', X_abb, v_vaev, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('iLx,KiyB,xy->KLB', X_abb, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KLx,B,yxzB,zy->KLB', X_abb, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,B,xyzB,zy->KLB', X_abb, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KLx,yz,wxyB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KLx,yz,yxwB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,yz,xwyB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yz,xywB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KLx,xy,zywB,wz->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,xy,yzwB,wz->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yB,xzwy,wz->KLB', X_abb, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KLx,yB,xyzw,zw->KLB', X_abb, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yzwB,xuvz,wuyv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yzwB,xuvy,wuvz->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,yzwB,xuwv,zyuv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KLx,yzwB,xzuv,wvyu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KLx,yzwB,xzuy,wu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yzwB,xyuv,wvzu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yzwB,xyuz,wu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KLx,yxzB,zwuv,yuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KLx,yxzB,ywuv,zuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,xyzB,zwuv,yuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,xyzB,ywuv,zuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cve__abb:f_cve__abb] += sigma_cve.reshape(-1).copy()

        sigma_cve =- einsum('iLx,ixBK->KLB', X_aaa, v_xaex, optimize = einsum_type)
        sigma_cve -= einsum('KLx,xB->KLB', X_bab, h_ae, optimize = einsum_type)
        sigma_cve += einsum('Kix,LixB->KLB', X_bab, v_vvae, optimize = einsum_type)
        sigma_cve += einsum('iLx,KixB->KLB', X_bab, v_xxae, optimize = einsum_type)
        sigma_cve -= einsum('iLx,ixBK->KLB', X_bab, v_xaex, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('iLx,iyBK,xy->KLB', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KLx,B,xB->KLB', X_bab, e_extern, t1_ae, optimize = einsum_type)
        sigma_cve += einsum('KLx,xy,yB->KLB', X_bab, h_aa, t1_ae, optimize = einsum_type)
        sigma_cve -= einsum('KLx,yzxB,zy->KLB', X_bab, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,xyzB,yz->KLB', X_bab, v_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('Kix,LiyB,xy->KLB', X_bab, v_vvae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('iLx,KiyB,xy->KLB', X_bab, v_xxae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('iLx,iyBK,xy->KLB', X_bab, v_xaex, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KLx,B,yxzB,zy->KLB', X_bab, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,B,xyzB,zy->KLB', X_bab, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KLx,yz,wxyB,zw->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KLx,yz,yxwB,zw->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,yz,xwyB,zw->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yz,xywB,zw->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KLx,xy,zywB,wz->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,xy,yzwB,wz->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yB,xzwy,wz->KLB', X_bab, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve += einsum('KLx,yB,xyzw,zw->KLB', X_bab, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yzwB,xuvz,wuyv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yzwB,xuvy,wuvz->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,yzwB,xuwv,zyuv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KLx,yzwB,xzuv,wvyu->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KLx,yzwB,xzuy,wu->KLB', X_bab, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yzwB,xyuv,wvzu->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,yzwB,xyuz,wu->KLB', X_bab, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
        sigma_cve -= einsum('KLx,yxzB,zwuv,yuwv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += einsum('KLx,yxzB,ywuv,zuwv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve += 1/2 * einsum('KLx,xyzB,zwuv,yuwv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma_cve -= 1/2 * einsum('KLx,xyzB,ywuv,zuwv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
        sigma[s_cve__bab:f_cve__bab] += sigma_cve.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CVE-CVA", *cput1)

    def compute_sigma_vector__H1__h1_h1__CVA_CVA(mr_adc, X_aaa, X_abb, X_bab, sigma):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        ## Two-electron integrals
        v_xxvv = mr_adc.v2e.xxvv
        v_xvvx = mr_adc.v2e.xvvx

        v_xxaa = mr_adc.v2e.xxaa
        v_vvaa = mr_adc.v2e.vvaa

        v_xaax = mr_adc.v2e.xaax
        v_vaav = mr_adc.v2e.vaav

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        sigma_cva =- einsum('Kix,LWxi->KLW', X_aaa, v_vaav, optimize = einsum_type)
        sigma_cva += einsum('Kix,LixW->KLW', X_aaa, v_vvaa, optimize = einsum_type)
        sigma_cva -= einsum('ijW,KiLj->KLW', X_aaa, v_xxvv, optimize = einsum_type)
        sigma_cva += einsum('ijW,KjLi->KLW', X_aaa, v_xvvx, optimize = einsum_type)
        sigma_cva -= einsum('iLx,KWxi->KLW', X_aaa, v_xaax, optimize = einsum_type)
        sigma_cva += einsum('iLx,KixW->KLW', X_aaa, v_xxaa, optimize = einsum_type)
        sigma_cva -= einsum('Kix,LWxi->KLW', X_abb, v_vaav, optimize = einsum_type)
        sigma_cva -= einsum('iLx,KWxi->KLW', X_bab, v_xaax, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,LWyi,xy->KLW', X_aaa, v_vaav, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,LiyW,xy->KLW', X_aaa, v_vvaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,Liyz,Wyxz->KLW', X_aaa, v_vvaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_aaa, v_vaav, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kix,Lyzi,Wzyx->KLW', X_aaa, v_vaav, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,Lixy,Wy->KLW', X_aaa, v_vvaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_aaa, v_vaav, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLx,KWyi,xy->KLW', X_aaa, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iLx,KiyW,xy->KLW', X_aaa, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iLx,Kiyz,Wyxz->KLW', X_aaa, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('iLx,Kyzi,Wzxy->KLW', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('iLx,Kyzi,Wzyx->KLW', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iLx,Kixy,Wy->KLW', X_aaa, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLx,Kyxi,Wy->KLW', X_aaa, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('ijx,KjLi,Wx->KLW', X_aaa, v_xvvx, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('ijx,KiLj,Wx->KLW', X_aaa, v_xxvv, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,LWyi,xy->KLW', X_abb, v_vaav, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_abb, v_vaav, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kix,Lyzi,Wzyx->KLW', X_abb, v_vaav, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_abb, v_vaav, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLx,KWyi,xy->KLW', X_bab, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('iLx,Kyzi,Wzxy->KLW', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('iLx,Kyzi,Wzyx->KLW', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLx,Kyxi,Wy->KLW', X_bab, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Liyz,yz,Wx->KLW', X_aaa, v_vvaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/4 * einsum('Kix,Lyzi,zy,Wx->KLW', X_aaa, v_vaav, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLx,Kiyz,yz,Wx->KLW', X_aaa, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/4 * einsum('iLx,Kyzi,zy,Wx->KLW', X_aaa, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cva__aaa:f_cva__aaa] += sigma_cva.reshape(-1).copy()

        sigma_cva =- einsum('Kix,LWxi->KLW', X_aaa, v_vaav, optimize = einsum_type)
        sigma_cva -= einsum('Kix,LWxi->KLW', X_abb, v_vaav, optimize = einsum_type)
        sigma_cva += einsum('Kix,LixW->KLW', X_abb, v_vvaa, optimize = einsum_type)
        sigma_cva -= einsum('ijW,KiLj->KLW', X_abb, v_xxvv, optimize = einsum_type)
        sigma_cva += einsum('iLx,KixW->KLW', X_abb, v_xxaa, optimize = einsum_type)
        sigma_cva += einsum('ijW,KjLi->KLW', X_bab, v_xvvx, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,LWyi,xy->KLW', X_aaa, v_vaav, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_aaa, v_vaav, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('Kix,Lyzi,Wzyx->KLW', X_aaa, v_vaav, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_aaa, v_vaav, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,LWyi,xy->KLW', X_abb, v_vaav, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,LiyW,xy->KLW', X_abb, v_vvaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,Liyz,Wyxz->KLW', X_abb, v_vvaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kix,Lyzi,Wzxy->KLW', X_abb, v_vaav, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('Kix,Lyzi,Wzyx->KLW', X_abb, v_vaav, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,Lixy,Wy->KLW', X_abb, v_vvaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Lyxi,Wy->KLW', X_abb, v_vaav, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iLx,KiyW,xy->KLW', X_abb, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iLx,Kiyz,Wyxz->KLW', X_abb, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('iLx,Kyzi,Wzxy->KLW', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('iLx,Kyzi,Wzyx->KLW', X_abb, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iLx,Kixy,Wy->KLW', X_abb, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('ijx,KiLj,Wx->KLW', X_abb, v_xxvv, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('ijx,KjLi,Wx->KLW', X_bab, v_xvvx, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Liyz,yz,Wx->KLW', X_abb, v_vvaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/4 * einsum('Kix,Lyzi,zy,Wx->KLW', X_abb, v_vaav, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLx,Kiyz,yz,Wx->KLW', X_abb, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/4 * einsum('iLx,Kyzi,zy,Wx->KLW', X_abb, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cva__abb:f_cva__abb] += sigma_cva.reshape(-1).copy()

        sigma_cva =- einsum('iLx,KWxi->KLW', X_aaa, v_xaax, optimize = einsum_type)
        sigma_cva += einsum('ijW,KjLi->KLW', X_abb, v_xvvx, optimize = einsum_type)
        sigma_cva += einsum('Kix,LixW->KLW', X_bab, v_vvaa, optimize = einsum_type)
        sigma_cva -= einsum('ijW,KiLj->KLW', X_bab, v_xxvv, optimize = einsum_type)
        sigma_cva -= einsum('iLx,KWxi->KLW', X_bab, v_xaax, optimize = einsum_type)
        sigma_cva += einsum('iLx,KixW->KLW', X_bab, v_xxaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLx,KWyi,xy->KLW', X_aaa, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('iLx,Kyzi,Wzxy->KLW', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/3 * einsum('iLx,Kyzi,Wzyx->KLW', X_aaa, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLx,Kyxi,Wy->KLW', X_aaa, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('ijx,KjLi,Wx->KLW', X_abb, v_xvvx, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,LiyW,xy->KLW', X_bab, v_vvaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,Liyz,Wyxz->KLW', X_bab, v_vvaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/3 * einsum('Kix,Lyzi,Wzxy->KLW', X_bab, v_vaav, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('Kix,Lyzi,Wzyx->KLW', X_bab, v_vaav, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('Kix,Lixy,Wy->KLW', X_bab, v_vvaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLx,KWyi,xy->KLW', X_bab, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iLx,KiyW,xy->KLW', X_bab, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iLx,Kiyz,Wyxz->KLW', X_bab, v_xxaa, rdm_ccaa, optimize = einsum_type)
        sigma_cva += 1/6 * einsum('iLx,Kyzi,Wzxy->KLW', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/6 * einsum('iLx,Kyzi,Wzyx->KLW', X_bab, v_xaax, rdm_ccaa, optimize = einsum_type)
        sigma_cva -= 1/2 * einsum('iLx,Kixy,Wy->KLW', X_bab, v_xxaa, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLx,Kyxi,Wy->KLW', X_bab, v_xaax, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('ijx,KiLj,Wx->KLW', X_bab, v_xxvv, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('Kix,Liyz,yz,Wx->KLW', X_bab, v_vvaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/4 * einsum('Kix,Lyzi,zy,Wx->KLW', X_bab, v_vaav, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cva += 1/2 * einsum('iLx,Kiyz,yz,Wx->KLW', X_bab, v_xxaa, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma_cva -= 1/4 * einsum('iLx,Kyzi,zy,Wx->KLW', X_bab, v_xaax, rdm_ca, rdm_ca, optimize = einsum_type)
        sigma[s_cva__bab:f_cva__bab] += sigma_cva.reshape(-1).copy()

        mr_adc.log.timer_debug("computing sigma H1 h1-h1 CVA-CVA", *cput1)

    # Compute sigma vector blocks
    ## (CASCI + C) -> (CASCI + C)
    sigma = np.zeros_like(Xt)

    ## h0-h0 contributions
    sigma[:mr_adc.h0.dim] = np.dot(M_00, Xt[:mr_adc.h0.dim])

    ## h0-h1 and h1-h0 contributions
    ### Excitation Manifolds
    s_c = mr_adc.h0.s_c
    f_c = mr_adc.h0.f_c

    s_caa = mr_adc.h1.s_caa
    f_caa = mr_adc.h1.f_caa
    s_cce = mr_adc.h1.s_cce
    f_cce = mr_adc.h1.f_cce
    s_cae = mr_adc.h1.s_cae
    f_cae = mr_adc.h1.f_cae
    s_cca = mr_adc.h1.s_cca
    f_cca = mr_adc.h1.f_cca

    ### C <-> CAA
    sigma[s_c:f_c] += np.dot(M_01_c_caa, Xt[s_caa:f_caa])
    sigma[s_caa:f_caa] += np.dot(M_01_c_caa.T, Xt[s_c:f_c])

    ### C <-> CCE
    sigma[s_c:f_c] += np.dot(M_01_c_cce, Xt[s_cce:f_cce])
    sigma[s_cce:f_cce] += np.dot(M_01_c_cce.T, Xt[s_c:f_c])

    ### C <-> CAE
    sigma[s_c:f_c] += np.dot(M_01_c_cae, Xt[s_cae:f_cae])
    sigma[s_cae:f_cae] += np.dot(M_01_c_cae.T, Xt[s_c:f_c])

    ### C <-> CCA
    sigma[s_c:f_c] += np.dot(M_01_c_cca, Xt[s_cca:f_cca])
    sigma[s_cca:f_cca] += np.dot(M_01_c_cca.T, Xt[s_c:f_c])

    if nval > 0:
        # Excitation Manifolds
        s_cve = mr_adc.h1.s_cve
        f_cve = mr_adc.h1.f_cve

        s_cva = mr_adc.h1.s_cva
        f_cva = mr_adc.h1.f_cva

        # Matrix Blocks
        M_01_c_cve = mr_adc.M_01.c_cve
        M_01_c_cva = mr_adc.M_01.c_cva

        ### C <-> CVE
        sigma[s_c:f_c] += np.dot(M_01_c_cve, Xt[s_cve:f_cve])
        sigma[s_cve:f_cve] += np.dot(M_01_c_cve.T, Xt[s_c:f_c])

        ### C <-> CVA
        sigma[s_c:f_c] += np.dot(M_01_c_cva, Xt[s_cva:f_cva])
        sigma[s_cva:f_cva] += np.dot(M_01_c_cva.T, Xt[s_c:f_c])

    ## h1-h1 contributions
    ### Excitation Manifolds
    s_caa__aaa = mr_adc.h1.s_caa__aaa
    f_caa__aaa = mr_adc.h1.f_caa__aaa
    s_caa__abb = mr_adc.h1.s_caa__abb
    f_caa__abb = mr_adc.h1.f_caa__abb
    s_caa__bab = mr_adc.h1.s_caa__bab
    f_caa__bab = mr_adc.h1.f_caa__bab

    s_cce__aaa = mr_adc.h1.s_cce__aaa
    f_cce__aaa = mr_adc.h1.f_cce__aaa
    s_cce__abb = mr_adc.h1.s_cce__abb
    f_cce__abb = mr_adc.h1.f_cce__abb

    s_cae__aaa = mr_adc.h1.s_cae__aaa
    f_cae__aaa = mr_adc.h1.f_cae__aaa
    s_cae__abb = mr_adc.h1.s_cae__abb
    f_cae__abb = mr_adc.h1.f_cae__abb
    s_cae__bab = mr_adc.h1.s_cae__bab
    f_cae__bab = mr_adc.h1.f_cae__bab

    s_cca__aaa = mr_adc.h1.s_cca__aaa
    f_cca__aaa = mr_adc.h1.f_cca__aaa
    s_cca__abb = mr_adc.h1.s_cca__abb
    f_cca__abb = mr_adc.h1.f_cca__abb

    ## Excitation Manifolds
    if nval > 0:
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab


    ### CAA block
    if ncvs > 0 and ncas > 0:
        X_aaa = Xt[s_caa__aaa:f_caa__aaa].reshape(ncvs, ncas, ncas)
        X_abb = Xt[s_caa__abb:f_caa__abb].reshape(ncvs, ncas, ncas)
        X_bab = Xt[s_caa__bab:f_caa__bab].reshape(ncvs, ncas, ncas)

        compute_sigma_vector__H0__h1_h1__CAA(mr_adc, X_aaa, X_abb, X_bab, sigma)

        if mr_adc.method == "mr-adc(2)-x":
            compute_sigma_vector__H1__h1_h1__CAA_CAA(mr_adc, X_aaa, X_abb, X_bab, sigma)
            compute_sigma_vector__H1__h1_h1__CCE_CAA(mr_adc, X_aaa, X_abb, X_bab, sigma)
            compute_sigma_vector__H1__h1_h1__CAE_CAA(mr_adc, X_aaa, X_abb, X_bab, sigma)
            compute_sigma_vector__H1__h1_h1__CCA_CAA(mr_adc, X_aaa, X_abb, X_bab, sigma)

        if mr_adc.method == "mr-adc(2)-x" and nval > 0:
            compute_sigma_vector__H1__h1_h1__CVA_CAA(mr_adc, X_aaa, X_abb, X_bab, sigma)
            compute_sigma_vector__H1__h1_h1__CVE_CAA(mr_adc, X_aaa, X_abb, X_bab, sigma)

    ### CCE block
    if ncvs > 0 and nextern > 0:
        X_aaa = np.zeros((ncvs, ncvs, nextern))
        X_aaa[cvs_tril_ind[0], cvs_tril_ind[1]] =  Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()
        X_aaa[cvs_tril_ind[1], cvs_tril_ind[0]] =- Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()

        X_abb = Xt[s_cce__abb:f_cce__abb].reshape(ncvs, ncvs, nextern)

        compute_sigma_vector__H0__h1_h1__CCE(mr_adc, X_aaa, X_abb, sigma)

        if mr_adc.method == "mr-adc(2)-x":
            compute_sigma_vector__H1__h1_h1__CAA_CCE(mr_adc, X_aaa, X_abb, sigma)
            compute_sigma_vector__H1__h1_h1__CCE_CCE(mr_adc, X_aaa, X_abb, sigma)
            compute_sigma_vector__H1__h1_h1__CAE_CCE(mr_adc, X_aaa, X_abb, sigma)
            compute_sigma_vector__H1__h1_h1__CCA_CCE(mr_adc, X_aaa, X_abb, sigma)

        if mr_adc.method == "mr-adc(2)-x" and nval > 0:
            compute_sigma_vector__H1__h1_h1__CVA_CCE(mr_adc, X_aaa, X_abb, sigma)
            compute_sigma_vector__H1__h1_h1__CVE_CCE(mr_adc, X_aaa, X_abb, sigma)

    ### CAE block
    if ncvs > 0 and ncas > 0 and nextern > 0:
        X_aaa = Xt[s_cae__aaa:f_cae__aaa].reshape(ncvs, ncas, nextern)
        X_abb = Xt[s_cae__abb:f_cae__abb].reshape(ncvs, ncas, nextern)
        X_bab = Xt[s_cae__bab:f_cae__bab].reshape(ncvs, ncas, nextern)

        compute_sigma_vector__H0__h1_h1__CAE(mr_adc, X_aaa, X_abb, X_bab, sigma)

        if mr_adc.method == "mr-adc(2)-x":
            compute_sigma_vector__H1__h1_h1__CAA_CAE(mr_adc, X_aaa, X_abb, X_bab, sigma)
            compute_sigma_vector__H1__h1_h1__CCE_CAE(mr_adc, X_aaa, X_abb, X_bab, sigma)
            compute_sigma_vector__H1__h1_h1__CAE_CAE(mr_adc, X_aaa, X_abb, X_bab, sigma)
            compute_sigma_vector__H1__h1_h1__CCA_CAE(mr_adc, X_aaa, X_abb, X_bab, sigma)

        if mr_adc.method == "mr-adc(2)-x" and nval > 0:
            compute_sigma_vector__H1__h1_h1__CVA_CAE(mr_adc, X_aaa, X_abb, X_bab, sigma)
            compute_sigma_vector__H1__h1_h1__CVE_CAE(mr_adc, X_aaa, X_abb, X_bab, sigma)

    ### CCA block
    if ncvs > 0 and ncas > 0:
        X_aaa = np.zeros((ncvs, ncvs, ncas))
        X_aaa[cvs_tril_ind[0], cvs_tril_ind[1]] =  Xt[s_cca__aaa:f_cca__aaa].reshape(-1, ncas).copy()
        X_aaa[cvs_tril_ind[1], cvs_tril_ind[0]] =- Xt[s_cca__aaa:f_cca__aaa].reshape(-1, ncas).copy()

        X_abb = Xt[s_cca__abb:f_cca__abb].reshape(ncvs, ncvs, ncas)

        compute_sigma_vector__H0__h1_h1__CCA(mr_adc, X_aaa, X_abb, sigma)

        if mr_adc.method == "mr-adc(2)-x":
            compute_sigma_vector__H1__h1_h1__CAA_CCA(mr_adc, X_aaa, X_abb, sigma)
            compute_sigma_vector__H1__h1_h1__CCE_CCA(mr_adc, X_aaa, X_abb, sigma)
            compute_sigma_vector__H1__h1_h1__CAE_CCA(mr_adc, X_aaa, X_abb, sigma)
            compute_sigma_vector__H1__h1_h1__CCA_CCA(mr_adc, X_aaa, X_abb, sigma)

        if mr_adc.method == "mr-adc(2)-x" and nval > 0:
            compute_sigma_vector__H1__h1_h1__CVA_CCA(mr_adc, X_aaa, X_abb, sigma)
            compute_sigma_vector__H1__h1_h1__CVE_CCA(mr_adc, X_aaa, X_abb, sigma)

    if nval > 0:
        ### CVE block
        if ncvs > 0 and nval > 0 and nextern > 0:
            X_aaa = Xt[s_cve__aaa:f_cve__aaa].reshape(ncvs, nval, nextern)
            X_abb = Xt[s_cve__abb:f_cve__abb].reshape(ncvs, nval, nextern)
            X_bab = Xt[s_cve__bab:f_cve__bab].reshape(ncvs, nval, nextern)

            compute_sigma_vector__H0__h1_h1__CVE(mr_adc, X_aaa, X_abb, X_bab, sigma)

            if mr_adc.method == "mr-adc(2)-x":
                compute_sigma_vector__H1__h1_h1__CAA_CVE(mr_adc, X_aaa, X_abb, X_bab, sigma)
                compute_sigma_vector__H1__h1_h1__CCE_CVE(mr_adc, X_aaa, X_abb, X_bab, sigma)
                compute_sigma_vector__H1__h1_h1__CAE_CVE(mr_adc, X_aaa, X_abb, X_bab, sigma)
                compute_sigma_vector__H1__h1_h1__CCA_CVE(mr_adc, X_aaa, X_abb, X_bab, sigma)
                compute_sigma_vector__H1__h1_h1__CVA_CVE(mr_adc, X_aaa, X_abb, X_bab, sigma)
                compute_sigma_vector__H1__h1_h1__CVE_CVE(mr_adc, X_aaa, X_abb, X_bab, sigma)

        ### CVA block
        if ncvs > 0 and nval > 0 and ncas > 0:
            X_aaa = Xt[s_cva__aaa:f_cva__aaa].reshape(ncvs, nval, ncas)
            X_abb = Xt[s_cva__abb:f_cva__abb].reshape(ncvs, nval, ncas)
            X_bab = Xt[s_cva__bab:f_cva__bab].reshape(ncvs, nval, ncas)

            compute_sigma_vector__H0__h1_h1__CVA(mr_adc, X_aaa, X_abb, X_bab, sigma)

            if mr_adc.method == "mr-adc(2)-x":
                compute_sigma_vector__H1__h1_h1__CAA_CVA(mr_adc, X_aaa, X_abb, X_bab, sigma)
                compute_sigma_vector__H1__h1_h1__CCE_CVA(mr_adc, X_aaa, X_abb, X_bab, sigma)
                compute_sigma_vector__H1__h1_h1__CAE_CVA(mr_adc, X_aaa, X_abb, X_bab, sigma)
                compute_sigma_vector__H1__h1_h1__CCA_CVA(mr_adc, X_aaa, X_abb, X_bab, sigma)
                compute_sigma_vector__H1__h1_h1__CVA_CVA(mr_adc, X_aaa, X_abb, X_bab, sigma)
                compute_sigma_vector__H1__h1_h1__CVE_CVA(mr_adc, X_aaa, X_abb, X_bab, sigma)

    ## Contractions using ooee tensors for disk read optimization
    if mr_adc.method == "mr-adc(2)-x":

        if ncvs > 0 and nextern > 0:
            chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
            ### v_xxee contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_xxee = mr_adc.v2e.xxee[:,:,:,s_chunk:f_chunk]

                ### CCE block
                X_aaa = np.zeros((ncvs, ncvs, nextern))
                X_aaa[cvs_tril_ind[0], cvs_tril_ind[1]] =  Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()
                X_aaa[cvs_tril_ind[1], cvs_tril_ind[0]] =- Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()

                X_abb = Xt[s_cce__abb:f_cce__abb].reshape(ncvs, ncvs, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CCE_CCE__V_XXEE(mr_adc, X_aaa, X_abb, sigma, v_xxee)

                ### CAE block
                X_aaa = Xt[s_cae__aaa:f_cae__aaa].reshape(ncvs, ncas, nextern)
                X_abb = Xt[s_cae__abb:f_cae__abb].reshape(ncvs, ncas, nextern)
                X_bab = Xt[s_cae__bab:f_cae__bab].reshape(ncvs, ncas, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]
                X_bab = X_bab[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CAE_CAE__V_XXEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_xxee)

                ### CVE block
                if nval > 0:
                    X_aaa = Xt[s_cve__aaa:f_cve__aaa].reshape(ncvs, nval, nextern)
                    X_abb = Xt[s_cve__abb:f_cve__abb].reshape(ncvs, nval, nextern)
                    X_bab = Xt[s_cve__bab:f_cve__bab].reshape(ncvs, nval, nextern)

                    X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                    X_abb = X_abb[:,:,s_chunk:f_chunk]
                    X_bab = X_bab[:,:,s_chunk:f_chunk]

                    compute_sigma_vector__H1__h1_h1__CVE_CVE__V_XXEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_xxee)

                mr_adc.log.timer_debug("v2e.xxee contractions", *cput1)
                del(v_xxee)

            ### v_xeex contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.xeex [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_xeex = mr_adc.v2e.xeex[:,:,s_chunk:f_chunk]

                ### CCE block
                X_aaa = np.zeros((ncvs, ncvs, nextern))
                X_aaa[cvs_tril_ind[0], cvs_tril_ind[1]] =  Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()
                X_aaa[cvs_tril_ind[1], cvs_tril_ind[0]] =- Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()

                X_abb = Xt[s_cce__abb:f_cce__abb].reshape(ncvs, ncvs, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CCE_CCE__V_XEEX(mr_adc, X_aaa, X_abb, sigma, v_xeex)

                ### CAE block
                X_aaa = Xt[s_cae__aaa:f_cae__aaa].reshape(ncvs, ncas, nextern)
                X_bab = Xt[s_cae__bab:f_cae__bab].reshape(ncvs, ncas, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_bab = X_bab[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CAE_CAE__V_XEEX(mr_adc, X_aaa, X_bab, sigma, v_xeex)

                ### CVE block
                if nval > 0:
                    X_aaa = Xt[s_cve__aaa:f_cve__aaa].reshape(ncvs, nval, nextern)
                    X_bab = Xt[s_cve__bab:f_cve__bab].reshape(ncvs, nval, nextern)

                    X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                    X_bab = X_bab[:,:,s_chunk:f_chunk]

                    compute_sigma_vector__H1__h1_h1__CVE_CVE__V_XEEX(mr_adc, X_aaa, X_bab, sigma, v_xeex)

                mr_adc.log.timer_debug("v2e.xeex contractions", *cput1)
                del(v_xeex)

            chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
            ### v_xaee contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_xaee = mr_adc.v2e.xaee[:,:,:,s_chunk:f_chunk]

                ### CCE block
                X_aaa = np.zeros((ncvs, ncvs, nextern))
                X_aaa[cvs_tril_ind[0], cvs_tril_ind[1]] =  Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()
                X_aaa[cvs_tril_ind[1], cvs_tril_ind[0]] =- Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()

                X_abb = Xt[s_cce__abb:f_cce__abb].reshape(ncvs, ncvs, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CAE_CCE__V_XAEE(mr_adc, X_aaa, X_abb, sigma, v_xaee)

                mr_adc.log.timer_debug("v2e.xaee contractions", *cput1)

            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_xaee = mr_adc.v2e.xaee[:,:,s_chunk:f_chunk]

                ### CAE block
                X_aaa = Xt[s_cae__aaa:f_cae__aaa].reshape(ncvs, ncas, nextern)
                X_abb = Xt[s_cae__abb:f_cae__abb].reshape(ncvs, ncas, nextern)
                X_bab = Xt[s_cae__bab:f_cae__bab].reshape(ncvs, ncas, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]
                X_bab = X_bab[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CCE_CAE__V_XAEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_xaee)

                mr_adc.log.timer_debug("v2e.xaee contractions", *cput1)
                del(v_xaee)

            ### v_xeea contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.xeea [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_xeea = mr_adc.v2e.xeea[:,:,s_chunk:f_chunk]

                ### CAE block
                X_aaa = Xt[s_cae__aaa:f_cae__aaa].reshape(ncvs, ncas, nextern)
                X_abb = Xt[s_cae__abb:f_cae__abb].reshape(ncvs, ncas, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CCE_CAE__V_XEEA(mr_adc, X_aaa, X_abb, sigma, v_xeea)

                mr_adc.log.timer_debug("v2e.xeea contractions", *cput1)

            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.xeea [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_xeea = mr_adc.v2e.xeea[:,s_chunk:f_chunk]

                ### CCE block
                X_aaa = np.zeros((ncvs, ncvs, nextern))
                X_aaa[cvs_tril_ind[0], cvs_tril_ind[1]] =  Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()
                X_aaa[cvs_tril_ind[1], cvs_tril_ind[0]] =- Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()

                X_abb = Xt[s_cce__abb:f_cce__abb].reshape(ncvs, ncvs, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CAE_CCE__V_XEEA(mr_adc, X_aaa, X_abb, sigma, v_xeea)

                mr_adc.log.timer_debug("v2e.xeea contractions", *cput1)
                del(v_xeea)

        if ncvs > 0 and ncas > 0 and nextern > 0:
            chunks = tools.calculate_chunks(mr_adc, nextern, [ncas, ncas, nextern], ntensors = 2)
            ### v_aaee contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_aaee = mr_adc.v2e.aaee[:,:,:,s_chunk:f_chunk]

                ### CAE block
                X_aaa = Xt[s_cae__aaa:f_cae__aaa].reshape(ncvs, ncas, nextern)
                X_abb = Xt[s_cae__abb:f_cae__abb].reshape(ncvs, ncas, nextern)
                X_bab = Xt[s_cae__bab:f_cae__bab].reshape(ncvs, ncas, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]
                X_bab = X_bab[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CAE_CAE__V_AAEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_aaee)

                mr_adc.log.timer_debug("v2e.aaee contractions", *cput1)
                del(v_aaee)

            ### v_aeea contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.aeea [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_aeea = mr_adc.v2e.aeea[:,:,s_chunk:f_chunk]

                ### CAE block
                X_aaa = Xt[s_cae__aaa:f_cae__aaa].reshape(ncvs, ncas, nextern)
                X_abb = Xt[s_cae__abb:f_cae__abb].reshape(ncvs, ncas, nextern)
                X_bab = Xt[s_cae__bab:f_cae__bab].reshape(ncvs, ncas, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]
                X_bab = X_bab[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CAE_CAE__V_AEEA(mr_adc, X_aaa, X_abb, X_bab, sigma, v_aeea)

                mr_adc.log.timer_debug("v2e.aeea contractions", *cput1)
                del(v_aeea)

        if nval > 0 and ncvs > 0 and nextern > 0:
            chunks = tools.calculate_chunks(mr_adc, nextern, [nval, nval, nextern], ntensors = 2)
            ### v_vvee contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.vvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_vvee = mr_adc.v2e.vvee[:,:,:,s_chunk:f_chunk]

                ### CVE block
                X_aaa = Xt[s_cve__aaa:f_cve__aaa].reshape(ncvs, nval, nextern)
                X_abb = Xt[s_cve__abb:f_cve__abb].reshape(ncvs, nval, nextern)
                X_bab = Xt[s_cve__bab:f_cve__bab].reshape(ncvs, nval, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]
                X_bab = X_bab[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CVE_CVE__V_VVEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_vvee)

                mr_adc.log.timer_debug("v2e.vvee contractions", *cput1)
                del(v_vvee)

            ### v_veev contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.veev [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_veev = mr_adc.v2e.veev[:,:,s_chunk:f_chunk]

                ### CVE block
                X_aaa = Xt[s_cve__aaa:f_cve__aaa].reshape(ncvs, nval, nextern)
                X_abb = Xt[s_cve__abb:f_cve__abb].reshape(ncvs, nval, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CVE_CVE__V_VEEV(mr_adc, X_aaa, X_abb, sigma, v_veev)

                mr_adc.log.timer_debug("v2e.veev contractions", *cput1)
                del(v_veev)

            chunks = tools.calculate_chunks(mr_adc, nextern, [nval, nval, nextern], ntensors = 2)
            ### v_xvee contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_xvee = mr_adc.v2e.xvee[:,:,:,s_chunk:f_chunk]

                ### CCE block
                X_aaa = np.zeros((ncvs, ncvs, nextern))
                X_aaa[cvs_tril_ind[0], cvs_tril_ind[1]] =  Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()
                X_aaa[cvs_tril_ind[1], cvs_tril_ind[0]] =- Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()

                X_abb = Xt[s_cce__abb:f_cce__abb].reshape(ncvs, ncvs, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CVE_CCE__V_XVEE(mr_adc, X_aaa, X_abb, sigma, v_xvee)

                mr_adc.log.timer_debug("v2e.xvee contractions", *cput1)
                del(v_xvee)

            ### v_veex contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.veex [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_veex = mr_adc.v2e.veex[:,:,s_chunk:f_chunk]

                ### CCE block
                X_aaa = np.zeros((ncvs, ncvs, nextern))
                X_aaa[cvs_tril_ind[0], cvs_tril_ind[1]] =  Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()
                X_aaa[cvs_tril_ind[1], cvs_tril_ind[0]] =- Xt[s_cce__aaa:f_cce__aaa].reshape(-1, nextern).copy()

                X_abb = Xt[s_cce__abb:f_cce__abb].reshape(ncvs, ncvs, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CVE_CCE__V_VEEX(mr_adc, X_aaa, X_abb, sigma, v_veex)

                mr_adc.log.timer_debug("v2e.veex contractions", *cput1)
                del(v_veex)

            chunks = tools.calculate_chunks(mr_adc, nextern, [nval, ncas, nextern], ntensors = 2)
            ### v_vaee contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.vaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_vaee = mr_adc.v2e.vaee[:,:,s_chunk:f_chunk]

                ### CAE block
                X_aaa = Xt[s_cae__aaa:f_cae__aaa].reshape(ncvs, ncas, nextern)
                X_abb = Xt[s_cae__abb:f_cae__abb].reshape(ncvs, ncas, nextern)
                X_bab = Xt[s_cae__bab:f_cae__bab].reshape(ncvs, ncas, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]
                X_bab = X_bab[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CVE_CAE__V_VAEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_vaee)

                mr_adc.log.timer_debug("v2e.vaee contractions", *cput1)
                del(v_vaee)

            ### v_veea contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.veea [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_veea = mr_adc.v2e.veea[:,:,s_chunk:f_chunk]

                ### CAE block
                X_aaa = Xt[s_cae__aaa:f_cae__aaa].reshape(ncvs, ncas, nextern)
                X_abb = Xt[s_cae__abb:f_cae__abb].reshape(ncvs, ncas, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CVE_CAE__V_VEEA(mr_adc, X_aaa, X_abb, sigma, v_veea)

                mr_adc.log.timer_debug("v2e.veea contractions", *cput1)
                del(v_veea)

            chunks = tools.calculate_chunks(mr_adc, nextern, [nval, ncvs, nextern], ntensors = 2)
            ### v_vxee contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_vxee = mr_adc.v2e.vxee[:,:,:,s_chunk:f_chunk]

                ### CVE block
                X_aaa = Xt[s_cve__aaa:f_cve__aaa].reshape(ncvs, nval, nextern)
                X_abb = Xt[s_cve__abb:f_cve__abb].reshape(ncvs, nval, nextern)
                X_bab = Xt[s_cve__bab:f_cve__bab].reshape(ncvs, nval, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]
                X_bab = X_bab[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CCE_CVE__V_VXEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_vxee)

                mr_adc.log.timer_debug("v2e.vxee contractions", *cput1)
                del(v_vxee)

            ### v_xeev contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.xeev [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_xeev = mr_adc.v2e.xeev[:,:,s_chunk:f_chunk]

                ### CVE block
                X_aaa = Xt[s_cve__aaa:f_cve__aaa].reshape(ncvs, nval, nextern)
                X_abb = Xt[s_cve__abb:f_cve__abb].reshape(ncvs, nval, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CCE_CVE__V_XEEV(mr_adc, X_aaa, X_abb, sigma, v_xeev)

                mr_adc.log.timer_debug("v2e.xeev contractions", *cput1)
                del(v_xeev)

            chunks = tools.calculate_chunks(mr_adc, nextern, [nval, ncas, nextern], ntensors = 2)
            ### v_vaee contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.vaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_vaee = mr_adc.v2e.vaee[:,:,:,s_chunk:f_chunk]

                ### CVE block
                X_aaa = Xt[s_cve__aaa:f_cve__aaa].reshape(ncvs, nval, nextern)
                X_abb = Xt[s_cve__abb:f_cve__abb].reshape(ncvs, nval, nextern)
                X_bab = Xt[s_cve__bab:f_cve__bab].reshape(ncvs, nval, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]
                X_bab = X_bab[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CAE_CVE__V_VAEE(mr_adc, X_aaa, X_abb, X_bab, sigma, v_vaee)

                mr_adc.log.timer_debug("v2e.vaee contractions", *cput1)
                del(v_vaee)

            ### v_veea contractions
            for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
                cput1 = (logger.process_clock(), logger.perf_counter())
                mr_adc.log.debug("v2e.veea [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

                ## Two-electron integrals
                v_veea = mr_adc.v2e.veea[:,s_chunk:f_chunk]

                ### CVE block
                X_aaa = Xt[s_cve__aaa:f_cve__aaa].reshape(ncvs, nval, nextern)
                X_abb = Xt[s_cve__abb:f_cve__abb].reshape(ncvs, nval, nextern)

                X_aaa = X_aaa[:,:,s_chunk:f_chunk]
                X_abb = X_abb[:,:,s_chunk:f_chunk]

                compute_sigma_vector__H1__h1_h1__CAE_CVE__V_VEEA(mr_adc, X_aaa, X_abb, sigma, v_veea)

                mr_adc.log.timer_debug("v2e.veea contractions", *cput1)
                del(v_veea)

    mr_adc.log.timer_debug("computing sigma vector", *cput0)

    return sigma

def compute_trans_moments(mr_adc, U):

    cput0 = (logger.process_clock(), logger.perf_counter())
    mr_adc.log.extra("\nComputing transition moments matrix...")

    # Define functions to compute T blocks
    def compute_T__q0_h0__C_C(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Variables from kernel
        ncvs = mr_adc.ncvs

        # Excitation Manifolds
        s_c = mr_adc.h0.s_c
        f_c = mr_adc.h0.f_c

        T[:, s_c:f_c] = np.identity(ncvs)

        mr_adc.log.timer_debug("computing T q0-h0 C-C", *cput1)

    def compute_T__q0_h1__C_CAA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb

        T_c_caa  = 1/2 * einsum('IJ,YZ->IJYZ', np.identity(ncvs), rdm_ca, optimize = einsum_type)
        T[:, s_caa__aaa:f_caa__aaa] += T_c_caa.reshape(ncvs, -1)
        T[:, s_caa__abb:f_caa__abb] += T_c_caa.reshape(ncvs, -1)

        mr_adc.log.timer_debug("computing T q0-h1 C-CAA", *cput1)

    def compute_T__q2_h0__C_C(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xe = mr_adc.t1.xe

        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        t1_xa = mr_adc.t1.xa

        t1_xaaa = mr_adc.t1.xaaa

        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        t1_xxaa = mr_adc.t1.xxaa
        t1_xvaa = mr_adc.t1.xvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_c = mr_adc.h0.s_c
        f_c = mr_adc.h0.f_c

        T_c_c =- 1/2 * einsum('Ia,Ja->IJ', t1_xe, t1_xe, optimize = einsum_type)
        T_c_c -= einsum('Iixa,Jixa->IJ', t1_xxae, t1_xxae, optimize = einsum_type)
        T_c_c += 1/2 * einsum('Iixa,iJxa->IJ', t1_xxae, t1_xxae, optimize = einsum_type)
        T_c_c -= einsum('Iixy,Jixy->IJ', t1_xxaa, t1_xxaa, optimize = einsum_type)
        T_c_c += 1/2 * einsum('Iixy,Jiyx->IJ', t1_xxaa, t1_xxaa, optimize = einsum_type)
        T_c_c -= einsum('Iixa,Jixa->IJ', t1_xvae, t1_xvae, optimize = einsum_type)
        T_c_c += 1/2 * einsum('Iixa,iJxa->IJ', t1_xvae, t1_vxae, optimize = einsum_type)
        T_c_c -= einsum('Iixy,Jixy->IJ', t1_xvaa, t1_xvaa, optimize = einsum_type)
        T_c_c += 1/2 * einsum('Iixy,Jiyx->IJ', t1_xvaa, t1_xvaa, optimize = einsum_type)
        T_c_c -= 1/2 * einsum('Ix,Jx->IJ', t1_xa, t1_xa, optimize = einsum_type)
        T_c_c += 1/2 * einsum('iIxa,Jixa->IJ', t1_xxae, t1_xxae, optimize = einsum_type)
        T_c_c -= einsum('iIxa,iJxa->IJ', t1_xxae, t1_xxae, optimize = einsum_type)
        T_c_c += 1/2 * einsum('iIxa,Jixa->IJ', t1_vxae, t1_xvae, optimize = einsum_type)
        T_c_c -= einsum('iIxa,iJxa->IJ', t1_vxae, t1_vxae, optimize = einsum_type)
        T_c_c -= 1/2 * einsum('Ia,Jxay,xy->IJ', t1_xe, t1_xaea, rdm_ca, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ia,Jxya,xy->IJ', t1_xe, t1_xaae, rdm_ca, optimize = einsum_type)
        T_c_c += 1/2 * einsum('Iixa,Jiya,xy->IJ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_c -= 1/4 * einsum('Iixa,iJya,xy->IJ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_c += 1/2 * einsum('Iixy,Jixz,yz->IJ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_c -= 1/4 * einsum('Iixy,Jiyz,xz->IJ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_c -= 1/4 * einsum('Iixy,Jizw,xyzw->IJ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_c -= 1/4 * einsum('Iixy,Jizx,yz->IJ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_c += 1/2 * einsum('Iixy,Jizy,xz->IJ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_c += 1/2 * einsum('Iixa,Jiya,xy->IJ', t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_c -= 1/4 * einsum('Iixa,iJya,xy->IJ', t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_c += 1/2 * einsum('Iixy,Jixz,yz->IJ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_c -= 1/4 * einsum('Iixy,Jiyz,xz->IJ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_c -= 1/4 * einsum('Iixy,Jizw,xyzw->IJ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_c -= 1/4 * einsum('Iixy,Jizx,yz->IJ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_c += 1/2 * einsum('Iixy,Jizy,xz->IJ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_c -= 1/2 * einsum('Ix,Jyxz,yz->IJ', t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ix,Jyzx,yz->IJ', t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_c -= 1/2 * einsum('Ixay,Ja,xy->IJ', t1_xaea, t1_xe, rdm_ca, optimize = einsum_type)
        T_c_c -= 1/2 * einsum('Ixay,Jzaw,xwyz->IJ', t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_c -= 1/2 * einsum('Ixay,Jzay,xz->IJ', t1_xaea, t1_xaea, rdm_ca, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ixay,Jzwa,xwyz->IJ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ixay,Jzya,xz->IJ', t1_xaea, t1_xaae, rdm_ca, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ixya,Ja,xy->IJ', t1_xaae, t1_xe, rdm_ca, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ixya,Jzaw,xwyz->IJ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ixya,Jzay,xz->IJ', t1_xaae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ixya,Jzwa,xwzy->IJ', t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_c -= 1/2 * einsum('Ixya,Jzya,xz->IJ', t1_xaae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ixyz,Jwuy,xuzw->IJ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ixyz,Jwuz,xuwy->IJ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_c -= 1/2 * einsum('Ixyz,Jwyu,xuzw->IJ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_c -= 1/2 * einsum('Ixyz,Jwyz,xw->IJ', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ixyz,Jwzu,xuyw->IJ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ixyz,Jwzy,xw->IJ', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_c -= 1/4 * einsum('Ixyz,Jxwu,yzwu->IJ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_c -= 1/2 * einsum('Ixyz,Jy,xz->IJ', t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_c_c += 1/4 * einsum('Ixyz,Jz,xy->IJ', t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_c_c -= 1/4 * einsum('iIxa,Jiya,xy->IJ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_c += 1/2 * einsum('iIxa,iJya,xy->IJ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_c -= 1/4 * einsum('iIxa,Jiya,xy->IJ', t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_c += 1/2 * einsum('iIxa,iJya,xy->IJ', t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee_ab = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
            t1_xxee_ba = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            T_c_c -= einsum('Iiab,Jiab->IJ', t1_xxee_ab, t1_xxee_ab, optimize = einsum_type)
            T_c_c += 1/2 * einsum('Iiab,Jiba->IJ', t1_xxee_ab, t1_xxee_ba, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee_ab, t1_xxee_ba)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee_ab = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]
            t1_xvee_ba = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            T_c_c -= einsum('Iiab,Jiab->IJ', t1_xvee_ab, t1_xvee_ab, optimize = einsum_type)
            T_c_c += 1/2 * einsum('Iiab,Jiba->IJ', t1_xvee_ab, t1_xvee_ba, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee_ab, t1_xvee_ba)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee_ab = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
            t1_xaee_ba = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_c_c -= 1/2 * einsum('Ixab,Jyab,xy->IJ', t1_xaee_ab, t1_xaee_ab, rdm_ca, optimize = einsum_type)
            T_c_c += 1/4 * einsum('Ixab,Jyba,xy->IJ', t1_xaee_ab, t1_xaee_ba, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee_ab, t1_xaee_ba)

        T[:, s_c:f_c] += T_c_c

        mr_adc.log.timer_debug("computing T q0-h0 C-C", *cput1)

    def compute_T__q2_h1__C_CAA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xe = mr_adc.t1.xe

        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        t1_xa = mr_adc.t1.xa

        t1_xaaa = mr_adc.t1.xaaa

        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        t1_xxaa = mr_adc.t1.xxaa
        t1_xvaa = mr_adc.t1.xvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        T_c_caa =- 1/4 * einsum('IZax,Ja,Yx->IJYZ', t1_xaea, t1_xe, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('IZax,Jyax,Yy->IJYZ', t1_xaea, t1_xaea, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('IZax,Jyaz,Yzxy->IJYZ', t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZax,Jyxa,Yy->IJYZ', t1_xaea, t1_xaae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('IZax,Jyza,Yzxy->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('IZax,Jyza,Yzyx->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZxa,Ja,Yx->IJYZ', t1_xaae, t1_xe, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZxa,Jyax,Yy->IJYZ', t1_xaae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZxa,Jyaz,Yzxy->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('IZxa,Jyxa,Yy->IJYZ', t1_xaae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('IZxa,Jyza,Yzxy->IJYZ', t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('IZxa,Jyza,Yzyx->IJYZ', t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('IZxy,Jx,Yy->IJYZ', t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZxy,Jy,Yx->IJYZ', t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('IZxy,Jzwx,Ywyz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('IZxy,Jzwx,Ywzy->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('IZxy,Jzwy,Ywxz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('IZxy,Jzwy,Ywzx->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('IZxy,Jzxw,Ywyz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('IZxy,Jzxy,Yz->IJYZ', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZxy,Jzyw,Ywxz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZxy,Jzyx,Yz->IJYZ', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ia,Ja,YZ->IJYZ', t1_xe, t1_xe, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Ia,JxZa,Yx->IJYZ', t1_xe, t1_xaae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ia,JxaZ,Yx->IJYZ', t1_xe, t1_xaea, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ia,Jxay,YyZx->IJYZ', t1_xe, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ia,Jxya,YyZx->IJYZ', t1_xe, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ia,Jxya,YyxZ->IJYZ', t1_xe, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/2 * einsum('Iixa,JiZa,Yx->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/2 * einsum('Iixa,Jixa,YZ->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixa,Jiya,YyZx->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixa,Jiya,YyxZ->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixa,iJZa,Yx->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixa,iJxa,YZ->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixa,iJya,YyZx->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixa,iJya,YyxZ->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixy,JiZx,Yy->IJYZ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/2 * einsum('Iixy,JiZy,Yx->IJYZ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixy,JiZz,Yzxy->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixy,JixZ,Yy->IJYZ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/2 * einsum('Iixy,Jixy,YZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixy,Jixz,YzZy->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixy,JiyZ,Yx->IJYZ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixy,Jiyx,YZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jiyz,YzZx->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,Jiyz,YzxZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,JizZ,Yzxy->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,JizZ,Yzyx->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizw,YzwZxy->IJYZ', t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,Jizw,YzwxZy->IJYZ', t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizx,YzZy->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,Jizx,YzyZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixy,Jizy,YzZx->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixy,Jizy,YzxZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/2 * einsum('Iixa,JiZa,Yx->IJYZ', t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/2 * einsum('Iixa,Jixa,YZ->IJYZ', t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixa,Jiya,YyZx->IJYZ', t1_xvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixa,Jiya,YyxZ->IJYZ', t1_xvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixa,iJZa,Yx->IJYZ', t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixa,iJxa,YZ->IJYZ', t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixa,iJya,YyZx->IJYZ', t1_xvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixa,iJya,YyxZ->IJYZ', t1_xvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixy,JiZx,Yy->IJYZ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/2 * einsum('Iixy,JiZy,Yx->IJYZ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixy,JiZz,Yzxy->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixy,JixZ,Yy->IJYZ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/2 * einsum('Iixy,Jixy,YZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixy,Jixz,YzZy->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixy,JiyZ,Yx->IJYZ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixy,Jiyx,YZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jiyz,YzZx->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,Jiyz,YzxZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,JizZ,Yzxy->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,JizZ,Yzyx->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizw,YzwZxy->IJYZ', t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,Jizw,YzwxZy->IJYZ', t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizx,YzZy->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,Jizx,YzyZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixy,Jizy,YzZx->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixy,Jizy,YzxZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ix,Jx,YZ->IJYZ', t1_xa, t1_xa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Ix,JyZx,Yy->IJYZ', t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ix,JyxZ,Yy->IJYZ', t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ix,Jyxz,YzZy->IJYZ', t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ix,Jyzx,YzZy->IJYZ', t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ix,Jyzx,YzyZ->IJYZ', t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixay,Ja,YxZy->IJYZ', t1_xaea, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Ixay,JzZa,Yxzy->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixay,JzaZ,Yxzy->IJYZ', t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixay,Jzaw,YxwZyz->IJYZ', t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixay,Jzay,YxZz->IJYZ', t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixay,Jzwa,YxwZyz->IJYZ', t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixay,Jzwa,YxwzyZ->IJYZ', t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixay,Jzya,YxZz->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixay,Jzya,YxzZ->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,Ja,YxZy->IJYZ', t1_xaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,Ja,YxyZ->IJYZ', t1_xaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Ixya,JzZa,Yxyz->IJYZ', t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,JzaZ,Yxyz->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,JzaZ,Yxzy->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,Jzaw,YxwZyz->IJYZ', t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,Jzaw,YxwyZz->IJYZ', t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,Jzay,YxZz->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,Jzay,YxzZ->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,Jzwa,YxwZzy->IJYZ', t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,Jzwa,YxwyzZ->IJYZ', t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixya,Jzya,YxZz->IJYZ', t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Ixyz,JwZy,Yxwz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Ixyz,JwZz,Yxyw->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwuy,YxuZzw->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jwuy,YxuwzZ->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwuz,YxuZwy->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jwuz,YxuywZ->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixyz,JwyZ,Yxwz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixyz,Jwyu,YxuZzw->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixyz,Jwyz,YxZw->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,JwzZ,Yxwy->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,JwzZ,Yxyw->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwzu,YxuZyw->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jwzu,YxuyZw->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwzy,YxZw->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jwzy,YxwZ->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixyz,JxZw,Ywyz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,JxwZ,Ywyz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,JxwZ,Ywzy->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jxwu,YwuZyz->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jxwu,YwuyZz->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixyz,Jy,YxZz->IJYZ', t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jz,YxZy->IJYZ', t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jz,YxyZ->IJYZ', t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('iIxa,JiZa,Yx->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('iIxa,Jixa,YZ->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('iIxa,Jiya,YyZx->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('iIxa,Jiya,YyxZ->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('iIxa,iJZa,Yx->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/2 * einsum('iIxa,iJxa,YZ->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('iIxa,iJya,YyZx->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('iIxa,JiZa,Yx->IJYZ', t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('iIxa,Jixa,YZ->IJYZ', t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('iIxa,Jiya,YyZx->IJYZ', t1_vxae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('iIxa,Jiya,YyxZ->IJYZ', t1_vxae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('iIxa,iJZa,Yx->IJYZ', t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/2 * einsum('iIxa,iJxa,YZ->IJYZ', t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('iIxa,iJya,YyZx->IJYZ', t1_vxae, t1_vxae, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 3)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee_ab = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
            t1_xxee_ba = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            T_c_caa -= 1/2 * einsum('Iiab,Jiab,YZ->IJYZ', t1_xxee_ab, t1_xxee_ab, rdm_ca, optimize = einsum_type)
            T_c_caa += 1/4 * einsum('Iiab,Jiba,YZ->IJYZ', t1_xxee_ab, t1_xxee_ba, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee_ab, t1_xxee_ba)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 3)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee_ab = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]
            t1_xvee_ba = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            T_c_caa -= 1/2 * einsum('Iiab,Jiab,YZ->IJYZ', t1_xvee_ab, t1_xvee_ab, rdm_ca, optimize = einsum_type)
            T_c_caa += 1/4 * einsum('Iiab,Jiba,YZ->IJYZ', t1_xvee_ab, t1_xvee_ba, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee_ab, t1_xvee_ba)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 3)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee_ab = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
            t1_xaee_ba = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_c_caa -= 1/4 * einsum('IZab,Jxab,Yx->IJYZ', t1_xaee_ab, t1_xaee_ab, rdm_ca, optimize = einsum_type)
            T_c_caa += 1/4 * einsum('IZab,Jxba,Yx->IJYZ', t1_xaee_ab, t1_xaee_ba, rdm_ca, optimize = einsum_type)
            T_c_caa -= 1/4 * einsum('Ixab,Jyab,YxZy->IJYZ', t1_xaee_ab, t1_xaee_ab, rdm_ccaa, optimize = einsum_type)
            T_c_caa += 1/12 * einsum('Ixab,Jyba,YxZy->IJYZ', t1_xaee_ab, t1_xaee_ba, rdm_ccaa, optimize = einsum_type)
            T_c_caa -= 1/12 * einsum('Ixab,Jyba,YxyZ->IJYZ', t1_xaee_ab, t1_xaee_ba, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee_ab, t1_xaee_ba)

        T[:, s_caa__aaa:f_caa__aaa] += T_c_caa.reshape(ncvs, -1)


        T_c_caa =- 1/4 * einsum('IZax,Ja,Yx->IJYZ', t1_xaea, t1_xe, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('IZax,Jyax,Yy->IJYZ', t1_xaea, t1_xaea, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('IZax,Jyaz,Yzxy->IJYZ', t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('IZax,Jyza,Yzxy->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('IZax,Jyza,Yzyx->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('IZxa,Jyxa,Yy->IJYZ', t1_xaae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('IZxa,Jyza,Yzxy->IJYZ', t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('IZxa,Jyza,Yzyx->IJYZ', t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('IZxy,Jx,Yy->IJYZ', t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('IZxy,Jzwx,Ywyz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('IZxy,Jzwx,Ywzy->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('IZxy,Jzwy,Ywxz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('IZxy,Jzwy,Ywzx->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('IZxy,Jzxw,Ywyz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('IZxy,Jzxy,Yz->IJYZ', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ia,Ja,YZ->IJYZ', t1_xe, t1_xe, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ia,JxaZ,Yx->IJYZ', t1_xe, t1_xaea, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ia,Jxay,YyZx->IJYZ', t1_xe, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ia,Jxya,YyZx->IJYZ', t1_xe, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ia,Jxya,YyxZ->IJYZ', t1_xe, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/2 * einsum('Iixa,Jixa,YZ->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/3 * einsum('Iixa,Jiya,YyZx->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixa,Jiya,YyxZ->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixa,iJxa,YZ->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixa,iJya,YyZx->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixa,iJya,YyxZ->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixy,JixZ,Yy->IJYZ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/2 * einsum('Iixy,Jixy,YZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixy,Jixz,YzZy->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixy,Jiyx,YZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixy,Jiyz,YzZx->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jiyz,YzxZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,JizZ,Yzxy->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixy,JizZ,Yzyx->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixy,Jizw,YzwZxy->IJYZ', t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizw,YzwxZy->IJYZ', t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixy,Jizx,YzZy->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizx,YzyZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/3 * einsum('Iixy,Jizy,YzZx->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixy,Jizy,YzxZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/2 * einsum('Iixa,Jixa,YZ->IJYZ', t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/3 * einsum('Iixa,Jiya,YyZx->IJYZ', t1_xvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixa,Jiya,YyxZ->IJYZ', t1_xvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixa,iJxa,YZ->IJYZ', t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixa,iJya,YyZx->IJYZ', t1_xvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixa,iJya,YyxZ->IJYZ', t1_xvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixy,JixZ,Yy->IJYZ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/2 * einsum('Iixy,Jixy,YZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixy,Jixz,YzZy->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Iixy,Jiyx,YZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixy,Jiyz,YzZx->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jiyz,YzxZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,JizZ,Yzxy->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixy,JizZ,Yzyx->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixy,Jizw,YzwZxy->IJYZ', t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizw,YzwxZy->IJYZ', t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixy,Jizx,YzZy->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizx,YzyZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/3 * einsum('Iixy,Jizy,YzZx->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixy,Jizy,YzxZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ix,Jx,YZ->IJYZ', t1_xa, t1_xa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ix,JyxZ,Yy->IJYZ', t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ix,Jyxz,YzZy->IJYZ', t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ix,Jyzx,YzZy->IJYZ', t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ix,Jyzx,YzyZ->IJYZ', t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixay,Ja,YxZy->IJYZ', t1_xaea, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixay,JzaZ,Yxzy->IJYZ', t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixay,Jzaw,YxwZyz->IJYZ', t1_xaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixay,Jzay,YxZz->IJYZ', t1_xaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ixay,Jzwa,YxwZyz->IJYZ', t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixay,Jzwa,YxwzyZ->IJYZ', t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ixay,Jzya,YxZz->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixay,Jzya,YxzZ->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ixya,Ja,YxZy->IJYZ', t1_xaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,Ja,YxyZ->IJYZ', t1_xaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,JzaZ,Yxyz->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ixya,JzaZ,Yxzy->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ixya,Jzaw,YxwZyz->IJYZ', t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,Jzaw,YxwyZz->IJYZ', t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ixya,Jzay,YxZz->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,Jzay,YxzZ->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,Jzwa,YxwZyz->IJYZ', t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,Jzwa,YxwZzy->IJYZ', t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,Jzwa,YxwyZz->IJYZ', t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,Jzwa,YxwzZy->IJYZ', t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,Jzwa,YxwzyZ->IJYZ', t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixya,Jzya,YxZz->IJYZ', t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ixyz,Jwuy,YxuZzw->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwuy,YxuwzZ->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwuz,YxuZwy->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jwuz,YxuZyw->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jwuz,YxuwZy->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jwuz,YxuwyZ->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jwuz,YxuyZw->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixyz,JwyZ,Yxwz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixyz,Jwyu,YxuZzw->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixyz,Jwyz,YxZw->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ixyz,JwzZ,Yxwy->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,JwzZ,Yxyw->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ixyz,Jwzu,YxuZyw->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwzu,YxuyZw->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ixyz,Jwzy,YxZw->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwzy,YxwZ->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,JxwZ,Ywyz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ixyz,JxwZ,Ywzy->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ixyz,Jxwu,YwuZyz->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jxwu,YwuyZz->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixyz,Jy,YxZz->IJYZ', t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ixyz,Jz,YxZy->IJYZ', t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jz,YxyZ->IJYZ', t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('iIxa,Jixa,YZ->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('iIxa,Jiya,YyZx->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('iIxa,Jiya,YyxZ->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('iIxa,iJZa,Yx->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/2 * einsum('iIxa,iJxa,YZ->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('iIxa,iJya,YyZx->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('iIxa,Jixa,YZ->IJYZ', t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('iIxa,Jiya,YyZx->IJYZ', t1_vxae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('iIxa,Jiya,YyxZ->IJYZ', t1_vxae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('iIxa,iJZa,Yx->IJYZ', t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/2 * einsum('iIxa,iJxa,YZ->IJYZ', t1_vxae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('iIxa,iJya,YyZx->IJYZ', t1_vxae, t1_vxae, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 3)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee_ab = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
            t1_xxee_ba = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            T_c_caa -= 1/2 * einsum('Iiab,Jiab,YZ->IJYZ', t1_xxee_ab, t1_xxee_ab, rdm_ca, optimize = einsum_type)
            T_c_caa += 1/4 * einsum('Iiab,Jiba,YZ->IJYZ', t1_xxee_ab, t1_xxee_ba, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee_ab, t1_xxee_ba)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 3)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee_ab = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]
            t1_xvee_ba = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            T_c_caa -= 1/2 * einsum('Iiab,Jiab,YZ->IJYZ', t1_xvee_ab, t1_xvee_ab, rdm_ca, optimize = einsum_type)
            T_c_caa += 1/4 * einsum('Iiab,Jiba,YZ->IJYZ', t1_xvee_ab, t1_xvee_ba, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee_ab, t1_xvee_ba)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee_ab = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
            t1_xaee_ba = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_c_caa -= 1/4 * einsum('IZab,Jxab,Yx->IJYZ', t1_xaee_ab, t1_xaee_ab, rdm_ca, optimize = einsum_type)
            T_c_caa -= 1/4 * einsum('Ixab,Jyab,YxZy->IJYZ', t1_xaee_ab, t1_xaee_ab, rdm_ccaa, optimize = einsum_type)
            T_c_caa += 1/6 * einsum('Ixab,Jyba,YxZy->IJYZ', t1_xaee_ab, t1_xaee_ba, rdm_ccaa, optimize = einsum_type)
            T_c_caa += 1/12 * einsum('Ixab,Jyba,YxyZ->IJYZ', t1_xaee_ab, t1_xaee_ba, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee_ab, t1_xaee_ba)

        T[:, s_caa__abb:f_caa__abb] += T_c_caa.reshape(ncvs, -1)


        T_c_caa  = 1/4 * einsum('IZax,Jyxa,Yy->IJYZ', t1_xaea, t1_xaae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('IZax,Jyza,Yzxy->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('IZax,Jyza,Yzyx->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZxa,Ja,Yx->IJYZ', t1_xaae, t1_xe, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZxa,Jyax,Yy->IJYZ', t1_xaae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZxa,Jyaz,Yzxy->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('IZxa,Jyza,Yzxy->IJYZ', t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('IZxa,Jyza,Yzyx->IJYZ', t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZxy,Jy,Yx->IJYZ', t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('IZxy,Jzwx,Ywyz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('IZxy,Jzwx,Ywzy->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('IZxy,Jzwy,Ywxz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('IZxy,Jzwy,Ywzx->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZxy,Jzyw,Ywxz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('IZxy,Jzyx,Yz->IJYZ', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Ia,JxZa,Yx->IJYZ', t1_xe, t1_xaae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ia,Jxya,YyZx->IJYZ', t1_xe, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ia,Jxya,YyxZ->IJYZ', t1_xe, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/2 * einsum('Iixa,JiZa,Yx->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixa,Jiya,YyZx->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/3 * einsum('Iixa,Jiya,YyxZ->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixa,iJZa,Yx->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixa,iJya,YyZx->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixa,iJya,YyxZ->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixy,JiZx,Yy->IJYZ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/2 * einsum('Iixy,JiZy,Yx->IJYZ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixy,JiZz,Yzxy->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixy,JiyZ,Yx->IJYZ', t1_xxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,Jiyz,YzZx->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixy,Jiyz,YzxZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixy,JizZ,Yzxy->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,JizZ,Yzyx->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizw,YzwZyx->IJYZ', t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,Jizw,YzwxZy->IJYZ', t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizw,YzwxyZ->IJYZ', t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizw,YzwyZx->IJYZ', t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizw,YzwyxZ->IJYZ', t1_xxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,Jizx,YzZy->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixy,Jizx,YzyZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixy,Jizy,YzZx->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/3 * einsum('Iixy,Jizy,YzxZ->IJYZ', t1_xxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/2 * einsum('Iixa,JiZa,Yx->IJYZ', t1_xvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixa,Jiya,YyZx->IJYZ', t1_xvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/3 * einsum('Iixa,Jiya,YyxZ->IJYZ', t1_xvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixa,iJZa,Yx->IJYZ', t1_xvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixa,iJya,YyZx->IJYZ', t1_xvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixa,iJya,YyxZ->IJYZ', t1_xvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixy,JiZx,Yy->IJYZ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/2 * einsum('Iixy,JiZy,Yx->IJYZ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixy,JiZz,Yzxy->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Iixy,JiyZ,Yx->IJYZ', t1_xvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,Jiyz,YzZx->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixy,Jiyz,YzxZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixy,JizZ,Yzxy->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,JizZ,Yzyx->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizw,YzwZyx->IJYZ', t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,Jizw,YzwxZy->IJYZ', t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizw,YzwxyZ->IJYZ', t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizw,YzwyZx->IJYZ', t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Iixy,Jizw,YzwyxZ->IJYZ', t1_xvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Iixy,Jizx,YzZy->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Iixy,Jizx,YzyZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Iixy,Jizy,YzZx->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/3 * einsum('Iixy,Jizy,YzxZ->IJYZ', t1_xvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Ix,JyZx,Yy->IJYZ', t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ix,Jyzx,YzZy->IJYZ', t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ix,Jyzx,YzyZ->IJYZ', t1_xa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Ixay,JzZa,Yxzy->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixay,Jzwa,YxwZzy->IJYZ', t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixay,Jzwa,YxwyZz->IJYZ', t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixay,Jzwa,YxwyzZ->IJYZ', t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixay,Jzwa,YxwzZy->IJYZ', t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixay,Jzwa,YxwzyZ->IJYZ', t1_xaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixay,Jzya,YxZz->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ixay,Jzya,YxzZ->IJYZ', t1_xaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,Ja,YxZy->IJYZ', t1_xaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ixya,Ja,YxyZ->IJYZ', t1_xaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Ixya,JzZa,Yxyz->IJYZ', t1_xaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ixya,JzaZ,Yxyz->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,JzaZ,Yxzy->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,Jzaw,YxwZzy->IJYZ', t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,Jzaw,YxwyZz->IJYZ', t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,Jzaw,YxwyzZ->IJYZ', t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,Jzaw,YxwzZy->IJYZ', t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixya,Jzaw,YxwzyZ->IJYZ', t1_xaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,Jzay,YxZz->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ixya,Jzay,YxzZ->IJYZ', t1_xaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixya,Jzwa,YxwZzy->IJYZ', t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ixya,Jzwa,YxwyzZ->IJYZ', t1_xaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Ixyz,JwZy,Yxwz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/4 * einsum('Ixyz,JwZz,Yxyw->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwuy,YxuZwz->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwuy,YxuwZz->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jwuy,YxuwzZ->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwuy,YxuzZw->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwuy,YxuzwZ->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jwuz,YxuZwy->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ixyz,Jwuz,YxuywZ->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,JwzZ,Yxwy->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ixyz,JwzZ,Yxyw->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwzu,YxuZwy->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwzu,YxuwZy->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwzu,YxuwyZ->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jwzu,YxuyZw->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jwzu,YxuywZ->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jwzy,YxZw->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ixyz,Jwzy,YxwZ->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('Ixyz,JxZw,Ywyz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('Ixyz,JxwZ,Ywyz->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,JxwZ,Ywzy->IJYZ', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jxwu,YwuZzy->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('Ixyz,Jxwu,YwuyZz->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jxwu,YwuyzZ->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jxwu,YwuzZy->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jxwu,YwuzyZ->IJYZ', t1_xaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_c_caa -= 1/12 * einsum('Ixyz,Jz,YxZy->IJYZ', t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/6 * einsum('Ixyz,Jz,YxyZ->IJYZ', t1_xaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('iIxa,JiZa,Yx->IJYZ', t1_xxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('iIxa,Jiya,YyZx->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('iIxa,Jiya,YyxZ->IJYZ', t1_xxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_caa -= 1/4 * einsum('iIxa,JiZa,Yx->IJYZ', t1_vxae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_caa += 1/12 * einsum('iIxa,Jiya,YyZx->IJYZ', t1_vxae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_caa += 1/6 * einsum('iIxa,Jiya,YyxZ->IJYZ', t1_vxae, t1_xvae, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee_ab = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
            t1_xaee_ba = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_c_caa += 1/4 * einsum('IZab,Jxba,Yx->IJYZ', t1_xaee_ab, t1_xaee_ba, rdm_ca, optimize = einsum_type)
            T_c_caa -= 1/12 * einsum('Ixab,Jyba,YxZy->IJYZ', t1_xaee_ab, t1_xaee_ba, rdm_ccaa, optimize = einsum_type)
            T_c_caa -= 1/6 * einsum('Ixab,Jyba,YxyZ->IJYZ', t1_xaee_ab, t1_xaee_ba, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee_ab, t1_xaee_ba)

        T[:, s_caa__bab:f_caa__bab] += T_c_caa.reshape(ncvs, -1)

        mr_adc.log.timer_debug("computing T q2-h1 C-CAA", *cput1)

    def compute_T__q2_h1__C_CCE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xa = mr_adc.t1.xa
        t1_xaaa = mr_adc.t1.xaaa

        t1_xxae = mr_adc.t1.xxae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        T_c_cce =- 1/2 * einsum('JKxB,Ix->IJKB', t1_xxae, t1_xa, optimize = einsum_type)
        T_c_cce += 1/2 * einsum('KJxB,Ix->IJKB', t1_xxae, t1_xa, optimize = einsum_type)
        T_c_cce -= 1/2 * einsum('JKxB,Iyxz,yz->IJKB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_cce += 1/4 * einsum('JKxB,Iyzx,yz->IJKB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_cce += 1/2 * einsum('KJxB,Iyxz,yz->IJKB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_cce -= 1/4 * einsum('KJxB,Iyzx,yz->IJKB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xe = mr_adc.t1.xe[:,s_chunk:f_chunk]
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_c_cce += 1/2 * einsum('JKBa,Ia->IJKB', t1_xxee, t1_xe, optimize = einsum_type)
            T_c_cce -= 1/2 * einsum('KJBa,Ia->IJKB', t1_xxee, t1_xe, optimize = einsum_type)
            T_c_cce += 1/2 * einsum('JKBa,Ixay,xy->IJKB', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_c_cce -= 1/4 * einsum('JKBa,Ixya,xy->IJKB', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)
            T_c_cce -= 1/2 * einsum('KJBa,Ixay,xy->IJKB', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_c_cce += 1/4 * einsum('KJBa,Ixya,xy->IJKB', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xe, t1_xxee, t1_xaae, t1_xaea)

        T[:, s_cce__aaa:f_cce__aaa] += T_c_cce[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(ncvs, -1)


        T_c_cce =- 1/2 * einsum('JKxB,Ix->IJKB', t1_xxae, t1_xa, optimize = einsum_type)
        T_c_cce -= 1/2 * einsum('JKxB,Iyxz,yz->IJKB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_cce += 1/4 * einsum('JKxB,Iyzx,yz->IJKB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xe = mr_adc.t1.xe[:,s_chunk:f_chunk]
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_c_cce -= 1/2 * einsum('KJBa,Ia->IJKB', t1_xxee, t1_xe, optimize = einsum_type)
            T_c_cce -= 1/2 * einsum('KJBa,Ixay,xy->IJKB', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_c_cce += 1/4 * einsum('KJBa,Ixya,xy->IJKB', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xe, t1_xxee, t1_xaae, t1_xaea)

        T[:, s_cce__abb:f_cce__abb] += T_c_cce.reshape(ncvs, -1)

        mr_adc.log.timer_debug("computing T q2-h1 C-CCE", *cput1)

    def compute_T__q2_h1__C_CAE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xa = mr_adc.t1.xa

        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        t1_xaaa = mr_adc.t1.xaaa

        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        t1_xxaa = mr_adc.t1.xxaa
        t1_xvaa = mr_adc.t1.xvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        T_c_cae  = 1/4 * einsum('JixB,Iixy,Yy->IJYB', t1_xxae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('JixB,Iiyx,Yy->IJYB', t1_xxae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cae += 1/12 * einsum('JixB,Iiyz,Yxyz->IJYB', t1_xxae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/12 * einsum('JixB,Iiyz,Yxzy->IJYB', t1_xxae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/4 * einsum('JixB,Iixy,Yy->IJYB', t1_xvae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('JixB,Iiyx,Yy->IJYB', t1_xvae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cae += 1/12 * einsum('JixB,Iiyz,Yxyz->IJYB', t1_xvae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/12 * einsum('JixB,Iiyz,Yxzy->IJYB', t1_xvae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('JxBy,Ixzw,Yyzw->IJYB', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/4 * einsum('JxBy,Iy,Yx->IJYB', t1_xaea, t1_xa, rdm_ca, optimize = einsum_type)
        T_c_cae += 1/4 * einsum('JxBy,Izwy,Yzwx->IJYB', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/4 * einsum('JxBy,Izyw,Yzxw->IJYB', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/12 * einsum('JxyB,Ixzw,Yywz->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/12 * einsum('JxyB,Ixzw,Yyzw->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('JxyB,Iy,Yx->IJYB', t1_xaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_c_cae -= 1/12 * einsum('JxyB,Izwy,Yzwx->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/12 * einsum('JxyB,Izwy,Yzxw->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('JxyB,Izyw,Yzxw->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('iJxB,Iixy,Yy->IJYB', t1_xxae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cae += 1/2 * einsum('iJxB,Iiyx,Yy->IJYB', t1_xxae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('iJxB,Iiyz,Yxyz->IJYB', t1_xxae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('iJxB,Iixy,Yy->IJYB', t1_vxae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cae += 1/2 * einsum('iJxB,Iiyx,Yy->IJYB', t1_vxae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('iJxB,Iiyz,Yxyz->IJYB', t1_vxae, t1_xvaa, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xxae = mr_adc.t1.xxae[:,:,:,s_chunk:f_chunk]

            T_c_cae += 1/2 * einsum('JiBa,Iixa,Yx->IJYB', t1_xxee, t1_xxae, rdm_ca, optimize = einsum_type)
            T_c_cae -= 1/4 * einsum('JiBa,iIxa,Yx->IJYB', t1_xxee, t1_xxae, rdm_ca, optimize = einsum_type)
            T_c_cae -= 1/4 * einsum('iJBa,Iixa,Yx->IJYB', t1_xxee, t1_xxae, rdm_ca, optimize = einsum_type)
            T_c_cae += 1/4 * einsum('iJBa,iIxa,Yx->IJYB', t1_xxee, t1_xxae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_xxae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            t1_xvae = mr_adc.t1.xvae[:,:,:,s_chunk:f_chunk]
            t1_vxae = mr_adc.t1.vxae[:,:,:,s_chunk:f_chunk]

            T_c_cae += 1/2 * einsum('JiBa,Iixa,Yx->IJYB', t1_xvee, t1_xvae, rdm_ca, optimize = einsum_type)
            T_c_cae -= 1/4 * einsum('JiBa,iIxa,Yx->IJYB', t1_xvee, t1_vxae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee, t1_xvae, t1_vxae)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_xvae = mr_adc.t1.xvae[:,:,:,s_chunk:f_chunk]
            t1_vxae = mr_adc.t1.vxae[:,:,:,s_chunk:f_chunk]

            T_c_cae -= 1/4 * einsum('iJBa,Iixa,Yx->IJYB', t1_vxee, t1_xvae, rdm_ca, optimize = einsum_type)
            T_c_cae += 1/4 * einsum('iJBa,iIxa,Yx->IJYB', t1_vxee, t1_vxae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee, t1_xvae, t1_vxae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xe = mr_adc.t1.xe[:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_c_cae += 1/4 * einsum('JxBa,Ia,Yx->IJYB', t1_xaee, t1_xe, rdm_ca, optimize = einsum_type)
            T_c_cae += 1/4 * einsum('JxBa,Iyaz,Yyxz->IJYB', t1_xaee, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_c_cae += 1/4 * einsum('JxBa,Iyza,Yyzx->IJYB', t1_xaee, t1_xaae, rdm_ccaa, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_c_cae -= 1/4 * einsum('JxaB,Ia,Yx->IJYB', t1_xaee, t1_xe, rdm_ca, optimize = einsum_type)
            T_c_cae -= 1/4 * einsum('JxaB,Iyaz,Yyxz->IJYB', t1_xaee, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_c_cae += 1/12 * einsum('JxaB,Iyza,Yyxz->IJYB', t1_xaee, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_c_cae -= 1/12 * einsum('JxaB,Iyza,Yyzx->IJYB', t1_xaee, t1_xaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xe, t1_xaee, t1_xaae, t1_xaea)

        T[:, s_cae__aaa:f_cae__aaa] += T_c_cae.reshape(ncvs, -1)

        # Amplitudes
        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae

        t1_xaae = mr_adc.t1.xaae

        T_c_cae  = 1/4 * einsum('JixB,Iixy,Yy->IJYB', t1_xxae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cae -= 1/12 * einsum('JixB,Iiyz,Yxyz->IJYB', t1_xxae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/6 * einsum('JixB,Iiyz,Yxzy->IJYB', t1_xxae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/4 * einsum('JixB,Iixy,Yy->IJYB', t1_xvae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cae -= 1/12 * einsum('JixB,Iiyz,Yxyz->IJYB', t1_xvae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/6 * einsum('JixB,Iiyz,Yxzy->IJYB', t1_xvae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/6 * einsum('JxyB,Ixzw,Yywz->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/12 * einsum('JxyB,Ixzw,Yyzw->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('JxyB,Iy,Yx->IJYB', t1_xaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_c_cae += 1/12 * einsum('JxyB,Izwy,Yzwx->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/6 * einsum('JxyB,Izwy,Yzxw->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('JxyB,Izyw,Yzxw->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xxae = mr_adc.t1.xxae[:,:,:,s_chunk:f_chunk]

            T_c_cae += 1/4 * einsum('iJBa,iIxa,Yx->IJYB', t1_xxee, t1_xxae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_xxae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_vxae = mr_adc.t1.vxae[:,:,:,s_chunk:f_chunk]

            T_c_cae += 1/4 * einsum('iJBa,iIxa,Yx->IJYB', t1_vxee, t1_vxae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee, t1_vxae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xe = mr_adc.t1.xe[:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_c_cae -= 1/4 * einsum('JxaB,Ia,Yx->IJYB', t1_xaee, t1_xe, rdm_ca, optimize = einsum_type)
            T_c_cae -= 1/4 * einsum('JxaB,Iyaz,Yyxz->IJYB', t1_xaee, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_c_cae += 1/6 * einsum('JxaB,Iyza,Yyxz->IJYB', t1_xaee, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_c_cae += 1/12 * einsum('JxaB,Iyza,Yyzx->IJYB', t1_xaee, t1_xaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xe, t1_xaee, t1_xaae, t1_xaea)

        T[:, s_cae__abb:f_cae__abb] += T_c_cae.reshape(ncvs, -1)

        # Amplitudes
        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        t1_xaae = mr_adc.t1.xaae
        t1_xaea = mr_adc.t1.xaea

        T_c_cae =- 1/4 * einsum('JixB,Iiyx,Yy->IJYB', t1_xxae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cae += 1/6 * einsum('JixB,Iiyz,Yxyz->IJYB', t1_xxae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/12 * einsum('JixB,Iiyz,Yxzy->IJYB', t1_xxae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('JixB,Iiyx,Yy->IJYB', t1_xvae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cae += 1/6 * einsum('JixB,Iiyz,Yxyz->IJYB', t1_xvae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/12 * einsum('JixB,Iiyz,Yxzy->IJYB', t1_xvae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('JxBy,Ixzw,Yyzw->IJYB', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/4 * einsum('JxBy,Iy,Yx->IJYB', t1_xaea, t1_xa, rdm_ca, optimize = einsum_type)
        T_c_cae += 1/4 * einsum('JxBy,Izwy,Yzwx->IJYB', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/4 * einsum('JxBy,Izyw,Yzxw->IJYB', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/12 * einsum('JxyB,Ixzw,Yywz->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae += 1/6 * einsum('JxyB,Ixzw,Yyzw->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/6 * einsum('JxyB,Izwy,Yzwx->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/12 * einsum('JxyB,Izwy,Yzxw->IJYB', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('iJxB,Iixy,Yy->IJYB', t1_xxae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cae += 1/2 * einsum('iJxB,Iiyx,Yy->IJYB', t1_xxae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('iJxB,Iiyz,Yxyz->IJYB', t1_xxae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('iJxB,Iixy,Yy->IJYB', t1_vxae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cae += 1/2 * einsum('iJxB,Iiyx,Yy->IJYB', t1_vxae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cae -= 1/4 * einsum('iJxB,Iiyz,Yxyz->IJYB', t1_vxae, t1_xvaa, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xxae = mr_adc.t1.xxae[:,:,:,s_chunk:f_chunk]

            T_c_cae += 1/2 * einsum('JiBa,Iixa,Yx->IJYB', t1_xxee, t1_xxae, rdm_ca, optimize = einsum_type)
            T_c_cae -= 1/4 * einsum('JiBa,iIxa,Yx->IJYB', t1_xxee, t1_xxae, rdm_ca, optimize = einsum_type)
            T_c_cae -= 1/4 * einsum('iJBa,Iixa,Yx->IJYB', t1_xxee, t1_xxae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_xxae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            t1_xvae = mr_adc.t1.xvae[:,:,:,s_chunk:f_chunk]
            t1_vxae = mr_adc.t1.vxae[:,:,:,s_chunk:f_chunk]

            T_c_cae += 1/2 * einsum('JiBa,Iixa,Yx->IJYB', t1_xvee, t1_xvae, rdm_ca, optimize = einsum_type)
            T_c_cae -= 1/4 * einsum('JiBa,iIxa,Yx->IJYB', t1_xvee, t1_vxae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee, t1_xvae, t1_vxae)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]
            t1_xvae = mr_adc.t1.xvae[:,:,:,s_chunk:f_chunk]

            T_c_cae -= 1/4 * einsum('iJBa,Iixa,Yx->IJYB', t1_vxee, t1_xvae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee, t1_xvae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xe = mr_adc.t1.xe[:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_c_cae += 1/4 * einsum('JxBa,Ia,Yx->IJYB', t1_xaee, t1_xe, rdm_ca, optimize = einsum_type)
            T_c_cae += 1/4 * einsum('JxBa,Iyaz,Yyxz->IJYB', t1_xaee, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_c_cae += 1/4 * einsum('JxBa,Iyza,Yyzx->IJYB', t1_xaee, t1_xaae, rdm_ccaa, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_c_cae -= 1/12 * einsum('JxaB,Iyza,Yyxz->IJYB', t1_xaee, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_c_cae -= 1/6 * einsum('JxaB,Iyza,Yyzx->IJYB', t1_xaee, t1_xaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xe, t1_xaee, t1_xaae, t1_xaea)

        T[:, s_cae__bab:f_cae__bab] += T_c_cae.reshape(ncvs, -1)

        mr_adc.log.timer_debug("computing T q2-h1 C-CAE", *cput1)

    def compute_T__q2_h1__C_CCA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xe = mr_adc.t1.xe

        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        t1_xa = mr_adc.t1.xa

        t1_xaaa = mr_adc.t1.xaaa

        t1_xxae = mr_adc.t1.xxae

        t1_xxaa = mr_adc.t1.xxaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        T_c_cca =+ 1/2 * einsum('IYax,JKxa->IJKY', t1_xaea, t1_xxae, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('IYax,KJxa->IJKY', t1_xaea, t1_xxae, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('IYxa,JKxa->IJKY', t1_xaae, t1_xxae, optimize = einsum_type)
        T_c_cca += 1/2 * einsum('IYxa,KJxa->IJKY', t1_xaae, t1_xxae, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('IYxy,JKxy->IJKY', t1_xaaa, t1_xxaa, optimize = einsum_type)
        T_c_cca += 1/2 * einsum('IYxy,JKyx->IJKY', t1_xaaa, t1_xxaa, optimize = einsum_type)
        T_c_cca += 1/2 * einsum('Ia,JKYa->IJKY', t1_xe, t1_xxae, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('Ia,KJYa->IJKY', t1_xe, t1_xxae, optimize = einsum_type)
        T_c_cca += 1/2 * einsum('Ix,JKYx->IJKY', t1_xa, t1_xxaa, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('Ix,JKxY->IJKY', t1_xa, t1_xxaa, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('IYax,JKya,xy->IJKY', t1_xaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('IYax,KJya,xy->IJKY', t1_xaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('IYxa,JKya,xy->IJKY', t1_xaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('IYxa,KJya,xy->IJKY', t1_xaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('IYxy,JKxz,yz->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('IYxy,JKyz,xz->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('IYxy,JKzx,yz->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('IYxy,JKzy,xz->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('Ia,JKxa,Yx->IJKY', t1_xe, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ia,KJxa,Yx->IJKY', t1_xe, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ix,JKxy,Yy->IJKY', t1_xa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('Ix,JKyx,Yy->IJKY', t1_xa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/2 * einsum('Ixay,JKYa,xy->IJKY', t1_xaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('Ixay,JKya,Yx->IJKY', t1_xaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('Ixay,JKza,Yyzx->IJKY', t1_xaea, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('Ixay,KJYa,xy->IJKY', t1_xaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixay,KJya,Yx->IJKY', t1_xaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixay,KJza,Yyzx->IJKY', t1_xaea, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('Ixya,JKYa,xy->IJKY', t1_xaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixya,JKya,Yx->IJKY', t1_xaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/12 * einsum('Ixya,JKza,Yyxz->IJKY', t1_xaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_cca += 1/12 * einsum('Ixya,JKza,Yyzx->IJKY', t1_xaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixya,KJYa,xy->IJKY', t1_xaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('Ixya,KJya,Yx->IJKY', t1_xaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/12 * einsum('Ixya,KJza,Yyxz->IJKY', t1_xaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_cca -= 1/12 * einsum('Ixya,KJza,Yyzx->IJKY', t1_xaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_cca += 1/2 * einsum('Ixyz,JKYy,xz->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('Ixyz,JKYz,xy->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('Ixyz,JKwy,Yzwx->IJKY', t1_xaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cca += 1/12 * einsum('Ixyz,JKwz,Yywx->IJKY', t1_xaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cca -= 1/12 * einsum('Ixyz,JKwz,Yyxw->IJKY', t1_xaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('Ixyz,JKyY,xz->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixyz,JKyw,Yzwx->IJKY', t1_xaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixyz,JKyz,Yx->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixyz,JKzY,xy->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/12 * einsum('Ixyz,JKzw,Yywx->IJKY', t1_xaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cca += 1/12 * einsum('Ixyz,JKzw,Yyxw->IJKY', t1_xaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cca -= 1/4 * einsum('Ixyz,JKzy,Yx->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncvs, nextern],
                                                                           [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_c_cca -= 1/2 * einsum('IYab,JKab->IJKY', t1_xaee, t1_xxee, optimize = einsum_type)
            T_c_cca += 1/4 * einsum('Ixab,JKab,Yx->IJKY', t1_xaee, t1_xxee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            T_c_cca += 1/2 * einsum('IYab,JKba->IJKY', t1_xaee, t1_xxee, optimize = einsum_type)
            T_c_cca -= 1/4 * einsum('Ixab,JKba,Yx->IJKY', t1_xaee, t1_xxee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee t1.xaee", *cput2)
            del(t1_xxee, t1_xaee)

        T[:, s_cca__aaa:f_cca__aaa] += T_c_cca[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(ncvs, -1)


        T_c_cca =- 1/2 * einsum('IYax,KJxa->IJKY', t1_xaea, t1_xxae, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('IYxa,JKxa->IJKY', t1_xaae, t1_xxae, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('IYxy,JKxy->IJKY', t1_xaaa, t1_xxaa, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('Ia,KJYa->IJKY', t1_xe, t1_xxae, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('Ix,JKxY->IJKY', t1_xa, t1_xxaa, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('IYax,KJya,xy->IJKY', t1_xaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('IYxa,JKya,xy->IJKY', t1_xaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('IYxy,JKxz,yz->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('IYxy,JKzy,xz->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ia,KJxa,Yx->IJKY', t1_xe, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ix,JKxy,Yy->IJKY', t1_xa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('Ixay,KJYa,xy->IJKY', t1_xaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixay,KJya,Yx->IJKY', t1_xaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixay,KJza,Yyzx->IJKY', t1_xaea, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixya,JKya,Yx->IJKY', t1_xaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/6 * einsum('Ixya,JKza,Yyxz->IJKY', t1_xaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_cca -= 1/12 * einsum('Ixya,JKza,Yyzx->IJKY', t1_xaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixya,KJYa,xy->IJKY', t1_xaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/12 * einsum('Ixya,KJza,Yyxz->IJKY', t1_xaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_cca -= 1/6 * einsum('Ixya,KJza,Yyzx->IJKY', t1_xaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_c_cca -= 1/12 * einsum('Ixyz,JKwz,Yywx->IJKY', t1_xaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cca -= 1/6 * einsum('Ixyz,JKwz,Yyxw->IJKY', t1_xaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cca -= 1/2 * einsum('Ixyz,JKyY,xz->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixyz,JKyw,Yzwx->IJKY', t1_xaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixyz,JKyz,Yx->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca += 1/4 * einsum('Ixyz,JKzY,xy->IJKY', t1_xaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_c_cca -= 1/6 * einsum('Ixyz,JKzw,Yywx->IJKY', t1_xaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_c_cca -= 1/12 * einsum('Ixyz,JKzw,Yyxw->IJKY', t1_xaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncvs, nextern],
                                                                           [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_c_cca -= 1/2 * einsum('IYab,JKab->IJKY', t1_xaee, t1_xxee, optimize = einsum_type)
            T_c_cca += 1/4 * einsum('Ixab,JKab,Yx->IJKY', t1_xaee, t1_xxee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee t1.xaee", *cput2)
            del(t1_xxee, t1_xaee)

        T[:, s_cca__abb:f_cca__abb] += T_c_cca.reshape(ncvs, -1)

        mr_adc.log.timer_debug("computing T q2-h1 C-CCA", *cput1)

    def compute_T__q2_h1__C_CVE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs

        # Amplitudes
        t1_xa = mr_adc.t1.xa

        t1_xaaa = mr_adc.t1.xaaa

        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        T_c_cve =- 1/2 * einsum('JKxB,Ix->IJKB', t1_xvae, t1_xa, optimize = einsum_type)
        T_c_cve += 1/2 * einsum('KJxB,Ix->IJKB', t1_vxae, t1_xa, optimize = einsum_type)
        T_c_cve -= 1/2 * einsum('JKxB,Iyxz,yz->IJKB', t1_xvae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_cve += 1/4 * einsum('JKxB,Iyzx,yz->IJKB', t1_xvae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_cve += 1/2 * einsum('KJxB,Iyxz,yz->IJKB', t1_vxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_cve -= 1/4 * einsum('KJxB,Iyzx,yz->IJKB', t1_vxae, t1_xaaa, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xe = mr_adc.t1.xe[:,s_chunk:f_chunk]
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_c_cve += 1/2 * einsum('JKBa,Ia->IJKB', t1_xvee, t1_xe, optimize = einsum_type)
            T_c_cve += 1/2 * einsum('JKBa,Ixay,xy->IJKB', t1_xvee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_c_cve -= 1/4 * einsum('JKBa,Ixya,xy->IJKB', t1_xvee, t1_xaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xe, t1_xvee, t1_xaae, t1_xaea)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xe = mr_adc.t1.xe[:,s_chunk:f_chunk]
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_c_cve -= 1/2 * einsum('KJBa,Ia->IJKB', t1_vxee, t1_xe, optimize = einsum_type)
            T_c_cve -= 1/2 * einsum('KJBa,Ixay,xy->IJKB', t1_vxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_c_cve += 1/4 * einsum('KJBa,Ixya,xy->IJKB', t1_vxee, t1_xaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_xe, t1_vxee, t1_xaae, t1_xaea)

        T[:, s_cve__aaa:f_cve__aaa] += T_c_cve.reshape(ncvs, -1)


        T_c_cve =- 1/2 * einsum('JKxB,Ix->IJKB', t1_xvae, t1_xa, optimize = einsum_type)
        T_c_cve -= 1/2 * einsum('JKxB,Iyxz,yz->IJKB', t1_xvae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_cve += 1/4 * einsum('JKxB,Iyzx,yz->IJKB', t1_xvae, t1_xaaa, rdm_ca, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xe = mr_adc.t1.xe[:,s_chunk:f_chunk]
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_c_cve -= 1/2 * einsum('KJBa,Ia->IJKB', t1_vxee, t1_xe, optimize = einsum_type)
            T_c_cve -= 1/2 * einsum('KJBa,Ixay,xy->IJKB', t1_vxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_c_cve += 1/4 * einsum('KJBa,Ixya,xy->IJKB', t1_vxee, t1_xaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_xe, t1_vxee, t1_xaae, t1_xaea)

        T[:, s_cve__abb:f_cve__abb] += T_c_cve.reshape(ncvs, -1)


        T_c_cve  = 1/2 * einsum('KJxB,Ix->IJKB', t1_vxae, t1_xa, optimize = einsum_type)
        T_c_cve += 1/2 * einsum('KJxB,Iyxz,yz->IJKB', t1_vxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_c_cve -= 1/4 * einsum('KJxB,Iyzx,yz->IJKB', t1_vxae, t1_xaaa, rdm_ca, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xe = mr_adc.t1.xe[:,s_chunk:f_chunk]
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_c_cve += 1/2 * einsum('JKBa,Ia->IJKB', t1_xvee, t1_xe, optimize = einsum_type)
            T_c_cve += 1/2 * einsum('JKBa,Ixay,xy->IJKB', t1_xvee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_c_cve -= 1/4 * einsum('JKBa,Ixya,xy->IJKB', t1_xvee, t1_xaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xe, t1_xvee, t1_xaae, t1_xaea)

        T[:, s_cve__bab:f_cve__bab] += T_c_cve.reshape(ncvs, -1)

        mr_adc.log.timer_debug("computing T q2-h1 C-CVE", *cput1)

    def compute_T__q2_h1__C_CVA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xe = mr_adc.t1.xe

        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        t1_xa = mr_adc.t1.xa

        t1_xaaa = mr_adc.t1.xaaa

        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        t1_xvaa = mr_adc.t1.xvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        T_c_cva  = 1/2 * einsum('IYax,JKxa->IJKY', t1_xaea, t1_xvae, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('IYax,KJxa->IJKY', t1_xaea, t1_vxae, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('IYxa,JKxa->IJKY', t1_xaae, t1_xvae, optimize = einsum_type)
        T_c_cva += 1/2 * einsum('IYxa,KJxa->IJKY', t1_xaae, t1_vxae, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('IYxy,JKxy->IJKY', t1_xaaa, t1_xvaa, optimize = einsum_type)
        T_c_cva += 1/2 * einsum('IYxy,JKyx->IJKY', t1_xaaa, t1_xvaa, optimize = einsum_type)
        T_c_cva += 1/2 * einsum('Ia,JKYa->IJKY', t1_xe, t1_xvae, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('Ia,KJYa->IJKY', t1_xe, t1_vxae, optimize = einsum_type)
        T_c_cva += 1/2 * einsum('Ix,JKYx->IJKY', t1_xa, t1_xvaa, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('Ix,JKxY->IJKY', t1_xa, t1_xvaa, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('IYax,JKya,xy->IJKY', t1_xaea, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('IYax,KJya,xy->IJKY', t1_xaea, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('IYxa,JKya,xy->IJKY', t1_xaae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('IYxa,KJya,xy->IJKY', t1_xaae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('IYxy,JKxz,yz->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('IYxy,JKyz,xz->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('IYxy,JKzx,yz->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('IYxy,JKzy,xz->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ia,JKxa,Yx->IJKY', t1_xe, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ia,KJxa,Yx->IJKY', t1_xe, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ix,JKxy,Yy->IJKY', t1_xa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ix,JKyx,Yy->IJKY', t1_xa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/2 * einsum('Ixay,JKYa,xy->IJKY', t1_xaea, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixay,JKya,Yx->IJKY', t1_xaea, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixay,JKza,Yyzx->IJKY', t1_xaea, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('Ixay,KJYa,xy->IJKY', t1_xaea, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixay,KJya,Yx->IJKY', t1_xaea, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixay,KJza,Yyzx->IJKY', t1_xaea, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixya,JKYa,xy->IJKY', t1_xaae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixya,JKya,Yx->IJKY', t1_xaae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/12 * einsum('Ixya,JKza,Yyxz->IJKY', t1_xaae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/12 * einsum('Ixya,JKza,Yyzx->IJKY', t1_xaae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixya,KJYa,xy->IJKY', t1_xaae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixya,KJya,Yx->IJKY', t1_xaae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/12 * einsum('Ixya,KJza,Yyxz->IJKY', t1_xaae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/12 * einsum('Ixya,KJza,Yyzx->IJKY', t1_xaae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/2 * einsum('Ixyz,JKYy,xz->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixyz,JKYz,xy->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixyz,JKwy,Yzwx->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/12 * einsum('Ixyz,JKwz,Yywx->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/12 * einsum('Ixyz,JKwz,Yyxw->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('Ixyz,JKyY,xz->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixyz,JKyw,Yzwx->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixyz,JKyz,Yx->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixyz,JKzY,xy->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/12 * einsum('Ixyz,JKzw,Yywx->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/12 * einsum('Ixyz,JKzw,Yyxw->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixyz,JKzy,Yx->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, nval, nextern],
                                                                           [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_c_cva -= 1/2 * einsum('IYab,JKab->IJKY', t1_xaee, t1_xvee, optimize = einsum_type)
            T_c_cva += 1/4 * einsum('Ixab,JKab,Yx->IJKY', t1_xaee, t1_xvee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            T_c_cva -= 1/4 * einsum('Ixab,JKba,Yx->IJKY', t1_xaee, t1_xvee, rdm_ca, optimize = einsum_type)
            T_c_cva += 1/2 * einsum('IYab,JKba->IJKY', t1_xaee, t1_xvee, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee t1.xaee", *cput2)
            del(t1_xvee, t1_xaee)

        T[:, s_cva__aaa:f_cva__aaa] += T_c_cva.reshape(ncvs, -1)


        T_c_cva =- 1/2 * einsum('IYax,KJxa->IJKY', t1_xaea, t1_vxae, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('IYxa,JKxa->IJKY', t1_xaae, t1_xvae, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('IYxy,JKxy->IJKY', t1_xaaa, t1_xvaa, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('Ia,KJYa->IJKY', t1_xe, t1_vxae, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('Ix,JKxY->IJKY', t1_xa, t1_xvaa, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('IYax,KJya,xy->IJKY', t1_xaea, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('IYxa,JKya,xy->IJKY', t1_xaae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('IYxy,JKxz,yz->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('IYxy,JKzy,xz->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ia,KJxa,Yx->IJKY', t1_xe, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ix,JKxy,Yy->IJKY', t1_xa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('Ixay,KJYa,xy->IJKY', t1_xaea, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixay,KJya,Yx->IJKY', t1_xaea, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixay,KJza,Yyzx->IJKY', t1_xaea, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixya,JKya,Yx->IJKY', t1_xaae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/6 * einsum('Ixya,JKza,Yyxz->IJKY', t1_xaae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/12 * einsum('Ixya,JKza,Yyzx->IJKY', t1_xaae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixya,KJYa,xy->IJKY', t1_xaae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/12 * einsum('Ixya,KJza,Yyxz->IJKY', t1_xaae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/6 * einsum('Ixya,KJza,Yyzx->IJKY', t1_xaae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/12 * einsum('Ixyz,JKwz,Yywx->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/6 * einsum('Ixyz,JKwz,Yyxw->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/2 * einsum('Ixyz,JKyY,xz->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixyz,JKyw,Yzwx->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixyz,JKyz,Yx->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/4 * einsum('Ixyz,JKzY,xy->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/6 * einsum('Ixyz,JKzw,Yywx->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/12 * einsum('Ixyz,JKzw,Yyxw->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_c_cva -= 1/2 * einsum('IYab,JKab->IJKY', t1_xaee, t1_xvee, optimize = einsum_type)
            T_c_cva += 1/4 * einsum('Ixab,JKab,Yx->IJKY', t1_xaee, t1_xvee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee t1.xaee", *cput2)
            del(t1_xvee, t1_xaee)

        T[:, s_cva__abb:f_cva__abb] += T_c_cva.reshape(ncvs, -1)


        T_c_cva  = 1/2 * einsum('IYax,JKxa->IJKY', t1_xaea, t1_xvae, optimize = einsum_type)
        T_c_cva += 1/2 * einsum('IYxa,KJxa->IJKY', t1_xaae, t1_vxae, optimize = einsum_type)
        T_c_cva += 1/2 * einsum('IYxy,JKyx->IJKY', t1_xaaa, t1_xvaa, optimize = einsum_type)
        T_c_cva += 1/2 * einsum('Ia,JKYa->IJKY', t1_xe, t1_xvae, optimize = einsum_type)
        T_c_cva += 1/2 * einsum('Ix,JKYx->IJKY', t1_xa, t1_xvaa, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('IYax,JKya,xy->IJKY', t1_xaea, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('IYxa,KJya,xy->IJKY', t1_xaae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('IYxy,JKyz,xz->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('IYxy,JKzx,yz->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ia,JKxa,Yx->IJKY', t1_xe, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ix,JKyx,Yy->IJKY', t1_xa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/2 * einsum('Ixay,JKYa,xy->IJKY', t1_xaea, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixay,JKya,Yx->IJKY', t1_xaea, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixay,JKza,Yyzx->IJKY', t1_xaea, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixya,JKYa,xy->IJKY', t1_xaae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/12 * einsum('Ixya,JKza,Yyxz->IJKY', t1_xaae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/6 * einsum('Ixya,JKza,Yyzx->IJKY', t1_xaae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixya,KJya,Yx->IJKY', t1_xaae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_c_cva += 1/6 * einsum('Ixya,KJza,Yyxz->IJKY', t1_xaae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/12 * einsum('Ixya,KJza,Yyzx->IJKY', t1_xaae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/2 * einsum('Ixyz,JKYy,xz->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixyz,JKYz,xy->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixyz,JKwy,Yzwx->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/6 * einsum('Ixyz,JKwz,Yywx->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/12 * einsum('Ixyz,JKwz,Yyxw->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/12 * einsum('Ixyz,JKzw,Yywx->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva += 1/6 * einsum('Ixyz,JKzw,Yyxw->IJKY', t1_xaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_c_cva -= 1/4 * einsum('Ixyz,JKzy,Yx->IJKY', t1_xaaa, t1_xvaa, rdm_ca, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_c_cva += 1/2 * einsum('IYab,JKba->IJKY', t1_xaee, t1_xvee, optimize = einsum_type)
            T_c_cva -= 1/4 * einsum('Ixab,JKba,Yx->IJKY', t1_xaee, t1_xvee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee t1.xaee", *cput2)
            del(t1_xvee, t1_xaee)

        T[:, s_cva__bab:f_cva__bab] += T_c_cva.reshape(ncvs, -1)

        mr_adc.log.timer_debug("computing T q2-h1 C-CVA", *cput1)

    def compute_T__q2_h0__V_C(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xe = mr_adc.t1.xe
        t1_ve = mr_adc.t1.ve

        t1_xaea = mr_adc.t1.xaea
        t1_vaea = mr_adc.t1.vaea

        t1_xaae = mr_adc.t1.xaae
        t1_vaae = mr_adc.t1.vaae

        t1_xa = mr_adc.t1.xa
        t1_va = mr_adc.t1.va

        t1_xaaa = mr_adc.t1.xaaa
        t1_vaaa = mr_adc.t1.vaaa

        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae
        t1_vvae = mr_adc.t1.vvae

        t1_xxaa = mr_adc.t1.xxaa
        t1_xvaa = mr_adc.t1.xvaa
        t1_vxaa = mr_adc.t1.vxaa
        t1_vvaa = mr_adc.t1.vvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_c = mr_adc.h0.s_c
        f_c = mr_adc.h0.f_c

        T_v_c =- 1/2 * einsum('Ia,Ja->IJ', t1_ve, t1_xe, optimize = einsum_type)
        T_v_c -= einsum('Iixa,Jixa->IJ', t1_vxae, t1_xxae, optimize = einsum_type)
        T_v_c += 1/2 * einsum('Iixa,iJxa->IJ', t1_vxae, t1_xxae, optimize = einsum_type)
        T_v_c -= einsum('Iixy,Jixy->IJ', t1_vxaa, t1_xxaa, optimize = einsum_type)
        T_v_c += 1/2 * einsum('Iixy,Jiyx->IJ', t1_vxaa, t1_xxaa, optimize = einsum_type)
        T_v_c -= einsum('Iixa,Jixa->IJ', t1_vvae, t1_xvae, optimize = einsum_type)
        T_v_c += 1/2 * einsum('Iixa,iJxa->IJ', t1_vvae, t1_vxae, optimize = einsum_type)
        T_v_c -= einsum('Iixy,Jixy->IJ', t1_vvaa, t1_xvaa, optimize = einsum_type)
        T_v_c += 1/2 * einsum('Iixy,Jiyx->IJ', t1_vvaa, t1_xvaa, optimize = einsum_type)
        T_v_c -= 1/2 * einsum('Ix,Jx->IJ', t1_va, t1_xa, optimize = einsum_type)
        T_v_c += 1/2 * einsum('iIxa,Jixa->IJ', t1_xvae, t1_xxae, optimize = einsum_type)
        T_v_c -= einsum('iIxa,iJxa->IJ', t1_xvae, t1_xxae, optimize = einsum_type)
        T_v_c += 1/2 * einsum('iIxa,Jixa->IJ', t1_vvae, t1_xvae, optimize = einsum_type)
        T_v_c -= einsum('iIxa,iJxa->IJ', t1_vvae, t1_vxae, optimize = einsum_type)
        T_v_c -= 1/2 * einsum('Ia,Jxay,xy->IJ', t1_ve, t1_xaea, rdm_ca, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ia,Jxya,xy->IJ', t1_ve, t1_xaae, rdm_ca, optimize = einsum_type)
        T_v_c += 1/2 * einsum('Iixa,Jiya,xy->IJ', t1_vxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_c -= 1/4 * einsum('Iixa,iJya,xy->IJ', t1_vxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_c += 1/2 * einsum('Iixy,Jixz,yz->IJ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_c -= 1/4 * einsum('Iixy,Jiyz,xz->IJ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_c -= 1/4 * einsum('Iixy,Jizw,xyzw->IJ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_c -= 1/4 * einsum('Iixy,Jizx,yz->IJ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_c += 1/2 * einsum('Iixy,Jizy,xz->IJ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_c += 1/2 * einsum('Iixa,Jiya,xy->IJ', t1_vvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_c -= 1/4 * einsum('Iixa,iJya,xy->IJ', t1_vvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_c += 1/2 * einsum('Iixy,Jixz,yz->IJ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_c -= 1/4 * einsum('Iixy,Jiyz,xz->IJ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_c -= 1/4 * einsum('Iixy,Jizw,xyzw->IJ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_c -= 1/4 * einsum('Iixy,Jizx,yz->IJ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_c += 1/2 * einsum('Iixy,Jizy,xz->IJ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_c -= 1/2 * einsum('Ix,Jyxz,yz->IJ', t1_va, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ix,Jyzx,yz->IJ', t1_va, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_v_c -= 1/2 * einsum('Ixay,Ja,xy->IJ', t1_vaea, t1_xe, rdm_ca, optimize = einsum_type)
        T_v_c -= 1/2 * einsum('Ixay,Jzaw,xwyz->IJ', t1_vaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_c -= 1/2 * einsum('Ixay,Jzay,xz->IJ', t1_vaea, t1_xaea, rdm_ca, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ixay,Jzwa,xwyz->IJ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ixay,Jzya,xz->IJ', t1_vaea, t1_xaae, rdm_ca, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ixya,Ja,xy->IJ', t1_vaae, t1_xe, rdm_ca, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ixya,Jzaw,xwyz->IJ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ixya,Jzay,xz->IJ', t1_vaae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ixya,Jzwa,xwzy->IJ', t1_vaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_c -= 1/2 * einsum('Ixya,Jzya,xz->IJ', t1_vaae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ixyz,Jwuy,xuzw->IJ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ixyz,Jwuz,xuwy->IJ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_c -= 1/2 * einsum('Ixyz,Jwyu,xuzw->IJ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_c -= 1/2 * einsum('Ixyz,Jwyz,xw->IJ', t1_vaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ixyz,Jwzu,xuyw->IJ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ixyz,Jwzy,xw->IJ', t1_vaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_v_c -= 1/4 * einsum('Ixyz,Jxwu,yzwu->IJ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_c -= 1/2 * einsum('Ixyz,Jy,xz->IJ', t1_vaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_v_c += 1/4 * einsum('Ixyz,Jz,xy->IJ', t1_vaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_v_c -= 1/4 * einsum('iIxa,Jiya,xy->IJ', t1_xvae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_c += 1/2 * einsum('iIxa,iJya,xy->IJ', t1_xvae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_c -= 1/4 * einsum('iIxa,Jiya,xy->IJ', t1_vvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_c += 1/2 * einsum('iIxa,iJya,xy->IJ', t1_vvae, t1_vxae, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncvs, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
            t1_vxee = mr_adc.t1.vxee[:,:,s_chunk:f_chunk]

            T_v_c -= einsum('Iiab,Jiab->IJ', t1_vxee, t1_xxee, optimize = einsum_type)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            T_v_c += 1/2 * einsum('Iiab,Jiba->IJ', t1_vxee, t1_xxee, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee t1.vxee", *cput2)
            del(t1_xxee, t1_vxee)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, nval, nextern],
                                                                           [nval, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vvee t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vvee = mr_adc.t1.vvee[:,:,s_chunk:f_chunk]
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_v_c -= einsum('Iiab,Jiab->IJ', t1_vvee, t1_xvee, optimize = einsum_type)

            # Amplitudes
            t1_vvee = mr_adc.t1.vvee[:,:,:,s_chunk:f_chunk]

            T_v_c += 1/2 * einsum('Iiab,Jiba->IJ', t1_vvee, t1_xvee, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vvee t1.xvee", *cput2)
            del(t1_vvee, t1_xvee)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [nval, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee t1.vaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]

            T_v_c -= 1/2 * einsum('Ixab,Jyab,xy->IJ', t1_vaee, t1_xaee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_v_c += 1/4 * einsum('Ixab,Jyba,xy->IJ', t1_vaee, t1_xaee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee t1.vaee", *cput2)
            del(t1_xaee, t1_vaee)

        T[:, s_c:f_c] += T_v_c.copy()

        mr_adc.log.timer_debug("computing T q2-h0 V-C", *cput1)

    def compute_T__q2_h1__V_CAA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xe = mr_adc.t1.xe
        t1_ve = mr_adc.t1.ve

        t1_xaea = mr_adc.t1.xaea
        t1_vaea = mr_adc.t1.vaea

        t1_xaae = mr_adc.t1.xaae
        t1_vaae = mr_adc.t1.vaae

        t1_xa = mr_adc.t1.xa
        t1_va = mr_adc.t1.va

        t1_xaaa = mr_adc.t1.xaaa
        t1_vaaa = mr_adc.t1.vaaa

        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae
        t1_vvae = mr_adc.t1.vvae

        t1_xxaa = mr_adc.t1.xxaa
        t1_xvaa = mr_adc.t1.xvaa
        t1_vxaa = mr_adc.t1.vxaa
        t1_vvaa = mr_adc.t1.vvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        T_v_caa =- 1/4 * einsum('IZax,Ja,Yx->IJYZ', t1_vaea, t1_xe, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('IZax,Jyax,Yy->IJYZ', t1_vaea, t1_xaea, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('IZax,Jyaz,Yzxy->IJYZ', t1_vaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZax,Jyxa,Yy->IJYZ', t1_vaea, t1_xaae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('IZax,Jyza,Yzxy->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('IZax,Jyza,Yzyx->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZxa,Ja,Yx->IJYZ', t1_vaae, t1_xe, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZxa,Jyax,Yy->IJYZ', t1_vaae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZxa,Jyaz,Yzxy->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('IZxa,Jyxa,Yy->IJYZ', t1_vaae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('IZxa,Jyza,Yzxy->IJYZ', t1_vaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('IZxa,Jyza,Yzyx->IJYZ', t1_vaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('IZxy,Jx,Yy->IJYZ', t1_vaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZxy,Jy,Yx->IJYZ', t1_vaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('IZxy,Jzwx,Ywyz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('IZxy,Jzwx,Ywzy->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('IZxy,Jzwy,Ywxz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('IZxy,Jzwy,Ywzx->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('IZxy,Jzxw,Ywyz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('IZxy,Jzxy,Yz->IJYZ', t1_vaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZxy,Jzyw,Ywxz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZxy,Jzyx,Yz->IJYZ', t1_vaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ia,Ja,YZ->IJYZ', t1_ve, t1_xe, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Ia,JxZa,Yx->IJYZ', t1_ve, t1_xaae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ia,JxaZ,Yx->IJYZ', t1_ve, t1_xaea, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ia,Jxay,YyZx->IJYZ', t1_ve, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ia,Jxya,YyZx->IJYZ', t1_ve, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ia,Jxya,YyxZ->IJYZ', t1_ve, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/2 * einsum('Iixa,JiZa,Yx->IJYZ', t1_vxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/2 * einsum('Iixa,Jixa,YZ->IJYZ', t1_vxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixa,Jiya,YyZx->IJYZ', t1_vxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixa,Jiya,YyxZ->IJYZ', t1_vxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixa,iJZa,Yx->IJYZ', t1_vxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixa,iJxa,YZ->IJYZ', t1_vxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixa,iJya,YyZx->IJYZ', t1_vxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixa,iJya,YyxZ->IJYZ', t1_vxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixy,JiZx,Yy->IJYZ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/2 * einsum('Iixy,JiZy,Yx->IJYZ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixy,JiZz,Yzxy->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixy,JixZ,Yy->IJYZ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/2 * einsum('Iixy,Jixy,YZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixy,Jixz,YzZy->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixy,JiyZ,Yx->IJYZ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixy,Jiyx,YZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jiyz,YzZx->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,Jiyz,YzxZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,JizZ,Yzxy->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,JizZ,Yzyx->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizw,YzwZxy->IJYZ', t1_vxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,Jizw,YzwxZy->IJYZ', t1_vxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizx,YzZy->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,Jizx,YzyZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixy,Jizy,YzZx->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixy,Jizy,YzxZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/2 * einsum('Iixa,JiZa,Yx->IJYZ', t1_vvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/2 * einsum('Iixa,Jixa,YZ->IJYZ', t1_vvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixa,Jiya,YyZx->IJYZ', t1_vvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixa,Jiya,YyxZ->IJYZ', t1_vvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixa,iJZa,Yx->IJYZ', t1_vvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixa,iJxa,YZ->IJYZ', t1_vvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixa,iJya,YyZx->IJYZ', t1_vvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixa,iJya,YyxZ->IJYZ', t1_vvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixy,JiZx,Yy->IJYZ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/2 * einsum('Iixy,JiZy,Yx->IJYZ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixy,JiZz,Yzxy->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixy,JixZ,Yy->IJYZ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/2 * einsum('Iixy,Jixy,YZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixy,Jixz,YzZy->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixy,JiyZ,Yx->IJYZ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixy,Jiyx,YZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jiyz,YzZx->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,Jiyz,YzxZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,JizZ,Yzxy->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,JizZ,Yzyx->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizw,YzwZxy->IJYZ', t1_vvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,Jizw,YzwxZy->IJYZ', t1_vvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizx,YzZy->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,Jizx,YzyZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixy,Jizy,YzZx->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixy,Jizy,YzxZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ix,Jx,YZ->IJYZ', t1_va, t1_xa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Ix,JyZx,Yy->IJYZ', t1_va, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ix,JyxZ,Yy->IJYZ', t1_va, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ix,Jyxz,YzZy->IJYZ', t1_va, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ix,Jyzx,YzZy->IJYZ', t1_va, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ix,Jyzx,YzyZ->IJYZ', t1_va, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixay,Ja,YxZy->IJYZ', t1_vaea, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Ixay,JzZa,Yxzy->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixay,JzaZ,Yxzy->IJYZ', t1_vaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixay,Jzaw,YxwZyz->IJYZ', t1_vaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixay,Jzay,YxZz->IJYZ', t1_vaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixay,Jzwa,YxwZyz->IJYZ', t1_vaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixay,Jzwa,YxwzyZ->IJYZ', t1_vaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixay,Jzya,YxZz->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixay,Jzya,YxzZ->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,Ja,YxZy->IJYZ', t1_vaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,Ja,YxyZ->IJYZ', t1_vaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Ixya,JzZa,Yxyz->IJYZ', t1_vaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,JzaZ,Yxyz->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,JzaZ,Yxzy->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,Jzaw,YxwZyz->IJYZ', t1_vaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,Jzaw,YxwyZz->IJYZ', t1_vaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,Jzay,YxZz->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,Jzay,YxzZ->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,Jzwa,YxwZzy->IJYZ', t1_vaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,Jzwa,YxwyzZ->IJYZ', t1_vaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixya,Jzya,YxZz->IJYZ', t1_vaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Ixyz,JwZy,Yxwz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Ixyz,JwZz,Yxyw->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwuy,YxuZzw->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jwuy,YxuwzZ->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwuz,YxuZwy->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jwuz,YxuywZ->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixyz,JwyZ,Yxwz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixyz,Jwyu,YxuZzw->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixyz,Jwyz,YxZw->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,JwzZ,Yxwy->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,JwzZ,Yxyw->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwzu,YxuZyw->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jwzu,YxuyZw->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwzy,YxZw->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jwzy,YxwZ->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixyz,JxZw,Ywyz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,JxwZ,Ywyz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,JxwZ,Ywzy->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jxwu,YwuZyz->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jxwu,YwuyZz->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixyz,Jy,YxZz->IJYZ', t1_vaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jz,YxZy->IJYZ', t1_vaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jz,YxyZ->IJYZ', t1_vaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('iIxa,JiZa,Yx->IJYZ', t1_xvae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('iIxa,Jixa,YZ->IJYZ', t1_xvae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('iIxa,Jiya,YyZx->IJYZ', t1_xvae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('iIxa,Jiya,YyxZ->IJYZ', t1_xvae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('iIxa,iJZa,Yx->IJYZ', t1_xvae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/2 * einsum('iIxa,iJxa,YZ->IJYZ', t1_xvae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('iIxa,iJya,YyZx->IJYZ', t1_xvae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('iIxa,JiZa,Yx->IJYZ', t1_vvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('iIxa,Jixa,YZ->IJYZ', t1_vvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('iIxa,Jiya,YyZx->IJYZ', t1_vvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('iIxa,Jiya,YyxZ->IJYZ', t1_vvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('iIxa,iJZa,Yx->IJYZ', t1_vvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/2 * einsum('iIxa,iJxa,YZ->IJYZ', t1_vvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('iIxa,iJya,YyZx->IJYZ', t1_vvae, t1_vxae, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [nval, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee t1.vaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]

            T_v_caa -= 1/4 * einsum('IZab,Jxab,Yx->IJYZ', t1_vaee, t1_xaee, rdm_ca, optimize = einsum_type)
            T_v_caa -= 1/4 * einsum('Ixab,Jyab,YxZy->IJYZ', t1_vaee, t1_xaee, rdm_ccaa, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_v_caa += 1/4 * einsum('IZab,Jxba,Yx->IJYZ', t1_vaee, t1_xaee, rdm_ca, optimize = einsum_type)
            T_v_caa += 1/12 * einsum('Ixab,Jyba,YxZy->IJYZ', t1_vaee, t1_xaee, rdm_ccaa, optimize = einsum_type)
            T_v_caa -= 1/12 * einsum('Ixab,Jyba,YxyZ->IJYZ', t1_vaee, t1_xaee, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee t1.vaee", *cput2)
            del(t1_xaee, t1_vaee)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncvs, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
            t1_vxee = mr_adc.t1.vxee[:,:,s_chunk:f_chunk]

            T_v_caa -= 1/2 * einsum('Iiab,Jiab,YZ->IJYZ', t1_vxee, t1_xxee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            T_v_caa += 1/4 * einsum('Iiab,Jiba,YZ->IJYZ', t1_vxee, t1_xxee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee t1.vxee", *cput2)
            del(t1_xxee, t1_vxee)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [nval, nval, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vvee t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vvee = mr_adc.t1.vvee[:,:,s_chunk:f_chunk]
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_v_caa -= 1/2 * einsum('Iiab,Jiab,YZ->IJYZ', t1_vvee, t1_xvee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            T_v_caa += 1/4 * einsum('Iiab,Jiba,YZ->IJYZ', t1_vvee, t1_xvee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vvee t1.xvee", *cput2)
            del(t1_vvee, t1_xvee)

        T[:, s_caa__aaa:f_caa__aaa] += T_v_caa.reshape(nval, -1)


        T_v_caa =- 1/4 * einsum('IZax,Ja,Yx->IJYZ', t1_vaea, t1_xe, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('IZax,Jyax,Yy->IJYZ', t1_vaea, t1_xaea, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('IZax,Jyaz,Yzxy->IJYZ', t1_vaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('IZax,Jyza,Yzxy->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('IZax,Jyza,Yzyx->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('IZxa,Jyxa,Yy->IJYZ', t1_vaae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('IZxa,Jyza,Yzxy->IJYZ', t1_vaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('IZxa,Jyza,Yzyx->IJYZ', t1_vaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('IZxy,Jx,Yy->IJYZ', t1_vaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('IZxy,Jzwx,Ywyz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('IZxy,Jzwx,Ywzy->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('IZxy,Jzwy,Ywxz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('IZxy,Jzwy,Ywzx->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('IZxy,Jzxw,Ywyz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('IZxy,Jzxy,Yz->IJYZ', t1_vaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ia,Ja,YZ->IJYZ', t1_ve, t1_xe, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ia,JxaZ,Yx->IJYZ', t1_ve, t1_xaea, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ia,Jxay,YyZx->IJYZ', t1_ve, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ia,Jxya,YyZx->IJYZ', t1_ve, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ia,Jxya,YyxZ->IJYZ', t1_ve, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/2 * einsum('Iixa,Jixa,YZ->IJYZ', t1_vxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/3 * einsum('Iixa,Jiya,YyZx->IJYZ', t1_vxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixa,Jiya,YyxZ->IJYZ', t1_vxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixa,iJxa,YZ->IJYZ', t1_vxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixa,iJya,YyZx->IJYZ', t1_vxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixa,iJya,YyxZ->IJYZ', t1_vxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixy,JixZ,Yy->IJYZ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/2 * einsum('Iixy,Jixy,YZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixy,Jixz,YzZy->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixy,Jiyx,YZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixy,Jiyz,YzZx->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jiyz,YzxZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,JizZ,Yzxy->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixy,JizZ,Yzyx->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixy,Jizw,YzwZxy->IJYZ', t1_vxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizw,YzwxZy->IJYZ', t1_vxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixy,Jizx,YzZy->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizx,YzyZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/3 * einsum('Iixy,Jizy,YzZx->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixy,Jizy,YzxZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/2 * einsum('Iixa,Jixa,YZ->IJYZ', t1_vvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/3 * einsum('Iixa,Jiya,YyZx->IJYZ', t1_vvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixa,Jiya,YyxZ->IJYZ', t1_vvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixa,iJxa,YZ->IJYZ', t1_vvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixa,iJya,YyZx->IJYZ', t1_vvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixa,iJya,YyxZ->IJYZ', t1_vvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixy,JixZ,Yy->IJYZ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/2 * einsum('Iixy,Jixy,YZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixy,Jixz,YzZy->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Iixy,Jiyx,YZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixy,Jiyz,YzZx->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jiyz,YzxZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,JizZ,Yzxy->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixy,JizZ,Yzyx->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixy,Jizw,YzwZxy->IJYZ', t1_vvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizw,YzwxZy->IJYZ', t1_vvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixy,Jizx,YzZy->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizx,YzyZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/3 * einsum('Iixy,Jizy,YzZx->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixy,Jizy,YzxZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ix,Jx,YZ->IJYZ', t1_va, t1_xa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ix,JyxZ,Yy->IJYZ', t1_va, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ix,Jyxz,YzZy->IJYZ', t1_va, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ix,Jyzx,YzZy->IJYZ', t1_va, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ix,Jyzx,YzyZ->IJYZ', t1_va, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixay,Ja,YxZy->IJYZ', t1_vaea, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixay,JzaZ,Yxzy->IJYZ', t1_vaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixay,Jzaw,YxwZyz->IJYZ', t1_vaea, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixay,Jzay,YxZz->IJYZ', t1_vaea, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ixay,Jzwa,YxwZyz->IJYZ', t1_vaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixay,Jzwa,YxwzyZ->IJYZ', t1_vaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ixay,Jzya,YxZz->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixay,Jzya,YxzZ->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ixya,Ja,YxZy->IJYZ', t1_vaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,Ja,YxyZ->IJYZ', t1_vaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,JzaZ,Yxyz->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ixya,JzaZ,Yxzy->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ixya,Jzaw,YxwZyz->IJYZ', t1_vaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,Jzaw,YxwyZz->IJYZ', t1_vaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ixya,Jzay,YxZz->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,Jzay,YxzZ->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,Jzwa,YxwZyz->IJYZ', t1_vaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,Jzwa,YxwZzy->IJYZ', t1_vaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,Jzwa,YxwyZz->IJYZ', t1_vaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,Jzwa,YxwzZy->IJYZ', t1_vaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,Jzwa,YxwzyZ->IJYZ', t1_vaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixya,Jzya,YxZz->IJYZ', t1_vaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ixyz,Jwuy,YxuZzw->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwuy,YxuwzZ->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwuz,YxuZwy->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jwuz,YxuZyw->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jwuz,YxuwZy->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jwuz,YxuwyZ->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jwuz,YxuyZw->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixyz,JwyZ,Yxwz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixyz,Jwyu,YxuZzw->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixyz,Jwyz,YxZw->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ixyz,JwzZ,Yxwy->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,JwzZ,Yxyw->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ixyz,Jwzu,YxuZyw->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwzu,YxuyZw->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ixyz,Jwzy,YxZw->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwzy,YxwZ->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,JxwZ,Ywyz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ixyz,JxwZ,Ywzy->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ixyz,Jxwu,YwuZyz->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jxwu,YwuyZz->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixyz,Jy,YxZz->IJYZ', t1_vaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ixyz,Jz,YxZy->IJYZ', t1_vaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jz,YxyZ->IJYZ', t1_vaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('iIxa,Jixa,YZ->IJYZ', t1_xvae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('iIxa,Jiya,YyZx->IJYZ', t1_xvae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('iIxa,Jiya,YyxZ->IJYZ', t1_xvae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('iIxa,iJZa,Yx->IJYZ', t1_xvae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/2 * einsum('iIxa,iJxa,YZ->IJYZ', t1_xvae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('iIxa,iJya,YyZx->IJYZ', t1_xvae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('iIxa,Jixa,YZ->IJYZ', t1_vvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('iIxa,Jiya,YyZx->IJYZ', t1_vvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('iIxa,Jiya,YyxZ->IJYZ', t1_vvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('iIxa,iJZa,Yx->IJYZ', t1_vvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/2 * einsum('iIxa,iJxa,YZ->IJYZ', t1_vvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('iIxa,iJya,YyZx->IJYZ', t1_vvae, t1_vxae, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [nval, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee t1.vaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]

            T_v_caa -= 1/4 * einsum('IZab,Jxab,Yx->IJYZ', t1_vaee, t1_xaee, rdm_ca, optimize = einsum_type)
            T_v_caa -= 1/4 * einsum('Ixab,Jyab,YxZy->IJYZ', t1_vaee, t1_xaee, rdm_ccaa, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_v_caa += 1/6 * einsum('Ixab,Jyba,YxZy->IJYZ', t1_vaee, t1_xaee, rdm_ccaa, optimize = einsum_type)
            T_v_caa += 1/12 * einsum('Ixab,Jyba,YxyZ->IJYZ', t1_vaee, t1_xaee, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee t1.vaee", *cput2)
            del(t1_xaee, t1_vaee)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncvs, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
            t1_vxee = mr_adc.t1.vxee[:,:,s_chunk:f_chunk]

            T_v_caa -= 1/2 * einsum('Iiab,Jiab,YZ->IJYZ', t1_vxee, t1_xxee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            T_v_caa += 1/4 * einsum('Iiab,Jiba,YZ->IJYZ', t1_vxee, t1_xxee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee t1.vxee", *cput2)
            del(t1_xxee, t1_vxee)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [nval, nval, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vvee t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vvee = mr_adc.t1.vvee[:,:,s_chunk:f_chunk]
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_v_caa -= 1/2 * einsum('Iiab,Jiab,YZ->IJYZ', t1_vvee, t1_xvee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            T_v_caa += 1/4 * einsum('Iiab,Jiba,YZ->IJYZ', t1_vvee, t1_xvee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vvee t1.xvee", *cput2)
            del(t1_vvee, t1_xvee)

        T[:, s_caa__abb:f_caa__abb] += T_v_caa.reshape(nval, -1)


        T_v_caa  = 1/4 * einsum('IZax,Jyxa,Yy->IJYZ', t1_vaea, t1_xaae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('IZax,Jyza,Yzxy->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('IZax,Jyza,Yzyx->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZxa,Ja,Yx->IJYZ', t1_vaae, t1_xe, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZxa,Jyax,Yy->IJYZ', t1_vaae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZxa,Jyaz,Yzxy->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('IZxa,Jyza,Yzxy->IJYZ', t1_vaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('IZxa,Jyza,Yzyx->IJYZ', t1_vaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZxy,Jy,Yx->IJYZ', t1_vaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('IZxy,Jzwx,Ywyz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('IZxy,Jzwx,Ywzy->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('IZxy,Jzwy,Ywxz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('IZxy,Jzwy,Ywzx->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZxy,Jzyw,Ywxz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('IZxy,Jzyx,Yz->IJYZ', t1_vaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Ia,JxZa,Yx->IJYZ', t1_ve, t1_xaae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ia,Jxya,YyZx->IJYZ', t1_ve, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ia,Jxya,YyxZ->IJYZ', t1_ve, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/2 * einsum('Iixa,JiZa,Yx->IJYZ', t1_vxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixa,Jiya,YyZx->IJYZ', t1_vxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/3 * einsum('Iixa,Jiya,YyxZ->IJYZ', t1_vxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixa,iJZa,Yx->IJYZ', t1_vxae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixa,iJya,YyZx->IJYZ', t1_vxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixa,iJya,YyxZ->IJYZ', t1_vxae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixy,JiZx,Yy->IJYZ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/2 * einsum('Iixy,JiZy,Yx->IJYZ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixy,JiZz,Yzxy->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixy,JiyZ,Yx->IJYZ', t1_vxaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,Jiyz,YzZx->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixy,Jiyz,YzxZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixy,JizZ,Yzxy->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,JizZ,Yzyx->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizw,YzwZyx->IJYZ', t1_vxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,Jizw,YzwxZy->IJYZ', t1_vxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizw,YzwxyZ->IJYZ', t1_vxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizw,YzwyZx->IJYZ', t1_vxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizw,YzwyxZ->IJYZ', t1_vxaa, t1_xxaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,Jizx,YzZy->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixy,Jizx,YzyZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixy,Jizy,YzZx->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/3 * einsum('Iixy,Jizy,YzxZ->IJYZ', t1_vxaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/2 * einsum('Iixa,JiZa,Yx->IJYZ', t1_vvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixa,Jiya,YyZx->IJYZ', t1_vvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/3 * einsum('Iixa,Jiya,YyxZ->IJYZ', t1_vvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixa,iJZa,Yx->IJYZ', t1_vvae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixa,iJya,YyZx->IJYZ', t1_vvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixa,iJya,YyxZ->IJYZ', t1_vvae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixy,JiZx,Yy->IJYZ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/2 * einsum('Iixy,JiZy,Yx->IJYZ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixy,JiZz,Yzxy->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Iixy,JiyZ,Yx->IJYZ', t1_vvaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,Jiyz,YzZx->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixy,Jiyz,YzxZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixy,JizZ,Yzxy->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,JizZ,Yzyx->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizw,YzwZyx->IJYZ', t1_vvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,Jizw,YzwxZy->IJYZ', t1_vvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizw,YzwxyZ->IJYZ', t1_vvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizw,YzwyZx->IJYZ', t1_vvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Iixy,Jizw,YzwyxZ->IJYZ', t1_vvaa, t1_xvaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Iixy,Jizx,YzZy->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Iixy,Jizx,YzyZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Iixy,Jizy,YzZx->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/3 * einsum('Iixy,Jizy,YzxZ->IJYZ', t1_vvaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Ix,JyZx,Yy->IJYZ', t1_va, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ix,Jyzx,YzZy->IJYZ', t1_va, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ix,Jyzx,YzyZ->IJYZ', t1_va, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Ixay,JzZa,Yxzy->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixay,Jzwa,YxwZzy->IJYZ', t1_vaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixay,Jzwa,YxwyZz->IJYZ', t1_vaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixay,Jzwa,YxwyzZ->IJYZ', t1_vaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixay,Jzwa,YxwzZy->IJYZ', t1_vaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixay,Jzwa,YxwzyZ->IJYZ', t1_vaea, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixay,Jzya,YxZz->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ixay,Jzya,YxzZ->IJYZ', t1_vaea, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,Ja,YxZy->IJYZ', t1_vaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ixya,Ja,YxyZ->IJYZ', t1_vaae, t1_xe, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Ixya,JzZa,Yxyz->IJYZ', t1_vaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ixya,JzaZ,Yxyz->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,JzaZ,Yxzy->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,Jzaw,YxwZzy->IJYZ', t1_vaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,Jzaw,YxwyZz->IJYZ', t1_vaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,Jzaw,YxwyzZ->IJYZ', t1_vaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,Jzaw,YxwzZy->IJYZ', t1_vaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixya,Jzaw,YxwzyZ->IJYZ', t1_vaae, t1_xaea, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,Jzay,YxZz->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ixya,Jzay,YxzZ->IJYZ', t1_vaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixya,Jzwa,YxwZzy->IJYZ', t1_vaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ixya,Jzwa,YxwyzZ->IJYZ', t1_vaae, t1_xaae, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Ixyz,JwZy,Yxwz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/4 * einsum('Ixyz,JwZz,Yxyw->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwuy,YxuZwz->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwuy,YxuwZz->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jwuy,YxuwzZ->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwuy,YxuzZw->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwuy,YxuzwZ->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jwuz,YxuZwy->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ixyz,Jwuz,YxuywZ->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,JwzZ,Yxwy->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ixyz,JwzZ,Yxyw->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwzu,YxuZwy->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwzu,YxuwZy->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwzu,YxuwyZ->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jwzu,YxuyZw->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jwzu,YxuywZ->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jwzy,YxZw->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ixyz,Jwzy,YxwZ->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('Ixyz,JxZw,Ywyz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('Ixyz,JxwZ,Ywyz->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,JxwZ,Ywzy->IJYZ', t1_vaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jxwu,YwuZzy->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('Ixyz,Jxwu,YwuyZz->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jxwu,YwuyzZ->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jxwu,YwuzZy->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jxwu,YwuzyZ->IJYZ', t1_vaaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_v_caa -= 1/12 * einsum('Ixyz,Jz,YxZy->IJYZ', t1_vaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/6 * einsum('Ixyz,Jz,YxyZ->IJYZ', t1_vaaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('iIxa,JiZa,Yx->IJYZ', t1_xvae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('iIxa,Jiya,YyZx->IJYZ', t1_xvae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('iIxa,Jiya,YyxZ->IJYZ', t1_xvae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_caa -= 1/4 * einsum('iIxa,JiZa,Yx->IJYZ', t1_vvae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_caa += 1/12 * einsum('iIxa,Jiya,YyZx->IJYZ', t1_vvae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_caa += 1/6 * einsum('iIxa,Jiya,YyxZ->IJYZ', t1_vvae, t1_xvae, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [nval, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee t1.vaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]

            T_v_caa += 1/4 * einsum('IZab,Jxba,Yx->IJYZ', t1_vaee, t1_xaee, rdm_ca, optimize = einsum_type)
            T_v_caa -= 1/12 * einsum('Ixab,Jyba,YxZy->IJYZ', t1_vaee, t1_xaee, rdm_ccaa, optimize = einsum_type)
            T_v_caa -= 1/6 * einsum('Ixab,Jyba,YxyZ->IJYZ', t1_vaee, t1_xaee, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee t1.vaee", *cput2)

        T[:, s_caa__bab:f_caa__bab] += T_v_caa.reshape(nval, -1)

        mr_adc.log.timer_debug("computing T q2-h1 V-CAA", *cput1)

    def compute_T__q2_h1__V_CCE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        nextern = mr_adc.nextern

        # Amplitudes
        t1_va = mr_adc.t1.va
        t1_vaaa = mr_adc.t1.vaaa

        t1_xxae = mr_adc.t1.xxae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        T_v_cce =- 1/2 * einsum('JKxB,Ix->IJKB', t1_xxae, t1_va, optimize = einsum_type)
        T_v_cce += 1/2 * einsum('KJxB,Ix->IJKB', t1_xxae, t1_va, optimize = einsum_type)
        T_v_cce -= 1/2 * einsum('JKxB,Iyxz,yz->IJKB', t1_xxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_v_cce += 1/4 * einsum('JKxB,Iyzx,yz->IJKB', t1_xxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_v_cce += 1/2 * einsum('KJxB,Iyxz,yz->IJKB', t1_xxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_v_cce -= 1/4 * einsum('KJxB,Iyzx,yz->IJKB', t1_xxae, t1_vaaa, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_v_cce += 1/2 * einsum('JKBa,Ia->IJKB', t1_xxee, t1_ve, optimize = einsum_type)
            T_v_cce -= 1/2 * einsum('KJBa,Ia->IJKB', t1_xxee, t1_ve, optimize = einsum_type)
            T_v_cce += 1/2 * einsum('JKBa,Ixay,xy->IJKB', t1_xxee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_v_cce -= 1/4 * einsum('JKBa,Ixya,xy->IJKB', t1_xxee, t1_vaae, rdm_ca, optimize = einsum_type)
            T_v_cce -= 1/2 * einsum('KJBa,Ixay,xy->IJKB', t1_xxee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_v_cce += 1/4 * einsum('KJBa,Ixya,xy->IJKB', t1_xxee, t1_vaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_ve, t1_xxee, t1_vaae, t1_vaea)

        T[:, s_cce__aaa:f_cce__aaa] += T_v_cce[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(nval, -1)


        T_v_cce =- 1/2 * einsum('JKxB,Ix->IJKB', t1_xxae, t1_va, optimize = einsum_type)
        T_v_cce -= 1/2 * einsum('JKxB,Iyxz,yz->IJKB', t1_xxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_v_cce += 1/4 * einsum('JKxB,Iyzx,yz->IJKB', t1_xxae, t1_vaaa, rdm_ca, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_v_cce -= 1/2 * einsum('KJBa,Ia->IJKB', t1_xxee, t1_ve, optimize = einsum_type)
            T_v_cce -= 1/2 * einsum('KJBa,Ixay,xy->IJKB', t1_xxee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_v_cce += 1/4 * einsum('KJBa,Ixya,xy->IJKB', t1_xxee, t1_vaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_ve, t1_xxee, t1_vaae, t1_vaea)

        T[:, s_cce__abb:f_cce__abb] += T_v_cce.reshape(nval, -1)

        mr_adc.log.timer_debug("computing T q2-h1 V-CCE", *cput1)

    def compute_T__q2_h1__V_CAE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_va = mr_adc.t1.va
        t1_vaaa = mr_adc.t1.vaaa

        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        t1_vvaa = mr_adc.t1.vvaa
        t1_vxaa = mr_adc.t1.vxaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        T_v_cae  = 1/4 * einsum('JixB,Iixy,Yy->IJYB', t1_xxae, t1_vxaa, rdm_ca, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('JixB,Iiyx,Yy->IJYB', t1_xxae, t1_vxaa, rdm_ca, optimize = einsum_type)
        T_v_cae += 1/12 * einsum('JixB,Iiyz,Yxyz->IJYB', t1_xxae, t1_vxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/12 * einsum('JixB,Iiyz,Yxzy->IJYB', t1_xxae, t1_vxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/4 * einsum('JixB,Iixy,Yy->IJYB', t1_xvae, t1_vvaa, rdm_ca, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('JixB,Iiyx,Yy->IJYB', t1_xvae, t1_vvaa, rdm_ca, optimize = einsum_type)
        T_v_cae += 1/12 * einsum('JixB,Iiyz,Yxyz->IJYB', t1_xvae, t1_vvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/12 * einsum('JixB,Iiyz,Yxzy->IJYB', t1_xvae, t1_vvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('JxBy,Ixzw,Yyzw->IJYB', t1_xaea, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/4 * einsum('JxBy,Iy,Yx->IJYB', t1_xaea, t1_va, rdm_ca, optimize = einsum_type)
        T_v_cae += 1/4 * einsum('JxBy,Izwy,Yzwx->IJYB', t1_xaea, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/4 * einsum('JxBy,Izyw,Yzxw->IJYB', t1_xaea, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/12 * einsum('JxyB,Ixzw,Yywz->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/12 * einsum('JxyB,Ixzw,Yyzw->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('JxyB,Iy,Yx->IJYB', t1_xaae, t1_va, rdm_ca, optimize = einsum_type)
        T_v_cae -= 1/12 * einsum('JxyB,Izwy,Yzwx->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/12 * einsum('JxyB,Izwy,Yzxw->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('JxyB,Izyw,Yzxw->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('iJxB,Iixy,Yy->IJYB', t1_xxae, t1_vxaa, rdm_ca, optimize = einsum_type)
        T_v_cae += 1/2 * einsum('iJxB,Iiyx,Yy->IJYB', t1_xxae, t1_vxaa, rdm_ca, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('iJxB,Iiyz,Yxyz->IJYB', t1_xxae, t1_vxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('iJxB,Iixy,Yy->IJYB', t1_vxae, t1_vvaa, rdm_ca, optimize = einsum_type)
        T_v_cae += 1/2 * einsum('iJxB,Iiyx,Yy->IJYB', t1_vxae, t1_vvaa, rdm_ca, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('iJxB,Iiyz,Yxyz->IJYB', t1_vxae, t1_vvaa, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xvae = mr_adc.t1.xvae[:,:,:,s_chunk:f_chunk]
            t1_vxae = mr_adc.t1.vxae[:,:,:,s_chunk:f_chunk]

            T_v_cae += 1/2 * einsum('JiBa,Iixa,Yx->IJYB', t1_xxee, t1_vxae, rdm_ca, optimize = einsum_type)
            T_v_cae -= 1/4 * einsum('JiBa,iIxa,Yx->IJYB', t1_xxee, t1_xvae, rdm_ca, optimize = einsum_type)
            T_v_cae -= 1/4 * einsum('iJBa,Iixa,Yx->IJYB', t1_xxee, t1_vxae, rdm_ca, optimize = einsum_type)
            T_v_cae += 1/4 * einsum('iJBa,iIxa,Yx->IJYB', t1_xxee, t1_xvae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_xvae, t1_vxae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            t1_vvae = mr_adc.t1.vvae[:,:,:,s_chunk:f_chunk]

            T_v_cae += 1/2 * einsum('JiBa,Iixa,Yx->IJYB', t1_xvee, t1_vvae, rdm_ca, optimize = einsum_type)
            T_v_cae -= 1/4 * einsum('JiBa,iIxa,Yx->IJYB', t1_xvee, t1_vvae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee, t1_vvae)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_vvae = mr_adc.t1.vvae[:,:,:,s_chunk:f_chunk]

            T_v_cae -= 1/4 * einsum('iJBa,Iixa,Yx->IJYB', t1_vxee, t1_vvae, rdm_ca, optimize = einsum_type)
            T_v_cae += 1/4 * einsum('iJBa,iIxa,Yx->IJYB', t1_vxee, t1_vvae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee, t1_vvae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_v_cae += 1/4 * einsum('JxBa,Ia,Yx->IJYB', t1_xaee, t1_ve, rdm_ca, optimize = einsum_type)
            T_v_cae += 1/4 * einsum('JxBa,Iyaz,Yyxz->IJYB', t1_xaee, t1_vaea, rdm_ccaa, optimize = einsum_type)
            T_v_cae += 1/4 * einsum('JxBa,Iyza,Yyzx->IJYB', t1_xaee, t1_vaae, rdm_ccaa, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_v_cae -= 1/4 * einsum('JxaB,Ia,Yx->IJYB', t1_xaee, t1_ve, rdm_ca, optimize = einsum_type)
            T_v_cae -= 1/4 * einsum('JxaB,Iyaz,Yyxz->IJYB', t1_xaee, t1_vaea, rdm_ccaa, optimize = einsum_type)
            T_v_cae += 1/12 * einsum('JxaB,Iyza,Yyxz->IJYB', t1_xaee, t1_vaae, rdm_ccaa, optimize = einsum_type)
            T_v_cae -= 1/12 * einsum('JxaB,Iyza,Yyzx->IJYB', t1_xaee, t1_vaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee, t1_ve, t1_vaae, t1_vaea)

        T[:, s_cae__aaa:f_cae__aaa] += T_v_cae.reshape(nval, -1)


        # Amplitudes
        t1_xvae = mr_adc.t1.xvae

        T_v_cae  = 1/4 * einsum('JixB,Iixy,Yy->IJYB', t1_xxae, t1_vxaa, rdm_ca, optimize = einsum_type)
        T_v_cae -= 1/12 * einsum('JixB,Iiyz,Yxyz->IJYB', t1_xxae, t1_vxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/6 * einsum('JixB,Iiyz,Yxzy->IJYB', t1_xxae, t1_vxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/4 * einsum('JixB,Iixy,Yy->IJYB', t1_xvae, t1_vvaa, rdm_ca, optimize = einsum_type)
        T_v_cae -= 1/12 * einsum('JixB,Iiyz,Yxyz->IJYB', t1_xvae, t1_vvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/6 * einsum('JixB,Iiyz,Yxzy->IJYB', t1_xvae, t1_vvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/6 * einsum('JxyB,Ixzw,Yywz->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/12 * einsum('JxyB,Ixzw,Yyzw->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('JxyB,Iy,Yx->IJYB', t1_xaae, t1_va, rdm_ca, optimize = einsum_type)
        T_v_cae += 1/12 * einsum('JxyB,Izwy,Yzwx->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/6 * einsum('JxyB,Izwy,Yzxw->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('JxyB,Izyw,Yzxw->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xvae = mr_adc.t1.xvae[:,:,:,s_chunk:f_chunk]

            T_v_cae += 1/4 * einsum('iJBa,iIxa,Yx->IJYB', t1_xxee, t1_xvae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_xvae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_vvae = mr_adc.t1.vvae[:,:,:,s_chunk:f_chunk]

            T_v_cae += 1/4 * einsum('iJBa,iIxa,Yx->IJYB', t1_vxee, t1_vvae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee, t1_vvae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_v_cae -= 1/4 * einsum('JxaB,Ia,Yx->IJYB', t1_xaee, t1_ve, rdm_ca, optimize = einsum_type)
            T_v_cae -= 1/4 * einsum('JxaB,Iyaz,Yyxz->IJYB', t1_xaee, t1_vaea, rdm_ccaa, optimize = einsum_type)
            T_v_cae += 1/6 * einsum('JxaB,Iyza,Yyxz->IJYB', t1_xaee, t1_vaae, rdm_ccaa, optimize = einsum_type)
            T_v_cae += 1/12 * einsum('JxaB,Iyza,Yyzx->IJYB', t1_xaee, t1_vaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee, t1_ve, t1_vaae, t1_vaea)

        T[:, s_cae__abb:f_cae__abb] += T_v_cae.reshape(nval, -1)


        # Amplitudes
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        T_v_cae =- 1/4 * einsum('JixB,Iiyx,Yy->IJYB', t1_xxae, t1_vxaa, rdm_ca, optimize = einsum_type)
        T_v_cae += 1/6 * einsum('JixB,Iiyz,Yxyz->IJYB', t1_xxae, t1_vxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/12 * einsum('JixB,Iiyz,Yxzy->IJYB', t1_xxae, t1_vxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('JixB,Iiyx,Yy->IJYB', t1_xvae, t1_vvaa, rdm_ca, optimize = einsum_type)
        T_v_cae += 1/6 * einsum('JixB,Iiyz,Yxyz->IJYB', t1_xvae, t1_vvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/12 * einsum('JixB,Iiyz,Yxzy->IJYB', t1_xvae, t1_vvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('JxBy,Ixzw,Yyzw->IJYB', t1_xaea, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/4 * einsum('JxBy,Iy,Yx->IJYB', t1_xaea, t1_va, rdm_ca, optimize = einsum_type)
        T_v_cae += 1/4 * einsum('JxBy,Izwy,Yzwx->IJYB', t1_xaea, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/4 * einsum('JxBy,Izyw,Yzxw->IJYB', t1_xaea, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/12 * einsum('JxyB,Ixzw,Yywz->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae += 1/6 * einsum('JxyB,Ixzw,Yyzw->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/6 * einsum('JxyB,Izwy,Yzwx->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/12 * einsum('JxyB,Izwy,Yzxw->IJYB', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('iJxB,Iixy,Yy->IJYB', t1_xxae, t1_vxaa, rdm_ca, optimize = einsum_type)
        T_v_cae += 1/2 * einsum('iJxB,Iiyx,Yy->IJYB', t1_xxae, t1_vxaa, rdm_ca, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('iJxB,Iiyz,Yxyz->IJYB', t1_xxae, t1_vxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('iJxB,Iixy,Yy->IJYB', t1_vxae, t1_vvaa, rdm_ca, optimize = einsum_type)
        T_v_cae += 1/2 * einsum('iJxB,Iiyx,Yy->IJYB', t1_vxae, t1_vvaa, rdm_ca, optimize = einsum_type)
        T_v_cae -= 1/4 * einsum('iJxB,Iiyz,Yxyz->IJYB', t1_vxae, t1_vvaa, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xvae = mr_adc.t1.xvae[:,:,:,s_chunk:f_chunk]
            t1_vxae = mr_adc.t1.vxae[:,:,:,s_chunk:f_chunk]

            T_v_cae += 1/2 * einsum('JiBa,Iixa,Yx->IJYB', t1_xxee, t1_vxae, rdm_ca, optimize = einsum_type)
            T_v_cae -= 1/4 * einsum('JiBa,iIxa,Yx->IJYB', t1_xxee, t1_xvae, rdm_ca, optimize = einsum_type)
            T_v_cae -= 1/4 * einsum('iJBa,Iixa,Yx->IJYB', t1_xxee, t1_vxae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_xvae, t1_vxae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            t1_vvae = mr_adc.t1.vvae[:,:,:,s_chunk:f_chunk]

            T_v_cae += 1/2 * einsum('JiBa,Iixa,Yx->IJYB', t1_xvee, t1_vvae, rdm_ca, optimize = einsum_type)
            T_v_cae -= 1/4 * einsum('JiBa,iIxa,Yx->IJYB', t1_xvee, t1_vvae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee, t1_vvae)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_vvae = mr_adc.t1.vvae[:,:,:,s_chunk:f_chunk]

            T_v_cae -= 1/4 * einsum('iJBa,Iixa,Yx->IJYB', t1_vxee, t1_vvae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee, t1_vvae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_v_cae += 1/4 * einsum('JxBa,Ia,Yx->IJYB', t1_xaee, t1_ve, rdm_ca, optimize = einsum_type)
            T_v_cae += 1/4 * einsum('JxBa,Iyaz,Yyxz->IJYB', t1_xaee, t1_vaea, rdm_ccaa, optimize = einsum_type)
            T_v_cae += 1/4 * einsum('JxBa,Iyza,Yyzx->IJYB', t1_xaee, t1_vaae, rdm_ccaa, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_v_cae -= 1/12 * einsum('JxaB,Iyza,Yyxz->IJYB', t1_xaee, t1_vaae, rdm_ccaa, optimize = einsum_type)
            T_v_cae -= 1/6 * einsum('JxaB,Iyza,Yyzx->IJYB', t1_xaee, t1_vaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee, t1_ve, t1_vaae, t1_vaea)

        T[:, s_cae__bab:f_cae__bab] += T_v_cae.reshape(nval, -1)

        mr_adc.log.timer_debug("computing T q2-h1 V-CAE", *cput1)

    def compute_T__q2_h1__V_CCA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_ve = mr_adc.t1.ve

        t1_vaea = mr_adc.t1.vaea
        t1_vaae = mr_adc.t1.vaae

        t1_va = mr_adc.t1.va
        t1_vaaa = mr_adc.t1.vaaa

        t1_xxae = mr_adc.t1.xxae

        t1_xxaa = mr_adc.t1.xxaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        T_v_cca  = 1/2 * einsum('IYax,JKxa->IJKY', t1_vaea, t1_xxae, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('IYax,KJxa->IJKY', t1_vaea, t1_xxae, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('IYxa,JKxa->IJKY', t1_vaae, t1_xxae, optimize = einsum_type)
        T_v_cca += 1/2 * einsum('IYxa,KJxa->IJKY', t1_vaae, t1_xxae, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('IYxy,JKxy->IJKY', t1_vaaa, t1_xxaa, optimize = einsum_type)
        T_v_cca += 1/2 * einsum('IYxy,JKyx->IJKY', t1_vaaa, t1_xxaa, optimize = einsum_type)
        T_v_cca += 1/2 * einsum('Ia,JKYa->IJKY', t1_ve, t1_xxae, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('Ia,KJYa->IJKY', t1_ve, t1_xxae, optimize = einsum_type)
        T_v_cca += 1/2 * einsum('Ix,JKYx->IJKY', t1_va, t1_xxaa, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('Ix,JKxY->IJKY', t1_va, t1_xxaa, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('IYax,JKya,xy->IJKY', t1_vaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('IYax,KJya,xy->IJKY', t1_vaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('IYxa,JKya,xy->IJKY', t1_vaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('IYxa,KJya,xy->IJKY', t1_vaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('IYxy,JKxz,yz->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('IYxy,JKyz,xz->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('IYxy,JKzx,yz->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('IYxy,JKzy,xz->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('Ia,JKxa,Yx->IJKY', t1_ve, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ia,KJxa,Yx->IJKY', t1_ve, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ix,JKxy,Yy->IJKY', t1_va, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('Ix,JKyx,Yy->IJKY', t1_va, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/2 * einsum('Ixay,JKYa,xy->IJKY', t1_vaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('Ixay,JKya,Yx->IJKY', t1_vaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('Ixay,JKza,Yyzx->IJKY', t1_vaea, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('Ixay,KJYa,xy->IJKY', t1_vaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixay,KJya,Yx->IJKY', t1_vaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixay,KJza,Yyzx->IJKY', t1_vaea, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('Ixya,JKYa,xy->IJKY', t1_vaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixya,JKya,Yx->IJKY', t1_vaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/12 * einsum('Ixya,JKza,Yyxz->IJKY', t1_vaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_cca += 1/12 * einsum('Ixya,JKza,Yyzx->IJKY', t1_vaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixya,KJYa,xy->IJKY', t1_vaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('Ixya,KJya,Yx->IJKY', t1_vaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/12 * einsum('Ixya,KJza,Yyxz->IJKY', t1_vaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_cca -= 1/12 * einsum('Ixya,KJza,Yyzx->IJKY', t1_vaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_cca += 1/2 * einsum('Ixyz,JKYy,xz->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('Ixyz,JKYz,xy->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('Ixyz,JKwy,Yzwx->IJKY', t1_vaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cca += 1/12 * einsum('Ixyz,JKwz,Yywx->IJKY', t1_vaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cca -= 1/12 * einsum('Ixyz,JKwz,Yyxw->IJKY', t1_vaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('Ixyz,JKyY,xz->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixyz,JKyw,Yzwx->IJKY', t1_vaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixyz,JKyz,Yx->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixyz,JKzY,xy->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/12 * einsum('Ixyz,JKzw,Yywx->IJKY', t1_vaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cca += 1/12 * einsum('Ixyz,JKzw,Yyxw->IJKY', t1_vaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cca -= 1/4 * einsum('Ixyz,JKzy,Yx->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [nval, ncas, nextern],
                                                                           [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vaee t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            T_v_cca -= 1/2 * einsum('IYab,JKab->IJKY', t1_vaee, t1_xxee, optimize = einsum_type)
            T_v_cca += 1/4 * einsum('Ixab,JKab,Yx->IJKY', t1_vaee, t1_xxee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            T_v_cca += 1/2 * einsum('IYab,JKba->IJKY', t1_vaee, t1_xxee, optimize = einsum_type)
            T_v_cca -= 1/4 * einsum('Ixab,JKba,Yx->IJKY', t1_vaee, t1_xxee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vaee t1.xxee", *cput2)
            del(t1_vaee, t1_xxee)

        T[:, s_cca__aaa:f_cca__aaa] += T_v_cca[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(nval, -1)

        T_v_cca =- 1/2 * einsum('IYax,KJxa->IJKY', t1_vaea, t1_xxae, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('IYxa,JKxa->IJKY', t1_vaae, t1_xxae, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('IYxy,JKxy->IJKY', t1_vaaa, t1_xxaa, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('Ia,KJYa->IJKY', t1_ve, t1_xxae, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('Ix,JKxY->IJKY', t1_va, t1_xxaa, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('IYax,KJya,xy->IJKY', t1_vaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('IYxa,JKya,xy->IJKY', t1_vaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('IYxy,JKxz,yz->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('IYxy,JKzy,xz->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ia,KJxa,Yx->IJKY', t1_ve, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ix,JKxy,Yy->IJKY', t1_va, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('Ixay,KJYa,xy->IJKY', t1_vaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixay,KJya,Yx->IJKY', t1_vaea, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixay,KJza,Yyzx->IJKY', t1_vaea, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixya,JKya,Yx->IJKY', t1_vaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/6 * einsum('Ixya,JKza,Yyxz->IJKY', t1_vaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_cca -= 1/12 * einsum('Ixya,JKza,Yyzx->IJKY', t1_vaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixya,KJYa,xy->IJKY', t1_vaae, t1_xxae, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/12 * einsum('Ixya,KJza,Yyxz->IJKY', t1_vaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_cca -= 1/6 * einsum('Ixya,KJza,Yyzx->IJKY', t1_vaae, t1_xxae, rdm_ccaa, optimize = einsum_type)
        T_v_cca -= 1/12 * einsum('Ixyz,JKwz,Yywx->IJKY', t1_vaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cca -= 1/6 * einsum('Ixyz,JKwz,Yyxw->IJKY', t1_vaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cca -= 1/2 * einsum('Ixyz,JKyY,xz->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixyz,JKyw,Yzwx->IJKY', t1_vaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixyz,JKyz,Yx->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca += 1/4 * einsum('Ixyz,JKzY,xy->IJKY', t1_vaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_v_cca -= 1/6 * einsum('Ixyz,JKzw,Yywx->IJKY', t1_vaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_v_cca -= 1/12 * einsum('Ixyz,JKzw,Yyxw->IJKY', t1_vaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vaee t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            T_v_cca -= 1/2 * einsum('IYab,JKab->IJKY', t1_vaee, t1_xxee, optimize = einsum_type)
            T_v_cca += 1/4 * einsum('Ixab,JKab,Yx->IJKY', t1_vaee, t1_xxee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vaee t1.xxee", *cput2)
            del(t1_vaee, t1_xxee)

        T[:, s_cca__abb:f_cca__abb] += T_v_cca.reshape(nval, -1)

        mr_adc.log.timer_debug("computing T q2-h1 V-CCA", *cput1)

    def compute_T__q2_h1__V_CVE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        nextern = mr_adc.nextern

        # Amplitudes
        t1_va = mr_adc.t1.va
        t1_vaaa = mr_adc.t1.vaaa

        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        T_v_cve =- 1/2 * einsum('JKxB,Ix->IJKB', t1_xvae, t1_va, optimize = einsum_type)
        T_v_cve += 1/2 * einsum('KJxB,Ix->IJKB', t1_vxae, t1_va, optimize = einsum_type)
        T_v_cve -= 1/2 * einsum('JKxB,Iyxz,yz->IJKB', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_v_cve += 1/4 * einsum('JKxB,Iyzx,yz->IJKB', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_v_cve += 1/2 * einsum('KJxB,Iyxz,yz->IJKB', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_v_cve -= 1/4 * einsum('KJxB,Iyzx,yz->IJKB', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_v_cve += 1/2 * einsum('JKBa,Ia->IJKB', t1_xvee, t1_ve, optimize = einsum_type)
            T_v_cve += 1/2 * einsum('JKBa,Ixay,xy->IJKB', t1_xvee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_v_cve -= 1/4 * einsum('JKBa,Ixya,xy->IJKB', t1_xvee, t1_vaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee, t1_ve, t1_vaae, t1_vaea)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_v_cve -= 1/2 * einsum('KJBa,Ia->IJKB', t1_vxee, t1_ve, optimize = einsum_type)
            T_v_cve -= 1/2 * einsum('KJBa,Ixay,xy->IJKB', t1_vxee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_v_cve += 1/4 * einsum('KJBa,Ixya,xy->IJKB', t1_vxee, t1_vaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee, t1_ve, t1_vaae, t1_vaea)

        T[:, s_cve__aaa:f_cve__aaa] += T_v_cve.reshape(nval, -1)


        T_v_cve =- 1/2 * einsum('JKxB,Ix->IJKB', t1_xvae, t1_va, optimize = einsum_type)
        T_v_cve -= 1/2 * einsum('JKxB,Iyxz,yz->IJKB', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_v_cve += 1/4 * einsum('JKxB,Iyzx,yz->IJKB', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_v_cve -= 1/2 * einsum('KJBa,Ia->IJKB', t1_vxee, t1_ve, optimize = einsum_type)
            T_v_cve -= 1/2 * einsum('KJBa,Ixay,xy->IJKB', t1_vxee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_v_cve += 1/4 * einsum('KJBa,Ixya,xy->IJKB', t1_vxee, t1_vaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee, t1_ve, t1_vaae, t1_vaea)

        T[:, s_cve__abb:f_cve__abb] += T_v_cve.reshape(nval, -1)


        T_v_cve  = 1/2 * einsum('KJxB,Ix->IJKB', t1_vxae, t1_va, optimize = einsum_type)
        T_v_cve += 1/2 * einsum('KJxB,Iyxz,yz->IJKB', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_v_cve -= 1/4 * einsum('KJxB,Iyzx,yz->IJKB', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_v_cve += 1/2 * einsum('JKBa,Ia->IJKB', t1_xvee, t1_ve, optimize = einsum_type)
            T_v_cve += 1/2 * einsum('JKBa,Ixay,xy->IJKB', t1_xvee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_v_cve -= 1/4 * einsum('JKBa,Ixya,xy->IJKB', t1_xvee, t1_vaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee, t1_ve, t1_vaae, t1_vaea)

        T[:, s_cve__bab:f_cve__bab] += T_v_cve.reshape(nval, -1)

        mr_adc.log.timer_debug("computing T q2-h1 V-CVE", *cput1)

    def compute_T__q2_h1__V_CVA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas

        # Amplitudes
        t1_ve = mr_adc.t1.ve

        t1_vaea = mr_adc.t1.vaea
        t1_vaae = mr_adc.t1.vaae

        t1_va = mr_adc.t1.va

        t1_vaaa = mr_adc.t1.vaaa

        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        t1_xvaa = mr_adc.t1.xvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        T_v_cva  = 1/2 * einsum('IYax,JKxa->IJKY', t1_vaea, t1_xvae, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('IYax,KJxa->IJKY', t1_vaea, t1_vxae, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('IYxa,JKxa->IJKY', t1_vaae, t1_xvae, optimize = einsum_type)
        T_v_cva += 1/2 * einsum('IYxa,KJxa->IJKY', t1_vaae, t1_vxae, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('IYxy,JKxy->IJKY', t1_vaaa, t1_xvaa, optimize = einsum_type)
        T_v_cva += 1/2 * einsum('IYxy,JKyx->IJKY', t1_vaaa, t1_xvaa, optimize = einsum_type)
        T_v_cva += 1/2 * einsum('Ia,JKYa->IJKY', t1_ve, t1_xvae, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('Ia,KJYa->IJKY', t1_ve, t1_vxae, optimize = einsum_type)
        T_v_cva += 1/2 * einsum('Ix,JKYx->IJKY', t1_va, t1_xvaa, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('Ix,JKxY->IJKY', t1_va, t1_xvaa, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('IYax,JKya,xy->IJKY', t1_vaea, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('IYax,KJya,xy->IJKY', t1_vaea, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('IYxa,JKya,xy->IJKY', t1_vaae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('IYxa,KJya,xy->IJKY', t1_vaae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('IYxy,JKxz,yz->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('IYxy,JKyz,xz->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('IYxy,JKzx,yz->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('IYxy,JKzy,xz->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ia,JKxa,Yx->IJKY', t1_ve, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ia,KJxa,Yx->IJKY', t1_ve, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ix,JKxy,Yy->IJKY', t1_va, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ix,JKyx,Yy->IJKY', t1_va, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/2 * einsum('Ixay,JKYa,xy->IJKY', t1_vaea, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixay,JKya,Yx->IJKY', t1_vaea, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixay,JKza,Yyzx->IJKY', t1_vaea, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('Ixay,KJYa,xy->IJKY', t1_vaea, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixay,KJya,Yx->IJKY', t1_vaea, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixay,KJza,Yyzx->IJKY', t1_vaea, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixya,JKYa,xy->IJKY', t1_vaae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixya,JKya,Yx->IJKY', t1_vaae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/12 * einsum('Ixya,JKza,Yyxz->IJKY', t1_vaae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/12 * einsum('Ixya,JKza,Yyzx->IJKY', t1_vaae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixya,KJYa,xy->IJKY', t1_vaae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixya,KJya,Yx->IJKY', t1_vaae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/12 * einsum('Ixya,KJza,Yyxz->IJKY', t1_vaae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/12 * einsum('Ixya,KJza,Yyzx->IJKY', t1_vaae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/2 * einsum('Ixyz,JKYy,xz->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixyz,JKYz,xy->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixyz,JKwy,Yzwx->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/12 * einsum('Ixyz,JKwz,Yywx->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/12 * einsum('Ixyz,JKwz,Yyxw->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('Ixyz,JKyY,xz->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixyz,JKyw,Yzwx->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixyz,JKyz,Yx->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixyz,JKzY,xy->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/12 * einsum('Ixyz,JKzw,Yywx->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/12 * einsum('Ixyz,JKzw,Yyxw->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixyz,JKzy,Yx->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [nval, ncas, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vaee t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_v_cva -= 1/2 * einsum('IYab,JKab->IJKY', t1_vaee, t1_xvee, optimize = einsum_type)
            T_v_cva += 1/4 * einsum('Ixab,JKab,Yx->IJKY', t1_vaee, t1_xvee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            T_v_cva += 1/2 * einsum('IYab,JKba->IJKY', t1_vaee, t1_xvee, optimize = einsum_type)
            T_v_cva -= 1/4 * einsum('Ixab,JKba,Yx->IJKY', t1_vaee, t1_xvee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vaee t1.xvee", *cput2)
            del(t1_vaee, t1_xvee)

        T[:, s_cva__aaa:f_cva__aaa] += T_v_cva.reshape(nval, -1)


        T_v_cva =- 1/2 * einsum('IYax,KJxa->IJKY', t1_vaea, t1_vxae, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('IYxa,JKxa->IJKY', t1_vaae, t1_xvae, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('IYxy,JKxy->IJKY', t1_vaaa, t1_xvaa, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('Ia,KJYa->IJKY', t1_ve, t1_vxae, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('Ix,JKxY->IJKY', t1_va, t1_xvaa, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('IYax,KJya,xy->IJKY', t1_vaea, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('IYxa,JKya,xy->IJKY', t1_vaae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('IYxy,JKxz,yz->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('IYxy,JKzy,xz->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ia,KJxa,Yx->IJKY', t1_ve, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ix,JKxy,Yy->IJKY', t1_va, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('Ixay,KJYa,xy->IJKY', t1_vaea, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixay,KJya,Yx->IJKY', t1_vaea, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixay,KJza,Yyzx->IJKY', t1_vaea, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixya,JKya,Yx->IJKY', t1_vaae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/6 * einsum('Ixya,JKza,Yyxz->IJKY', t1_vaae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/12 * einsum('Ixya,JKza,Yyzx->IJKY', t1_vaae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixya,KJYa,xy->IJKY', t1_vaae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/12 * einsum('Ixya,KJza,Yyxz->IJKY', t1_vaae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/6 * einsum('Ixya,KJza,Yyzx->IJKY', t1_vaae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/12 * einsum('Ixyz,JKwz,Yywx->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/6 * einsum('Ixyz,JKwz,Yyxw->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/2 * einsum('Ixyz,JKyY,xz->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixyz,JKyw,Yzwx->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixyz,JKyz,Yx->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/4 * einsum('Ixyz,JKzY,xy->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/6 * einsum('Ixyz,JKzw,Yywx->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/12 * einsum('Ixyz,JKzw,Yyxw->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vaee t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_v_cva -= 1/2 * einsum('IYab,JKab->IJKY', t1_vaee, t1_xvee, optimize = einsum_type)
            T_v_cva += 1/4 * einsum('Ixab,JKab,Yx->IJKY', t1_vaee, t1_xvee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vaee t1.xvee", *cput2)
            del(t1_vaee, t1_xvee)

        T[:, s_cva__abb:f_cva__abb] += T_v_cva.reshape(nval, -1)


        T_v_cva  = 1/2 * einsum('IYax,JKxa->IJKY', t1_vaea, t1_xvae, optimize = einsum_type)
        T_v_cva += 1/2 * einsum('IYxa,KJxa->IJKY', t1_vaae, t1_vxae, optimize = einsum_type)
        T_v_cva += 1/2 * einsum('IYxy,JKyx->IJKY', t1_vaaa, t1_xvaa, optimize = einsum_type)
        T_v_cva += 1/2 * einsum('Ia,JKYa->IJKY', t1_ve, t1_xvae, optimize = einsum_type)
        T_v_cva += 1/2 * einsum('Ix,JKYx->IJKY', t1_va, t1_xvaa, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('IYax,JKya,xy->IJKY', t1_vaea, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('IYxa,KJya,xy->IJKY', t1_vaae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('IYxy,JKyz,xz->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('IYxy,JKzx,yz->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ia,JKxa,Yx->IJKY', t1_ve, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ix,JKyx,Yy->IJKY', t1_va, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/2 * einsum('Ixay,JKYa,xy->IJKY', t1_vaea, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixay,JKya,Yx->IJKY', t1_vaea, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixay,JKza,Yyzx->IJKY', t1_vaea, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixya,JKYa,xy->IJKY', t1_vaae, t1_xvae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/12 * einsum('Ixya,JKza,Yyxz->IJKY', t1_vaae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/6 * einsum('Ixya,JKza,Yyzx->IJKY', t1_vaae, t1_xvae, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixya,KJya,Yx->IJKY', t1_vaae, t1_vxae, rdm_ca, optimize = einsum_type)
        T_v_cva += 1/6 * einsum('Ixya,KJza,Yyxz->IJKY', t1_vaae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/12 * einsum('Ixya,KJza,Yyzx->IJKY', t1_vaae, t1_vxae, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/2 * einsum('Ixyz,JKYy,xz->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixyz,JKYz,xy->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixyz,JKwy,Yzwx->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/6 * einsum('Ixyz,JKwz,Yywx->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/12 * einsum('Ixyz,JKwz,Yyxw->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/12 * einsum('Ixyz,JKzw,Yywx->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva += 1/6 * einsum('Ixyz,JKzw,Yyxw->IJKY', t1_vaaa, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_v_cva -= 1/4 * einsum('Ixyz,JKzy,Yx->IJKY', t1_vaaa, t1_xvaa, rdm_ca, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vaee t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            T_v_cva += 1/2 * einsum('IYab,JKba->IJKY', t1_vaee, t1_xvee, optimize = einsum_type)
            T_v_cva -= 1/4 * einsum('Ixab,JKba,Yx->IJKY', t1_vaee, t1_xvee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vaee t1.xvee", *cput2)
            del(t1_vaee, t1_xvee)

        T[:, s_cva__bab:f_cva__bab] += T_v_cva.reshape(nval, -1)

        mr_adc.log.timer_debug("computing T q2-h1 V-CVA", *cput1)

    def compute_T__q1_h0__A_C(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Amplitudes
        t1_xa = mr_adc.t1.xa

        t1_xaaa = mr_adc.t1.xaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_c = mr_adc.h0.s_c
        f_c = mr_adc.h0.f_c

        T_a_c  = einsum('JX->XJ', t1_xa, optimize = einsum_type).copy()
        T_a_c += einsum('JxXy,xy->XJ', t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JxyX,xy->XJ', t1_xaaa, rdm_ca, optimize = einsum_type)
        T[:, s_c:f_c] = T_a_c.copy()

        mr_adc.log.timer_debug("computing T q1-h0 A-C", *cput1)

    def compute_T__q1_h1__A_CAA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncas = mr_adc.ncas

        # Amplitudes
        t1_xa = mr_adc.t1.xa

        t1_xaaa = mr_adc.t1.xaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        T_a_caa  = 1/2 * einsum('JX,YZ->XJYZ', t1_xa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JxXZ,Yx->XJYZ', t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JxXy,YyZx->XJYZ', t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('JxZX,Yx->XJYZ', t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JxyX,YyZx->XJYZ', t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JxyX,YyxZ->XJYZ', t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T[:, s_caa__aaa:f_caa__aaa] += T_a_caa.reshape(ncas, -1)

        T_a_caa  = 1/2 * einsum('JX,YZ->XJYZ', t1_xa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JxXZ,Yx->XJYZ', t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JxXy,YyZx->XJYZ', t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/3 * einsum('JxyX,YyZx->XJYZ', t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JxyX,YyxZ->XJYZ', t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T[:, s_caa__abb:f_caa__abb] += T_a_caa.reshape(ncas, -1)

        T_a_caa =- 1/2 * einsum('JxZX,Yx->XJYZ', t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JxyX,YyZx->XJYZ', t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/3 * einsum('JxyX,YyxZ->XJYZ', t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T[:, s_caa__bab:f_caa__bab] += T_a_caa.reshape(ncas, -1)

        mr_adc.log.timer_debug("computing T q1-h1 A-CAA", *cput1)

    def compute_T__q1_h1__A_CCE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        ncas = mr_adc.ncas

        # Amplitudes
        t1_xxae = mr_adc.t1.xxae

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        T_a_cce  = einsum('JKXB->XJKB', t1_xxae, optimize = einsum_type).copy()
        T_a_cce -= einsum('KJXB->XJKB', t1_xxae, optimize = einsum_type).copy()
        T[:, s_cce__aaa:f_cce__aaa] += T_a_cce[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(ncas, -1)

        T_a_cce  = einsum('JKXB->XJKB', t1_xxae, optimize = einsum_type).copy()
        T[:, s_cce__abb:f_cce__abb] += T_a_cce.reshape(ncas, -1)

        mr_adc.log.timer_debug("computing T q1-h1 A-CCE", *cput1)

    def compute_T__q1_h1__A_CAE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncas = mr_adc.ncas

        # Amplitudes
        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        T_a_cae =- 1/2 * einsum('JxBX,Yx->XJYB', t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/2 * einsum('JxXB,Yx->XJYB', t1_xaae, rdm_ca, optimize = einsum_type)
        T[:, s_cae__aaa:f_cae__aaa] += T_a_cae.reshape(ncas, -1)

        T_a_cae  = 1/2 * einsum('JxXB,Yx->XJYB', t1_xaae, rdm_ca, optimize = einsum_type)
        T[:, s_cae__abb:f_cae__abb] += T_a_cae.reshape(ncas, -1)

        T_a_cae =- 1/2 * einsum('JxBX,Yx->XJYB', t1_xaea, rdm_ca, optimize = einsum_type)
        T[:, s_cae__bab:f_cae__bab] += T_a_cae.reshape(ncas, -1)

        mr_adc.log.timer_debug("computing T q1-h1 A-CAE", *cput1)

    def compute_T__q1_h1__A_CCA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        ncas = mr_adc.ncas

        # Amplitudes
        t1_xxaa = mr_adc.t1.xxaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        T_a_cca  = einsum('JKXY->XJKY', t1_xxaa, optimize = einsum_type).copy()
        T_a_cca -= einsum('JKYX->XJKY', t1_xxaa, optimize = einsum_type).copy()
        T_a_cca -= 1/2 * einsum('JKXx,Yx->XJKY', t1_xxaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JKxX,Yx->XJKY', t1_xxaa, rdm_ca, optimize = einsum_type)
        T[:, s_cca__aaa:f_cca__aaa] += T_a_cca[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(ncas, -1)

        T_a_cca  = einsum('JKXY->XJKY', t1_xxaa, optimize = einsum_type).copy()
        T_a_cca -= 1/2 * einsum('JKXx,Yx->XJKY', t1_xxaa, rdm_ca, optimize = einsum_type)
        T[:, s_cca__abb:f_cca__abb] += T_a_cca.reshape(ncas, -1)

        mr_adc.log.timer_debug("computing T q1-h1 A-CCA", *cput1)

    def compute_T__q1_h1__A_CVE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncas = mr_adc.ncas

        # Amplitudes
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        T_a_cve  = einsum('JKXB->XJKB', t1_xvae, optimize = einsum_type).copy()
        T_a_cve -= einsum('KJXB->XJKB', t1_vxae, optimize = einsum_type).copy()
        T[:, s_cve__aaa:f_cve__aaa] += T_a_cve.reshape(ncas, -1)

        T_a_cve  = einsum('JKXB->XJKB', t1_xvae, optimize = einsum_type).copy()
        T[:, s_cve__abb:f_cve__abb] += T_a_cve.reshape(ncas, -1)

        T_a_cve =- einsum('KJXB->XJKB', t1_vxae, optimize = einsum_type).copy()
        T[:, s_cve__bab:f_cve__bab] += T_a_cve.reshape(ncas, -1)

        mr_adc.log.timer_debug("computing T q1-h1 A-CVE", *cput1)

    def compute_T__q1_h1__A_CVA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncas = mr_adc.ncas

        # Amplitudes
        t1_xvaa = mr_adc.t1.xvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        T_a_cva  = einsum('JKXY->XJKY', t1_xvaa, optimize = einsum_type).copy()
        T_a_cva -= einsum('JKYX->XJKY', t1_xvaa, optimize = einsum_type).copy()
        T_a_cva -= 1/2 * einsum('JKXx,Yx->XJKY', t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JKxX,Yx->XJKY', t1_xvaa, rdm_ca, optimize = einsum_type)
        T[:, s_cva__aaa:f_cva__aaa] += T_a_cva.reshape(ncas, -1)

        T_a_cva  = einsum('JKXY->XJKY', t1_xvaa, optimize = einsum_type).copy()
        T_a_cva -= 1/2 * einsum('JKXx,Yx->XJKY', t1_xvaa, rdm_ca, optimize = einsum_type)
        T[:, s_cva__abb:f_cva__abb] += T_a_cva.reshape(ncas, -1)

        T_a_cva =- einsum('JKYX->XJKY', t1_xvaa, optimize = einsum_type).copy()
        T_a_cva += 1/2 * einsum('JKxX,Yx->XJKY', t1_xvaa, rdm_ca, optimize = einsum_type)
        T[:, s_cva__bab:f_cva__bab] += T_a_cva.reshape(ncas, -1)

        mr_adc.log.timer_debug("computing T q1-h1 A-CVA", *cput1)

    def compute_T__q2_h0__A_C(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        ncas = mr_adc.ncas

        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        t1_xe = mr_adc.t1.xe
        t1_ve = mr_adc.t1.ve

        t1_xaea = mr_adc.t1.xaea
        t1_vaea = mr_adc.t1.vaea

        t1_xaae = mr_adc.t1.xaae
        t1_vaae = mr_adc.t1.vaae

        t1_xa = mr_adc.t1.xa
        t1_va = mr_adc.t1.va

        t1_xaaa = mr_adc.t1.xaaa
        t1_vaaa = mr_adc.t1.vaaa

        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        t1_xxaa = mr_adc.t1.xxaa
        t1_xvaa = mr_adc.t1.xvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_c = mr_adc.h0.s_c
        f_c = mr_adc.h0.f_c

        ## Terms removed by neglecting T2 amplitudes
        # T_a_c  = einsum('JX->XJ', t2_xa, optimize = einsum_type).copy()
        # T_a_c += einsum('JxXy,xy->XJ', t2_xaaa, rdm_ca, optimize = einsum_type)
        # T_a_c -= 1/2 * einsum('JxyX,xy->XJ', t2_xaaa, rdm_ca, optimize = einsum_type)

        T_a_c =- 1/2 * einsum('Ja,Xa->XJ', t1_xe, t1_ae, optimize = einsum_type)
        T_a_c += einsum('JiXa,ia->XJ', t1_xxae, t1_xe, optimize = einsum_type)
        T_a_c += einsum('JiXx,ix->XJ', t1_xxaa, t1_xa, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JixX,ix->XJ', t1_xxaa, t1_xa, optimize = einsum_type)
        T_a_c -= einsum('Jixa,iXax->XJ', t1_xxae, t1_xaea, optimize = einsum_type)
        T_a_c += 1/2 * einsum('Jixa,iXxa->XJ', t1_xxae, t1_xaae, optimize = einsum_type)
        T_a_c += 1/2 * einsum('Jixy,iXxy->XJ', t1_xxaa, t1_xaaa, optimize = einsum_type)
        T_a_c -= einsum('Jixy,iXyx->XJ', t1_xxaa, t1_xaaa, optimize = einsum_type)
        T_a_c += einsum('JiXa,ia->XJ', t1_xvae, t1_ve, optimize = einsum_type)
        T_a_c += einsum('JiXx,ix->XJ', t1_xvaa, t1_va, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JixX,ix->XJ', t1_xvaa, t1_va, optimize = einsum_type)
        T_a_c -= einsum('Jixa,iXax->XJ', t1_xvae, t1_vaea, optimize = einsum_type)
        T_a_c += 1/2 * einsum('Jixa,iXxa->XJ', t1_xvae, t1_vaae, optimize = einsum_type)
        T_a_c += 1/2 * einsum('Jixy,iXxy->XJ', t1_xvaa, t1_vaaa, optimize = einsum_type)
        T_a_c -= einsum('Jixy,iXyx->XJ', t1_xvaa, t1_vaaa, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('iJXa,ia->XJ', t1_xxae, t1_xe, optimize = einsum_type)
        T_a_c += 1/2 * einsum('iJxa,iXax->XJ', t1_xxae, t1_xaea, optimize = einsum_type)
        T_a_c -= einsum('iJxa,iXxa->XJ', t1_xxae, t1_xaae, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('iJXa,ia->XJ', t1_vxae, t1_ve, optimize = einsum_type)
        T_a_c += 1/2 * einsum('iJxa,iXax->XJ', t1_vxae, t1_vaea, optimize = einsum_type)
        T_a_c -= einsum('iJxa,iXxa->XJ', t1_vxae, t1_vaae, optimize = einsum_type)
        T_a_c += 1/4 * einsum('Ja,Xxya,xy->XJ', t1_xe, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('Ja,xXya,xy->XJ', t1_xe, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_c += einsum('JiXa,ixay,xy->XJ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JiXa,ixya,xy->XJ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JiXx,iy,xy->XJ', t1_xxaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_c += einsum('JiXx,iyxz,yz->XJ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JiXx,iyzw,xyzw->XJ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JiXx,iyzx,yz->XJ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_c += 1/4 * einsum('JixX,iy,xy->XJ', t1_xxaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JixX,iyxz,yz->XJ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_c += 1/4 * einsum('JixX,iyzw,xyzw->XJ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_c += 1/4 * einsum('JixX,iyzx,yz->XJ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_c += 1/2 * einsum('Jixa,iXay,xy->XJ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/4 * einsum('Jixa,iXya,xy->XJ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/4 * einsum('Jixy,iXxz,yz->XJ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_c += 1/2 * einsum('Jixy,iXyz,xz->XJ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/4 * einsum('Jixy,iXzw,xywz->XJ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_c += 1/2 * einsum('Jixy,iXzx,yz->XJ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/4 * einsum('Jixy,iXzy,xz->XJ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_c += einsum('JiXa,ixay,xy->XJ', t1_xvae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JiXa,ixya,xy->XJ', t1_xvae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JiXx,iy,xy->XJ', t1_xvaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_c += einsum('JiXx,iyxz,yz->XJ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JiXx,iyzw,xyzw->XJ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JiXx,iyzx,yz->XJ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_c += 1/4 * einsum('JixX,iy,xy->XJ', t1_xvaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('JixX,iyxz,yz->XJ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_c += 1/4 * einsum('JixX,iyzw,xyzw->XJ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_c += 1/4 * einsum('JixX,iyzx,yz->XJ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_c += 1/2 * einsum('Jixa,iXay,xy->XJ', t1_xvae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/4 * einsum('Jixa,iXya,xy->XJ', t1_xvae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/4 * einsum('Jixy,iXxz,yz->XJ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_c += 1/2 * einsum('Jixy,iXyz,xz->XJ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/4 * einsum('Jixy,iXzw,xywz->XJ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_c += 1/2 * einsum('Jixy,iXzx,yz->XJ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/4 * einsum('Jixy,iXzy,xz->XJ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_c += 1/2 * einsum('JxXa,ya,xy->XJ', t1_xaae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_c += 1/2 * einsum('JxXa,yzwa,xwzy->XJ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_c -= 1/4 * einsum('JxaX,ya,xy->XJ', t1_xaea, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/4 * einsum('JxaX,yzwa,xwzy->XJ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('Jxay,Xa,xy->XJ', t1_xaea, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_c += 1/4 * einsum('Jxay,Xzwa,xwyz->XJ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_c += 1/4 * einsum('Jxay,Xzya,xz->XJ', t1_xaea, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('Jxay,zXwa,xwyz->XJ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('Jxay,zXya,xz->XJ', t1_xaea, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_c += 1/4 * einsum('Jxya,Xa,xy->XJ', t1_xaae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_c += 1/4 * einsum('Jxya,Xzwa,xwzy->XJ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('Jxya,Xzya,xz->XJ', t1_xaae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_c += 1/4 * einsum('Jxya,zXwa,xwyz->XJ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_c += 1/4 * einsum('Jxya,zXya,xz->XJ', t1_xaae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('iJXa,ixay,xy->XJ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_c += 1/4 * einsum('iJXa,ixya,xy->XJ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/4 * einsum('iJxa,iXay,xy->XJ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_c += 1/2 * einsum('iJxa,iXya,xy->XJ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/2 * einsum('iJXa,ixay,xy->XJ', t1_vxae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_c += 1/4 * einsum('iJXa,ixya,xy->XJ', t1_vxae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_c -= 1/4 * einsum('iJxa,iXay,xy->XJ', t1_vxae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_c += 1/2 * einsum('iJxa,iXya,xy->XJ', t1_vxae, t1_vaae, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncvs, nextern],
                                                                           [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_a_c += 1/2 * einsum('Jiab,iXab->XJ', t1_xxee, t1_xaee, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee t1.xaee", *cput2)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_a_c -= einsum('Jiab,iXba->XJ', t1_xxee, t1_xaee, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee t1.xaee", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, nval, nextern],
                                                                           [nval, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee t1.vaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]

            T_a_c += 1/2 * einsum('Jiab,iXab->XJ', t1_xvee, t1_vaee, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee t1.vaee", *cput2)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee t1.vaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]
            t1_vaee = mr_adc.t1.vaee[:,:,:,s_chunk:f_chunk]

            T_a_c -= einsum('Jiab,iXba->XJ', t1_xvee, t1_vaee, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee t1.vaee", *cput2)
            del(t1_xvee, t1_vaee)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncas, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_a_c -= 1/2 * einsum('Jxab,Xyab,xy->XJ', t1_xaee, t1_aaee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee t1.aaee", *cput2)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
            t1_aaee = mr_adc.t1.aaee[:,:,:,s_chunk:f_chunk]

            T_a_c += 1/4 * einsum('Jxab,Xyba,xy->XJ', t1_xaee, t1_aaee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee t1.aaee", *cput2)
            del(t1_xaee, t1_aaee)

        T[:, s_c:f_c] += T_a_c.copy()

        mr_adc.log.timer_debug("computing T q2-h0 A-C", *cput1)

    def compute_T__q2_h1__A_CAA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        t1_xe = mr_adc.t1.xe
        t1_ve = mr_adc.t1.ve

        t1_xaea = mr_adc.t1.xaea
        t1_vaea = mr_adc.t1.vaea

        t1_xaae = mr_adc.t1.xaae
        t1_vaae = mr_adc.t1.vaae

        t1_xa = mr_adc.t1.xa
        t1_va = mr_adc.t1.va

        t1_xaaa = mr_adc.t1.xaaa
        t1_vaaa = mr_adc.t1.vaaa

        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        t1_xxaa = mr_adc.t1.xxaa
        t1_xvaa = mr_adc.t1.xvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        ## Terms removed by neglecting T2 amplitudes
        # T_a_caa  = 1/2 * einsum('JX,YZ->XJYZ', t2_xa, rdm_ca, optimize = einsum_type)
        # T_a_caa += 1/2 * einsum('JxXZ,Yx->XJYZ', t2_xaaa, rdm_ca, optimize = einsum_type)
        # T_a_caa += 1/2 * einsum('JxXy,YyZx->XJYZ', t2_xaaa, rdm_ccaa, optimize = einsum_type)
        # T_a_caa -= 1/2 * einsum('JxZX,Yx->XJYZ', t2_xaaa, rdm_ca, optimize = einsum_type)
        # T_a_caa -= 1/6 * einsum('JxyX,YyZx->XJYZ', t2_xaaa, rdm_ccaa, optimize = einsum_type)
        # T_a_caa += 1/6 * einsum('JxyX,YyxZ->XJYZ', t2_xaaa, rdm_ccaa, optimize = einsum_type)

        T_a_caa  = 1/4 * einsum('Ja,XZxa,Yx->XJYZ', t1_xe, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Ja,Xa,YZ->XJYZ', t1_xe, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Ja,Xxya,YxZy->XJYZ', t1_xe, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Ja,Xxya,YxyZ->XJYZ', t1_xe, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Ja,ZXxa,Yx->XJYZ', t1_xe, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Ja,xXya,YxZy->XJYZ', t1_xe, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXZ,ix,Yx->XJYZ', t1_xxaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXZ,ixyz,Yxyz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXa,iZax,Yx->XJYZ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXa,iZxa,Yx->XJYZ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXa,ia,YZ->XJYZ', t1_xxae, t1_xe, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXa,ixay,YxZy->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXa,ixya,YxZy->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXx,iZxy,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iZyx,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iZyz,Yxzy->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXx,ix,YZ->XJYZ', t1_xxaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iy,YxZy->XJYZ', t1_xxaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXx,iyxz,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iyzw,YxyZzw->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iyzx,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JiZX,ix,Yx->XJYZ', t1_xxaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JiZX,ixyz,Yxyz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiZa,iXax,Yx->XJYZ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiZa,iXxa,Yx->XJYZ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiZx,iXxy,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiZx,iXyx,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiZx,iXyz,Yxzy->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixX,iZxy,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JixX,iZyx,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iZyz,Yxyz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iZyz,Yxzy->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixX,ix,YZ->XJYZ', t1_xxaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iy,YxZy->XJYZ', t1_xxaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iy,YxyZ->XJYZ', t1_xxaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixX,iyxz,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzw,YxyZzw->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iyzw,YxyzZw->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzx,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iyzx,YyzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixZ,iXxy,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JixZ,iXyx,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixZ,iXyz,Yxyz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixZ,iXyz,Yxzy->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('Jixa,iXax,YZ->XJYZ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixa,iXay,YxZy->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixa,iXay,YxyZ->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jixa,iXxa,YZ->XJYZ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixa,iXya,YxZy->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixa,iXya,YxyZ->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jixy,iXxy,YZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixy,iXxz,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXxz,YyzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('Jixy,iXyx,YZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixy,iXyz,YxZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixy,iXyz,YxzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixy,iXzw,YxyZwz->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzw,YxywZz->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jixy,iXzx,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixy,iXzy,YxZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzy,YxzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXZ,ix,Yx->XJYZ', t1_xvaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXZ,ixyz,Yxyz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXa,iZax,Yx->XJYZ', t1_xvae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXa,iZxa,Yx->XJYZ', t1_xvae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXa,ia,YZ->XJYZ', t1_xvae, t1_ve, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXa,ixay,YxZy->XJYZ', t1_xvae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXa,ixya,YxZy->XJYZ', t1_xvae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXx,iZxy,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iZyx,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iZyz,Yxzy->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXx,ix,YZ->XJYZ', t1_xvaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iy,YxZy->XJYZ', t1_xvaa, t1_va, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXx,iyxz,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iyzw,YxyZzw->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iyzx,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JiZX,ix,Yx->XJYZ', t1_xvaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JiZX,ixyz,Yxyz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiZa,iXax,Yx->XJYZ', t1_xvae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiZa,iXxa,Yx->XJYZ', t1_xvae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiZx,iXxy,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiZx,iXyx,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiZx,iXyz,Yxzy->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixX,iZxy,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JixX,iZyx,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iZyz,Yxyz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iZyz,Yxzy->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixX,ix,YZ->XJYZ', t1_xvaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iy,YxZy->XJYZ', t1_xvaa, t1_va, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iy,YxyZ->XJYZ', t1_xvaa, t1_va, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixX,iyxz,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzw,YxyZzw->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iyzw,YxyzZw->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzx,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iyzx,YyzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixZ,iXxy,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JixZ,iXyx,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixZ,iXyz,Yxyz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixZ,iXyz,Yxzy->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('Jixa,iXax,YZ->XJYZ', t1_xvae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixa,iXay,YxZy->XJYZ', t1_xvae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixa,iXay,YxyZ->XJYZ', t1_xvae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jixa,iXxa,YZ->XJYZ', t1_xvae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixa,iXya,YxZy->XJYZ', t1_xvae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixa,iXya,YxyZ->XJYZ', t1_xvae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jixy,iXxy,YZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixy,iXxz,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXxz,YyzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('Jixy,iXyx,YZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixy,iXyz,YxZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixy,iXyz,YxzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixy,iXzw,YxyZwz->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzw,YxywZz->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jixy,iXzx,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixy,iXzy,YxZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzy,YxzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxXa,Za,Yx->XJYZ', t1_xaae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxXa,Zyza,Yyzx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxXa,yZza,Yyxz->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxXa,ya,YyZx->XJYZ', t1_xaae, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxXa,yzwa,YzyZxw->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxZa,Xa,Yx->XJYZ', t1_xaae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxZa,Xyza,Yyzx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxZa,yXza,Yyxz->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JxaX,Za,Yx->XJYZ', t1_xaea, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JxaX,Zyza,Yyxz->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JxaX,Zyza,Yyzx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JxaX,yZza,Yyxz->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JxaX,ya,YyZx->XJYZ', t1_xaea, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JxaX,ya,YyxZ->XJYZ', t1_xaea, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JxaX,yzwa,YzyZxw->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JxaX,yzwa,YzyxZw->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JxaZ,Xa,Yx->XJYZ', t1_xaea, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JxaZ,Xyza,Yyxz->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JxaZ,Xyza,Yyzx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JxaZ,yXza,Yyxz->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jxay,XZya,Yx->XJYZ', t1_xaea, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jxay,XZza,Yyzx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxay,Xa,YyZx->XJYZ', t1_xaea, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxay,Xzwa,YyzZxw->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxay,Xzwa,YyzwxZ->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxay,Xzya,YzZx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxay,Xzya,YzxZ->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxay,ZXya,Yx->XJYZ', t1_xaea, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxay,ZXza,Yyzx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxay,zXwa,YyzZxw->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxay,zXya,YzZx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxya,XZya,Yx->XJYZ', t1_xaae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,XZza,Yyxz->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,XZza,Yyzx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,Xa,YyZx->XJYZ', t1_xaae, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,Xa,YyxZ->XJYZ', t1_xaae, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,Xzwa,YyzZwx->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,Xzwa,YyzwZx->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxya,Xzya,YzZx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jxya,ZXya,Yx->XJYZ', t1_xaae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,ZXza,Yyxz->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,ZXza,Yyzx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,zXwa,YyzZxw->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,zXwa,YyzxZw->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,zXya,YzZx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,zXya,YzxZ->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJXa,iZax,Yx->XJYZ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJXa,iZxa,Yx->XJYZ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJXa,ia,YZ->XJYZ', t1_xxae, t1_xe, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJXa,ixay,YxZy->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('iJXa,ixya,YxZy->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('iJXa,ixya,YxyZ->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJZa,iXax,Yx->XJYZ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJZa,iXxa,Yx->XJYZ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJxa,iXax,YZ->XJYZ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('iJxa,iXay,YxZy->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('iJxa,iXay,YxyZ->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('iJxa,iXxa,YZ->XJYZ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJxa,iXya,YxZy->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJXa,iZax,Yx->XJYZ', t1_vxae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJXa,iZxa,Yx->XJYZ', t1_vxae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJXa,ia,YZ->XJYZ', t1_vxae, t1_ve, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJXa,ixay,YxZy->XJYZ', t1_vxae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('iJXa,ixya,YxZy->XJYZ', t1_vxae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('iJXa,ixya,YxyZ->XJYZ', t1_vxae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJZa,iXax,Yx->XJYZ', t1_vxae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJZa,iXxa,Yx->XJYZ', t1_vxae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJxa,iXax,YZ->XJYZ', t1_vxae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('iJxa,iXay,YxZy->XJYZ', t1_vxae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('iJxa,iXay,YxyZ->XJYZ', t1_vxae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('iJxa,iXxa,YZ->XJYZ', t1_vxae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJxa,iXya,YxZy->XJYZ', t1_vxae, t1_vaae, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            T_a_caa += 1/4 * einsum('Jiab,iXab,YZ->XJYZ', t1_xxee, t1_xaee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            T_a_caa -= 1/2 * einsum('Jiab,iXba,YZ->XJYZ', t1_xxee, t1_xaee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee t1.xxee", *cput2)
            del(t1_xaee, t1_xxee)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [nval, ncas, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vaee t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_a_caa += 1/4 * einsum('Jiab,iXab,YZ->XJYZ', t1_xvee, t1_vaee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,:,s_chunk:f_chunk]

            T_a_caa -= 1/2 * einsum('Jiab,iXba,YZ->XJYZ', t1_xvee, t1_vaee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vaee t1.xvee", *cput2)
            del(t1_vaee, t1_xvee)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncas, ncas, nextern],
                                                                           [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.aaee t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_a_caa -= 1/4 * einsum('Jxab,XZab,Yx->XJYZ', t1_xaee, t1_aaee, rdm_ca, optimize = einsum_type)
            T_a_caa -= 1/4 * einsum('Jxab,Xyab,YyZx->XJYZ', t1_xaee, t1_aaee, rdm_ccaa, optimize = einsum_type)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,:,s_chunk:f_chunk]

            T_a_caa += 1/4 * einsum('Jxab,XZba,Yx->XJYZ', t1_xaee, t1_aaee, rdm_ca, optimize = einsum_type)
            T_a_caa += 1/12 * einsum('Jxab,Xyba,YyZx->XJYZ', t1_xaee, t1_aaee, rdm_ccaa, optimize = einsum_type)
            T_a_caa -= 1/12 * einsum('Jxab,Xyba,YyxZ->XJYZ', t1_xaee, t1_aaee, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.aaee t1.xaee", *cput2)
            del(t1_aaee, t1_xaee)

        T[:, s_caa__aaa:f_caa__aaa] += T_a_caa.reshape(ncas, -1)


        ## Terms removed by neglecting T2 amplitudes
        # T_a_caa  = 1/2 * einsum('JX,YZ->XJYZ', t2_xa, rdm_ca, optimize = einsum_type)
        # T_a_caa += 1/2 * einsum('JxXZ,Yx->XJYZ', t2_xaaa, rdm_ca, optimize = einsum_type)
        # T_a_caa += 1/2 * einsum('JxXy,YyZx->XJYZ', t2_xaaa, rdm_ccaa, optimize = einsum_type)
        # T_a_caa -= 1/3 * einsum('JxyX,YyZx->XJYZ', t2_xaaa, rdm_ccaa, optimize = einsum_type)
        # T_a_caa -= 1/6 * einsum('JxyX,YyxZ->XJYZ', t2_xaaa, rdm_ccaa, optimize = einsum_type)

        T_a_caa =- 1/4 * einsum('Ja,Xa,YZ->XJYZ', t1_xe, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Ja,Xxya,YxZy->XJYZ', t1_xe, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Ja,Xxya,YxyZ->XJYZ', t1_xe, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Ja,ZXxa,Yx->XJYZ', t1_xe, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Ja,xXya,YxZy->XJYZ', t1_xe, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXZ,ix,Yx->XJYZ', t1_xxaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXZ,ixyz,Yxyz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXa,iZax,Yx->XJYZ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXa,iZxa,Yx->XJYZ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXa,ia,YZ->XJYZ', t1_xxae, t1_xe, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXa,ixay,YxZy->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXa,ixya,YxZy->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXx,iZxy,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iZyx,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iZyz,Yxzy->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXx,ix,YZ->XJYZ', t1_xxaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iy,YxZy->XJYZ', t1_xxaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXx,iyxz,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iyzw,YxyZzw->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iyzx,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixX,iZxy,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iZyz,Yxyz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JixX,iZyz,Yxzy->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixX,ix,YZ->XJYZ', t1_xxaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JixX,iy,YxZy->XJYZ', t1_xxaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iy,YxyZ->XJYZ', t1_xxaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixX,iyxz,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JixX,iyzw,YxyZzw->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzw,YxyzZw->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JixX,iyzx,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzx,YyzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JixZ,iXyx,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JixZ,iXyz,Yxyz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixZ,iXyz,Yxzy->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('Jixa,iXax,YZ->XJYZ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/3 * einsum('Jixa,iXay,YxZy->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixa,iXay,YxyZ->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jixa,iXxa,YZ->XJYZ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixa,iXya,YxZy->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixa,iXya,YxyZ->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jixy,iXxy,YZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixy,iXxz,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixy,iXxz,YyzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('Jixy,iXyx,YZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/3 * einsum('Jixy,iXyz,YxZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixy,iXyz,YxzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixy,iXzw,YxyZwz->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzw,YxyZzw->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzw,YxywzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzw,YxyzZw->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzw,YxyzwZ->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jixy,iXzx,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixy,iXzy,YxZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixy,iXzy,YxzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXZ,ix,Yx->XJYZ', t1_xvaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXZ,ixyz,Yxyz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXa,iZax,Yx->XJYZ', t1_xvae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXa,iZxa,Yx->XJYZ', t1_xvae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXa,ia,YZ->XJYZ', t1_xvae, t1_ve, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXa,ixay,YxZy->XJYZ', t1_xvae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXa,ixya,YxZy->XJYZ', t1_xvae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXx,iZxy,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iZyx,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iZyz,Yxzy->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXx,ix,YZ->XJYZ', t1_xvaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iy,YxZy->XJYZ', t1_xvaa, t1_va, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiXx,iyxz,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iyzw,YxyZzw->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiXx,iyzx,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixX,iZxy,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iZyz,Yxyz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JixX,iZyz,Yxzy->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixX,ix,YZ->XJYZ', t1_xvaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JixX,iy,YxZy->XJYZ', t1_xvaa, t1_va, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iy,YxyZ->XJYZ', t1_xvaa, t1_va, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixX,iyxz,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JixX,iyzw,YxyZzw->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzw,YxyzZw->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JixX,iyzx,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzx,YyzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JixZ,iXyx,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JixZ,iXyz,Yxyz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixZ,iXyz,Yxzy->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('Jixa,iXax,YZ->XJYZ', t1_xvae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/3 * einsum('Jixa,iXay,YxZy->XJYZ', t1_xvae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixa,iXay,YxyZ->XJYZ', t1_xvae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jixa,iXxa,YZ->XJYZ', t1_xvae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixa,iXya,YxZy->XJYZ', t1_xvae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixa,iXya,YxyZ->XJYZ', t1_xvae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jixy,iXxy,YZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixy,iXxz,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixy,iXxz,YyzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('Jixy,iXyx,YZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/3 * einsum('Jixy,iXyz,YxZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixy,iXyz,YxzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixy,iXzw,YxyZwz->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzw,YxyZzw->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzw,YxywzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzw,YxyzZw->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzw,YxyzwZ->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jixy,iXzx,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixy,iXzy,YxZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jixy,iXzy,YxzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxXa,Za,Yx->XJYZ', t1_xaae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxXa,Zyza,Yyzx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxXa,yZza,Yyxz->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxXa,ya,YyZx->XJYZ', t1_xaae, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxXa,yzwa,YzyZxw->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JxaX,Zyza,Yyxz->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JxaX,Zyza,Yyzx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JxaX,ya,YyZx->XJYZ', t1_xaea, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JxaX,ya,YyxZ->XJYZ', t1_xaea, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JxaX,yzwa,YzyZxw->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JxaX,yzwa,YzyxZw->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JxaZ,Xa,Yx->XJYZ', t1_xaea, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JxaZ,Xyza,Yyxz->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JxaZ,Xyza,Yyzx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JxaZ,yXza,Yyxz->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxay,Xa,YyZx->XJYZ', t1_xaea, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jxay,Xzwa,YyzZxw->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxay,Xzwa,YyzwxZ->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jxay,Xzya,YzZx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxay,Xzya,YzxZ->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxay,ZXya,Yx->XJYZ', t1_xaea, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxay,ZXza,Yyzx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxay,zXwa,YyzZxw->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxay,zXya,YzZx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxya,XZya,Yx->XJYZ', t1_xaae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jxya,XZza,Yyxz->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,XZza,Yyzx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jxya,Xa,YyZx->XJYZ', t1_xaae, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,Xa,YyxZ->XJYZ', t1_xaae, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,Xzwa,YyzZwx->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,Xzwa,YyzZxw->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,Xzwa,YyzwxZ->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,Xzwa,YyzxZw->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,Xzwa,YyzxwZ->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('Jxya,Xzya,YzZx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,ZXza,Yyxz->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jxya,ZXza,Yyzx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jxya,zXwa,YyzZxw->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,zXwa,YyzxZw->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jxya,zXya,YzZx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,zXya,YzxZ->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJXa,iZax,Yx->XJYZ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJXa,ia,YZ->XJYZ', t1_xxae, t1_xe, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJXa,ixay,YxZy->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('iJXa,ixya,YxZy->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('iJXa,ixya,YxyZ->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJZa,iXxa,Yx->XJYZ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJxa,iXax,YZ->XJYZ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('iJxa,iXay,YxZy->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('iJxa,iXay,YxyZ->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('iJxa,iXxa,YZ->XJYZ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJxa,iXya,YxZy->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJXa,iZax,Yx->XJYZ', t1_vxae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJXa,ia,YZ->XJYZ', t1_vxae, t1_ve, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJXa,ixay,YxZy->XJYZ', t1_vxae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('iJXa,ixya,YxZy->XJYZ', t1_vxae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('iJXa,ixya,YxyZ->XJYZ', t1_vxae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJZa,iXxa,Yx->XJYZ', t1_vxae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJxa,iXax,YZ->XJYZ', t1_vxae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('iJxa,iXay,YxZy->XJYZ', t1_vxae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('iJxa,iXay,YxyZ->XJYZ', t1_vxae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/2 * einsum('iJxa,iXxa,YZ->XJYZ', t1_vxae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJxa,iXya,YxZy->XJYZ', t1_vxae, t1_vaae, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            T_a_caa += 1/4 * einsum('Jiab,iXab,YZ->XJYZ', t1_xxee, t1_xaee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_a_caa -= 1/2 * einsum('Jiab,iXba,YZ->XJYZ', t1_xxee, t1_xaee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee t1.xxee", *cput2)
            del(t1_xaee, t1_xxee)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [nval, ncas, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vaee t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_a_caa += 1/4 * einsum('Jiab,iXab,YZ->XJYZ', t1_xvee, t1_vaee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,:,s_chunk:f_chunk]

            T_a_caa -= 1/2 * einsum('Jiab,iXba,YZ->XJYZ', t1_xvee, t1_vaee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vaee t1.xvee", *cput2)
            del(t1_vaee, t1_xvee)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncas, ncas, nextern],
                                                                           [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.aaee t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_a_caa -= 1/4 * einsum('Jxab,XZab,Yx->XJYZ', t1_xaee, t1_aaee, rdm_ca, optimize = einsum_type)
            T_a_caa -= 1/4 * einsum('Jxab,Xyab,YyZx->XJYZ', t1_xaee, t1_aaee, rdm_ccaa, optimize = einsum_type)
            T_a_caa += 1/6 * einsum('Jxab,Xyba,YyZx->XJYZ', t1_xaee, t1_aaee, rdm_ccaa, optimize = einsum_type)
            T_a_caa += 1/12 * einsum('Jxab,Xyba,YyxZ->XJYZ', t1_xaee, t1_aaee, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.aaee t1.xaee", *cput2)

        T[:, s_caa__abb:f_caa__abb] += T_a_caa.reshape(ncas, -1)


        ## Terms removed by neglecting T2 amplitudes
        # T_a_caa =- 1/2 * einsum('JxZX,Yx->XJYZ', t2_xaaa, rdm_ca, optimize = einsum_type)
        # T_a_caa += 1/6 * einsum('JxyX,YyZx->XJYZ', t2_xaaa, rdm_ccaa, optimize = einsum_type)
        # T_a_caa += 1/3 * einsum('JxyX,YyxZ->XJYZ', t2_xaaa, rdm_ccaa, optimize = einsum_type)

        T_a_caa  = 1/4 * einsum('Ja,XZxa,Yx->XJYZ', t1_xe, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Ja,Xxya,YxZy->XJYZ', t1_xe, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Ja,Xxya,YxyZ->XJYZ', t1_xe, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JiZX,ix,Yx->XJYZ', t1_xxaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JiZX,ixyz,Yxyz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiZa,iXax,Yx->XJYZ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiZa,iXxa,Yx->XJYZ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiZx,iXxy,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiZx,iXyx,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiZx,iXyz,Yxzy->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JixX,iZyx,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JixX,iZyz,Yxyz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iZyz,Yxzy->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iy,YxZy->XJYZ', t1_xxaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JixX,iy,YxyZ->XJYZ', t1_xxaa, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzw,YxyZwz->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzw,YxywZz->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzw,YxywzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iyzw,YxyzZw->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzw,YxyzwZ->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iyzx,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JixX,iyzx,YyzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixZ,iXxy,Yy->XJYZ', t1_xxaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixZ,iXyz,Yxyz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JixZ,iXyz,Yxzy->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixa,iXay,YxZy->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/3 * einsum('Jixa,iXay,YxyZ->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixa,iXya,YxZy->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixa,iXya,YxyZ->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXxz,YyZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixy,iXxz,YyzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixy,iXyz,YxZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/3 * einsum('Jixy,iXyz,YxzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzw,YxyZwz->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixy,iXzw,YxywZz->XJYZ', t1_xxaa, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzy,YxZz->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixy,iXzy,YxzZ->XJYZ', t1_xxaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JiZX,ix,Yx->XJYZ', t1_xvaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JiZX,ixyz,Yxyz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiZa,iXax,Yx->XJYZ', t1_xvae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiZa,iXxa,Yx->XJYZ', t1_xvae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/2 * einsum('JiZx,iXxy,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiZx,iXyx,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JiZx,iXyz,Yxzy->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JixX,iZyx,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JixX,iZyz,Yxyz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iZyz,Yxzy->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iy,YxZy->XJYZ', t1_xvaa, t1_va, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JixX,iy,YxyZ->XJYZ', t1_xvaa, t1_va, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzw,YxyZwz->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzw,YxywZz->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzw,YxywzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iyzw,YxyzZw->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixX,iyzw,YxyzwZ->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JixX,iyzx,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JixX,iyzx,YyzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JixZ,iXxy,Yy->XJYZ', t1_xvaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JixZ,iXyz,Yxyz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JixZ,iXyz,Yxzy->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixa,iXay,YxZy->XJYZ', t1_xvae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/3 * einsum('Jixa,iXay,YxyZ->XJYZ', t1_xvae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixa,iXya,YxZy->XJYZ', t1_xvae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixa,iXya,YxyZ->XJYZ', t1_xvae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXxz,YyZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixy,iXxz,YyzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jixy,iXyz,YxZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/3 * einsum('Jixy,iXyz,YxzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzw,YxyZwz->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixy,iXzw,YxywZz->XJYZ', t1_xvaa, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jixy,iXzy,YxZz->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('Jixy,iXzy,YxzZ->XJYZ', t1_xvaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxZa,Xa,Yx->XJYZ', t1_xaae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxZa,Xyza,Yyzx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('JxZa,yXza,Yyxz->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JxaX,Za,Yx->XJYZ', t1_xaea, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JxaX,Zyza,Yyxz->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JxaX,Zyza,Yyzx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('JxaX,yZza,Yyxz->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JxaX,ya,YyZx->XJYZ', t1_xaea, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('JxaX,ya,YyxZ->XJYZ', t1_xaea, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JxaX,yzwa,YzyZwx->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JxaX,yzwa,YzywZx->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JxaX,yzwa,YzywxZ->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('JxaX,yzwa,YzyxZw->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JxaX,yzwa,YzyxwZ->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('JxaZ,Xyza,Yyxz->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('JxaZ,Xyza,Yyzx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jxay,XZya,Yx->XJYZ', t1_xaea, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jxay,XZza,Yyzx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxay,Xzwa,YyzZwx->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxay,Xzwa,YyzwZx->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxay,Xzwa,YyzwxZ->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxay,Xzwa,YyzxZw->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxay,Xzwa,YyzxwZ->XJYZ', t1_xaea, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxay,Xzya,YzZx->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jxay,Xzya,YzxZ->XJYZ', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,XZza,Yyxz->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jxya,XZza,Yyzx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,Xa,YyZx->XJYZ', t1_xaae, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jxya,Xa,YyxZ->XJYZ', t1_xaae, t1_ae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,Xzwa,YyzZwx->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jxya,Xzwa,YyzwZx->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('Jxya,ZXya,Yx->XJYZ', t1_xaae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jxya,ZXza,Yyxz->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,ZXza,Yyzx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,zXwa,YyzZwx->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,zXwa,YyzwZx->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,zXwa,YyzwxZ->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,zXwa,YyzxZw->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('Jxya,zXwa,YyzxwZ->XJYZ', t1_xaae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('Jxya,zXya,YzZx->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('Jxya,zXya,YzxZ->XJYZ', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJXa,iZxa,Yx->XJYZ', t1_xxae, t1_xaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('iJXa,ixya,YxZy->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('iJXa,ixya,YxyZ->XJYZ', t1_xxae, t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJZa,iXax,Yx->XJYZ', t1_xxae, t1_xaea, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('iJxa,iXay,YxZy->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('iJxa,iXay,YxyZ->XJYZ', t1_xxae, t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/4 * einsum('iJXa,iZxa,Yx->XJYZ', t1_vxae, t1_vaae, rdm_ca, optimize = einsum_type)
        T_a_caa -= 1/12 * einsum('iJXa,ixya,YxZy->XJYZ', t1_vxae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/6 * einsum('iJXa,ixya,YxyZ->XJYZ', t1_vxae, t1_vaae, rdm_ccaa, optimize = einsum_type)
        T_a_caa -= 1/4 * einsum('iJZa,iXax,Yx->XJYZ', t1_vxae, t1_vaea, rdm_ca, optimize = einsum_type)
        T_a_caa += 1/12 * einsum('iJxa,iXay,YxZy->XJYZ', t1_vxae, t1_vaea, rdm_ccaa, optimize = einsum_type)
        T_a_caa += 1/6 * einsum('iJxa,iXay,YxyZ->XJYZ', t1_vxae, t1_vaea, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncas, ncas, nextern],
                                                                           [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.aaee t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,:,s_chunk:f_chunk]
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_a_caa += 1/4 * einsum('Jxab,XZba,Yx->XJYZ', t1_xaee, t1_aaee, rdm_ca, optimize = einsum_type)
            T_a_caa -= 1/12 * einsum('Jxab,Xyba,YyZx->XJYZ', t1_xaee, t1_aaee, rdm_ccaa, optimize = einsum_type)
            T_a_caa -= 1/6 * einsum('Jxab,Xyba,YyxZ->XJYZ', t1_xaee, t1_aaee, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.aaee t1.xaee", *cput2)
            del(t1_aaee, t1_xaee)

        T[:, s_caa__bab:f_caa__bab] += T_a_caa.reshape(ncas, -1)

        mr_adc.log.timer_debug("computing T q2-h1 A-CAA", *cput1)

    def compute_T__q2_h1__A_CCE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        ncas = mr_adc.ncas

        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        t1_xa = mr_adc.t1.xa
        t1_xaaa = mr_adc.t1.xaaa

        t1_xxaa = mr_adc.t1.xxaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        ## Terms removed by neglecting T2 amplitudes
        # T_a_cce  = einsum('JKXB->XJKB', t2_xxae, optimize = einsum_type).copy()
        # T_a_cce -= einsum('KJXB->XJKB', t2_xxae, optimize = einsum_type).copy()

        T_a_cce =- 1/2 * einsum('JxBX,Kx->XJKB', t1_xaea, t1_xa, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('JxXB,Kx->XJKB', t1_xaae, t1_xa, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('KxBX,Jx->XJKB', t1_xaea, t1_xa, optimize = einsum_type)
        T_a_cce -= 1/2 * einsum('KxXB,Jx->XJKB', t1_xaae, t1_xa, optimize = einsum_type)
        T_a_cce -= 1/2 * einsum('xB,JKXx->XJKB', t1_ae, t1_xxaa, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('xB,JKxX->XJKB', t1_ae, t1_xxaa, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('xyXB,JKxy->XJKB', t1_aaae, t1_xxaa, optimize = einsum_type)
        T_a_cce -= 1/2 * einsum('xyXB,JKyx->XJKB', t1_aaae, t1_xxaa, optimize = einsum_type)
        T_a_cce -= 1/2 * einsum('JxBX,Kyxz,yz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('JxBX,Kyzx,yz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/2 * einsum('JxBy,KyXz,xz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('JxBy,KyzX,xz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('JxBy,KzXx,yz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('JxBy,KzxX,yz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('JxXB,Kyxz,yz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('JxXB,Kyzx,yz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('JxyB,KyXz,xz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('JxyB,KyzX,xz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('JxyB,KzXx,yz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('JxyB,KzxX,yz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('KxBX,Jyxz,yz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('KxBX,Jyzx,yz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('KxBy,JyXz,xz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('KxBy,JyzX,xz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/2 * einsum('KxBy,JzXx,yz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('KxBy,JzxX,yz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/2 * einsum('KxXB,Jyxz,yz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('KxXB,Jyzx,yz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('KxyB,JyXz,xz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('KxyB,JyzX,xz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('KxyB,JzXx,yz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('KxyB,JzxX,yz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('xyXB,JKxz,yz->XJKB', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('xyXB,JKyz,xz->XJKB', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('xyXB,JKzx,yz->XJKB', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('xyXB,JKzy,xz->XJKB', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('xyzB,JKXx,zy->XJKB', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/2 * einsum('xyzB,JKXy,zx->XJKB', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('xyzB,JKxX,zy->XJKB', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('xyzB,JKyX,zx->XJKB', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [nval, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_a_cce += 1/2 * einsum('JKBa,Xa->XJKB', t1_xxee, t1_ae, optimize = einsum_type)
            T_a_cce -= 1/2 * einsum('KJBa,Xa->XJKB', t1_xxee, t1_ae, optimize = einsum_type)
            T_a_cce -= 1/4 * einsum('JKBa,Xxya,xy->XJKB', t1_xxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_a_cce += 1/2 * einsum('JKBa,xXya,xy->XJKB', t1_xxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_a_cce += 1/4 * einsum('KJBa,Xxya,xy->XJKB', t1_xxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_a_cce -= 1/2 * einsum('KJBa,xXya,xy->XJKB', t1_xxee, t1_aaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_ae, t1_aaae)

        T[:, s_cce__aaa:f_cce__aaa] += T_a_cce[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(ncas, -1)


        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        ## Terms removed by neglecting T2 amplitudes
        # T_a_cce  = einsum('JKXB->XJKB', t2_xxae, optimize = einsum_type).copy()

        T_a_cce  = 1/2 * einsum('JxXB,Kx->XJKB', t1_xaae, t1_xa, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('KxBX,Jx->XJKB', t1_xaea, t1_xa, optimize = einsum_type)
        T_a_cce -= 1/2 * einsum('xB,JKXx->XJKB', t1_ae, t1_xxaa, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('xyXB,JKxy->XJKB', t1_aaae, t1_xxaa, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('JxXB,Kyxz,yz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('JxXB,Kyzx,yz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('JxyB,KyzX,xz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('JxyB,KzxX,yz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('KxBX,Jyxz,yz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('KxBX,Jyzx,yz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/2 * einsum('KxBy,JyXz,xz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('KxBy,JyzX,xz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/2 * einsum('KxBy,JzXx,yz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('KxBy,JzxX,yz->XJKB', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('KxyB,JyXz,xz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('KxyB,JzXx,yz->XJKB', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('xyXB,JKxz,yz->XJKB', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/4 * einsum('xyXB,JKzy,xz->XJKB', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_a_cce += 1/4 * einsum('xyzB,JKXx,zy->XJKB', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_a_cce -= 1/2 * einsum('xyzB,JKXy,zx->XJKB', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [nval, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_a_cce -= 1/2 * einsum('KJBa,Xa->XJKB', t1_xxee, t1_ae, optimize = einsum_type)
            T_a_cce += 1/4 * einsum('KJBa,Xxya,xy->XJKB', t1_xxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_a_cce -= 1/2 * einsum('KJBa,xXya,xy->XJKB', t1_xxee, t1_aaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_ae, t1_aaae)

        T[:, s_cce__abb:f_cce__abb] += T_a_cce.reshape(ncas, -1)

        mr_adc.log.timer_debug("computing T q2-h1 A-CCE", *cput1)

    def compute_T__q2_h1__A_CAE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        t1_xa = mr_adc.t1.xa
        t1_va = mr_adc.t1.va

        t1_xaaa = mr_adc.t1.xaaa
        t1_vaaa = mr_adc.t1.vaaa

        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        ## Terms removed by neglecting T2 amplitudes
        # T_a_cae =- 1/2 * einsum('JxBX,Yx->XJYB', t2_xaea, rdm_ca, optimize = einsum_type)
        # T_a_cae += 1/2 * einsum('JxXB,Yx->XJYB', t2_xaae, rdm_ca, optimize = einsum_type)

        T_a_cae =- 1/4 * einsum('JiXB,ix,Yx->XJYB', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('JiXB,ixyz,Yxyz->XJYB', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('JixB,iXxy,Yy->XJYB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('JixB,iXyx,Yy->XJYB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/12 * einsum('JixB,iXyz,Yxyz->XJYB', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/12 * einsum('JixB,iXyz,Yxzy->XJYB', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('JiXB,ix,Yx->XJYB', t1_xvae, t1_va, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('JiXB,ixyz,Yxyz->XJYB', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('JixB,iXxy,Yy->XJYB', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('JixB,iXyx,Yy->XJYB', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/12 * einsum('JixB,iXyz,Yxyz->XJYB', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/12 * einsum('JixB,iXyz,Yxzy->XJYB', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('iJXB,ix,Yx->XJYB', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('iJXB,ixyz,Yxyz->XJYB', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/2 * einsum('iJxB,iXxy,Yy->XJYB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('iJxB,iXyx,Yy->XJYB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('iJxB,iXyz,Yxzy->XJYB', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('iJXB,ix,Yx->XJYB', t1_vxae, t1_va, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('iJXB,ixyz,Yxyz->XJYB', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/2 * einsum('iJxB,iXxy,Yy->XJYB', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('iJxB,iXyx,Yy->XJYB', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('iJxB,iXyz,Yxzy->XJYB', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('xB,JyXx,Yy->XJYB', t1_ae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('xB,JyxX,Yy->XJYB', t1_ae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('xyXB,Jx,Yy->XJYB', t1_aaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('xyXB,Jy,Yx->XJYB', t1_aaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/12 * einsum('xyXB,Jzwx,Ywyz->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/12 * einsum('xyXB,Jzwx,Ywzy->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/12 * einsum('xyXB,Jzwy,Ywxz->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/12 * einsum('xyXB,Jzwy,Ywzx->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('xyXB,Jzxw,Ywyz->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('xyXB,Jzxy,Yz->XJYB', t1_aaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('xyXB,Jzyw,Ywxz->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('xyXB,Jzyx,Yz->XJYB', t1_aaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('xyzB,JwXx,Yzyw->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('xyzB,JwXy,Yzwx->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/12 * einsum('xyzB,JwxX,Yzwy->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/12 * einsum('xyzB,JwxX,Yzyw->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('xyzB,JwyX,Yzwx->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('xyzB,JzXw,Ywyx->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/12 * einsum('xyzB,JzwX,Ywxy->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/12 * einsum('xyzB,JzwX,Ywyx->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_a_cae += 1/2 * einsum('JiBa,iXax,Yx->XJYB', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_a_cae -= 1/4 * einsum('JiBa,iXxa,Yx->XJYB', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)
            T_a_cae -= 1/4 * einsum('iJBa,iXax,Yx->XJYB', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_a_cae += 1/4 * einsum('iJBa,iXxa,Yx->XJYB', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_xaae, t1_xaea)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_a_cae += 1/2 * einsum('JiBa,iXax,Yx->XJYB', t1_xvee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_a_cae -= 1/4 * einsum('JiBa,iXxa,Yx->XJYB', t1_xvee, t1_vaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee, t1_vaae, t1_vaea)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_a_cae -= 1/4 * einsum('iJBa,iXax,Yx->XJYB', t1_vxee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_a_cae += 1/4 * einsum('iJBa,iXxa,Yx->XJYB', t1_vxee, t1_vaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee, t1_vaae, t1_vaea)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_a_cae += 1/4 * einsum('JxBa,Xa,Yx->XJYB', t1_xaee, t1_ae, rdm_ca, optimize = einsum_type)
            T_a_cae += 1/4 * einsum('JxBa,Xyza,Yyzx->XJYB', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_a_cae += 1/4 * einsum('JxBa,yXza,Yyxz->XJYB', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_a_cae -= 1/4 * einsum('JxaB,Xa,Yx->XJYB', t1_xaee, t1_ae, rdm_ca, optimize = einsum_type)
            T_a_cae += 1/12 * einsum('JxaB,Xyza,Yyxz->XJYB', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_a_cae -= 1/12 * einsum('JxaB,Xyza,Yyzx->XJYB', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_a_cae -= 1/4 * einsum('JxaB,yXza,Yyxz->XJYB', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee, t1_ae, t1_aaae)

        T[:, s_cae__aaa:f_cae__aaa] += T_a_cae.reshape(ncas, -1)


        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        ## Terms removed by neglecting T2 amplitudes
        # T_a_cae  = 1/2 * einsum('JxXB,Yx->XJYB', t2_xaae, rdm_ca, optimize = einsum_type)
        # T_a_cae -= 1/4 * einsum('JiXB,ix,Yx->XJYB', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)

        T_a_cae =- 1/4 * einsum('JiXB,ixyz,Yxyz->XJYB', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('JixB,iXyx,Yy->XJYB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/6 * einsum('JixB,iXyz,Yxyz->XJYB', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/12 * einsum('JixB,iXyz,Yxzy->XJYB', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('JiXB,ix,Yx->XJYB', t1_xvae, t1_va, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('JiXB,ixyz,Yxyz->XJYB', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('JixB,iXyx,Yy->XJYB', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/6 * einsum('JixB,iXyz,Yxyz->XJYB', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/12 * einsum('JixB,iXyz,Yxzy->XJYB', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('xB,JyXx,Yy->XJYB', t1_ae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('xyXB,Jx,Yy->XJYB', t1_aaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/6 * einsum('xyXB,Jzwx,Ywyz->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/12 * einsum('xyXB,Jzwx,Ywzy->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/12 * einsum('xyXB,Jzwy,Ywxz->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/6 * einsum('xyXB,Jzwy,Ywzx->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('xyXB,Jzxw,Ywyz->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('xyXB,Jzxy,Yz->XJYB', t1_aaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('xyzB,JwXx,Yzyw->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('xyzB,JwXy,Yzwx->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/12 * einsum('xyzB,JwxX,Yzwy->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/6 * einsum('xyzB,JwxX,Yzyw->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('xyzB,JzXw,Ywyx->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/12 * einsum('xyzB,JzwX,Ywxy->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/6 * einsum('xyzB,JzwX,Ywyx->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]
            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]

            T_a_cae += 1/4 * einsum('iJBa,iXxa,Yx->XJYB', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_xaae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]
            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]

            T_a_cae += 1/4 * einsum('iJBa,iXxa,Yx->XJYB', t1_vxee, t1_vaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee, t1_vaae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_a_cae -= 1/4 * einsum('JxaB,Xa,Yx->XJYB', t1_xaee, t1_ae, rdm_ca, optimize = einsum_type)
            T_a_cae += 1/6 * einsum('JxaB,Xyza,Yyxz->XJYB', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_a_cae += 1/12 * einsum('JxaB,Xyza,Yyzx->XJYB', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_a_cae -= 1/4 * einsum('JxaB,yXza,Yyxz->XJYB', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee, t1_ae, t1_aaae)

        T[:, s_cae__abb:f_cae__abb] += T_a_cae.reshape(ncas, -1)


        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        ## Terms removed by neglecting T2 amplitudes
        # T_a_cae =- 1/2 * einsum('JxBX,Yx->XJYB', t2_xaea, rdm_ca, optimize = einsum_type)

        T_a_cae =- 1/4 * einsum('JixB,iXxy,Yy->XJYB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/12 * einsum('JixB,iXyz,Yxyz->XJYB', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/6 * einsum('JixB,iXyz,Yxzy->XJYB', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('JixB,iXxy,Yy->XJYB', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/12 * einsum('JixB,iXyz,Yxyz->XJYB', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/6 * einsum('JixB,iXyz,Yxzy->XJYB', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('iJXB,ix,Yx->XJYB', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('iJXB,ixyz,Yxyz->XJYB', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/2 * einsum('iJxB,iXxy,Yy->XJYB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('iJxB,iXyx,Yy->XJYB', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('iJxB,iXyz,Yxzy->XJYB', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('iJXB,ix,Yx->XJYB', t1_vxae, t1_va, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('iJXB,ixyz,Yxyz->XJYB', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/2 * einsum('iJxB,iXxy,Yy->XJYB', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('iJxB,iXyx,Yy->XJYB', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('iJxB,iXyz,Yxzy->XJYB', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('xB,JyxX,Yy->XJYB', t1_ae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('xyXB,Jy,Yx->XJYB', t1_aaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_cae += 1/12 * einsum('xyXB,Jzwx,Ywyz->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/6 * einsum('xyXB,Jzwx,Ywzy->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/6 * einsum('xyXB,Jzwy,Ywxz->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/12 * einsum('xyXB,Jzwy,Ywzx->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('xyXB,Jzyw,Ywxz->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/4 * einsum('xyXB,Jzyx,Yz->XJYB', t1_aaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cae -= 1/6 * einsum('xyzB,JwxX,Yzwy->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae -= 1/12 * einsum('xyzB,JwxX,Yzyw->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/4 * einsum('xyzB,JwyX,Yzwx->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/6 * einsum('xyzB,JzwX,Ywxy->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cae += 1/12 * einsum('xyzB,JzwX,Ywyx->XJYB', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_a_cae += 1/2 * einsum('JiBa,iXax,Yx->XJYB', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_a_cae -= 1/4 * einsum('JiBa,iXxa,Yx->XJYB', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)
            T_a_cae -= 1/4 * einsum('iJBa,iXax,Yx->XJYB', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_xaae, t1_xaea)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_a_cae += 1/2 * einsum('JiBa,iXax,Yx->XJYB', t1_xvee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_a_cae -= 1/4 * einsum('JiBa,iXxa,Yx->XJYB', t1_xvee, t1_vaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee, t1_vaae)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_a_cae -= 1/4 * einsum('iJBa,iXax,Yx->XJYB', t1_vxee, t1_vaea, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_a_cae += 1/4 * einsum('JxBa,Xa,Yx->XJYB', t1_xaee, t1_ae, rdm_ca, optimize = einsum_type)
            T_a_cae += 1/4 * einsum('JxBa,Xyza,Yyzx->XJYB', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_a_cae += 1/4 * einsum('JxBa,yXza,Yyxz->XJYB', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_a_cae -= 1/12 * einsum('JxaB,Xyza,Yyxz->XJYB', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_a_cae -= 1/6 * einsum('JxaB,Xyza,Yyzx->XJYB', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee, t1_ae, t1_aaae)

        T[:, s_cae__bab:f_cae__bab] += T_a_cae.reshape(ncas, -1)

        mr_adc.log.timer_debug("computing T q2-h1 A-CAE", *cput1)

    def compute_T__q2_h1__A_CCA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        t1_xa = mr_adc.t1.xa
        t1_xaaa = mr_adc.t1.xaaa

        t1_xxae = mr_adc.t1.xxae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        ## Terms removed by neglecting T2 amplitudes
        # T_a_cca  = einsum('JKXY->XJKY', t2_xxaa, optimize = einsum_type).copy()
        # T_a_cca -= einsum('JKYX->XJKY', t2_xxaa, optimize = einsum_type).copy()
        # T_a_cca -= 1/2 * einsum('JKXx,Yx->XJKY', t2_xxaa, rdm_ca, optimize = einsum_type)
        # T_a_cca += 1/2 * einsum('JKxX,Yx->XJKY', t2_xxaa, rdm_ca, optimize = einsum_type)

        T_a_cca  = 1/2 * einsum('JKXa,Ya->XJKY', t1_xxae, t1_ae, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JKYa,Xa->XJKY', t1_xxae, t1_ae, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('JKxa,XYxa->XJKY', t1_xxae, t1_aaae, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JKxa,YXxa->XJKY', t1_xxae, t1_aaae, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('Jx,KxXY->XJKY', t1_xa, t1_xaaa, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('Jx,KxYX->XJKY', t1_xa, t1_xaaa, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JxXY,Kx->XJKY', t1_xaaa, t1_xa, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('JxYX,Kx->XJKY', t1_xaaa, t1_xa, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('KJXa,Ya->XJKY', t1_xxae, t1_ae, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('KJYa,Xa->XJKY', t1_xxae, t1_ae, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('KJxa,XYxa->XJKY', t1_xxae, t1_aaae, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('KJxa,YXxa->XJKY', t1_xxae, t1_aaae, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JKXa,Yxya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JKXa,xYya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JKXa,xa,Yx->XJKY', t1_xxae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JKXa,xyza,Yzyx->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JKYa,Xxya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JKYa,xXya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JKxa,XYya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JKxa,Xa,Yx->XJKY', t1_xxae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JKxa,Xyxa,Yy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/12 * einsum('JKxa,Xyza,Yzxy->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/12 * einsum('JKxa,Xyza,Yzyx->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JKxa,YXya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JKxa,yXxa,Yy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JKxa,yXza,Yzxy->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('Jx,KxXy,Yy->XJKY', t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('Jx,KxyX,Yy->XJKY', t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JxXY,Kyxz,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxXY,Kyzx,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxXy,Kx,Yy->XJKY', t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('JxXy,KyYz,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxXy,KyzY,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxXy,Kyzw,Yxzw->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JxXy,KzYx,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxXy,Kzwx,Yzwy->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxXy,KzxY,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxXy,Kzxw,Yzyw->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('JxYX,Kyxz,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxYX,Kyzx,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('JxYy,KyXz,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxYy,KyzX,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JxYy,KzXx,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxYy,KzxX,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxyX,Kx,Yy->XJKY', t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxyX,KyYz,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxyX,KyzY,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/12 * einsum('JxyX,Kyzw,Yxwz->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/12 * einsum('JxyX,Kyzw,Yxzw->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxyX,KzYx,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/12 * einsum('JxyX,Kzwx,Yzwy->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/12 * einsum('JxyX,Kzwx,Yzyw->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxyX,KzxY,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxyX,Kzxw,Yzyw->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxyY,KyXz,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxyY,KyzX,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxyY,KzXx,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxyY,KzxX,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('Jxyz,KwXx,Ywyz->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/12 * einsum('Jxyz,KwxX,Ywyz->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/12 * einsum('Jxyz,KwxX,Ywzy->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('Jxyz,KyXY,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('Jxyz,KyXw,Yxwz->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('Jxyz,KyYX,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('Jxyz,KywX,Yxwz->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('Jxyz,KzXY,xy->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('Jxyz,KzXw,Yxyw->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('Jxyz,KzYX,xy->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/12 * einsum('Jxyz,KzwX,Yxwy->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/12 * einsum('Jxyz,KzwX,Yxyw->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJXa,Yxya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('KJXa,xYya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJXa,xa,Yx->XJKY', t1_xxae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJXa,xyza,Yzyx->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJYa,Xxya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('KJYa,xXya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('KJxa,XYya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJxa,Xa,Yx->XJKY', t1_xxae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('KJxa,Xyxa,Yy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/12 * einsum('KJxa,Xyza,Yzxy->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/12 * einsum('KJxa,Xyza,Yzyx->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJxa,YXya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJxa,yXxa,Yy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJxa,yXza,Yzxy->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncvs, nextern],
                                                                           [ncas, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_a_cca -= 1/2 * einsum('JKab,XYab->XJKY', t1_xxee, t1_aaee, optimize = einsum_type)
            T_a_cca += 1/4 * einsum('JKab,Xxab,Yx->XJKY', t1_xxee, t1_aaee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,:,s_chunk:f_chunk]

            T_a_cca += 1/2 * einsum('JKab,XYba->XJKY', t1_xxee, t1_aaee, optimize = einsum_type)
            T_a_cca -= 1/4 * einsum('JKab,Xxba,Yx->XJKY', t1_xxee, t1_aaee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee t1.aaee", *cput2)
            del(t1_xxee, t1_aaee)

        T[:, s_cca__aaa:f_cca__aaa] += T_a_cca[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(ncas, -1)

        ## Terms removed by neglecting T2 amplitudes
        # T_a_cca  = einsum('JKXY->XJKY', t2_xxaa, optimize = einsum_type).copy()
        # T_a_cca -= 1/2 * einsum('JKXx,Yx->XJKY', t2_xxaa, rdm_ca, optimize = einsum_type)

        T_a_cca  = 1/2 * einsum('JKXa,Ya->XJKY', t1_xxae, t1_ae, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('JKxa,XYxa->XJKY', t1_xxae, t1_aaae, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('Jx,KxYX->XJKY', t1_xa, t1_xaaa, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JxXY,Kx->XJKY', t1_xaaa, t1_xa, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('KJYa,Xa->XJKY', t1_xxae, t1_ae, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('KJxa,YXxa->XJKY', t1_xxae, t1_aaae, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JKXa,Yxya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JKXa,xYya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JKXa,xa,Yx->XJKY', t1_xxae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JKXa,xyza,Yzyx->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JKxa,XYya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JKxa,Xyxa,Yy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/12 * einsum('JKxa,Xyza,Yzxy->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/6 * einsum('JKxa,Xyza,Yzyx->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('Jx,KxyX,Yy->XJKY', t1_xa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JxXY,Kyxz,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxXY,Kyzx,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxXy,Kx,Yy->XJKY', t1_xaaa, t1_xa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('JxXy,KyYz,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxXy,KyzY,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxXy,Kyzw,Yxzw->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('JxXy,KzYx,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxXy,Kzwx,Yzwy->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxXy,KzxY,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxXy,Kzxw,Yzyw->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxyX,KyYz,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/12 * einsum('JxyX,Kyzw,Yxwz->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/6 * einsum('JxyX,Kyzw,Yxzw->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxyX,KzYx,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/6 * einsum('JxyX,Kzwx,Yzwy->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/12 * einsum('JxyX,Kzwx,Yzyw->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('JxyY,KyzX,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('JxyY,KzxX,yz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/12 * einsum('Jxyz,KwxX,Ywyz->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/6 * einsum('Jxyz,KwxX,Ywzy->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/2 * einsum('Jxyz,KyYX,xz->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('Jxyz,KywX,Yxwz->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/4 * einsum('Jxyz,KzYX,xy->XJKY', t1_xaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/6 * einsum('Jxyz,KzwX,Yxwy->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/12 * einsum('Jxyz,KzwX,Yxyw->XJKY', t1_xaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJYa,Xxya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/2 * einsum('KJYa,xXya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJxa,Xa,Yx->XJKY', t1_xxae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cca -= 1/6 * einsum('KJxa,Xyza,Yzxy->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cca -= 1/12 * einsum('KJxa,Xyza,Yzyx->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJxa,YXya,xy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJxa,yXxa,Yy->XJKY', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cca += 1/4 * einsum('KJxa,yXza,Yzxy->XJKY', t1_xxae, t1_aaae, rdm_ccaa, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_a_cca -= 1/2 * einsum('JKab,XYab->XJKY', t1_xxee, t1_aaee, optimize = einsum_type)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,:,s_chunk:f_chunk]

            T_a_cca += 1/4 * einsum('JKab,Xxab,Yx->XJKY', t1_xxee, t1_aaee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee t1.aaee", *cput2)
            del(t1_xxee, t1_aaee)

        T[:, s_cca__abb:f_cca__abb] += T_a_cca.reshape(ncas, -1)

        mr_adc.log.timer_debug("computing T q2-h1 A-CCA", *cput1)

    def compute_T__q2_h1__A_CVE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        t1_xaea = mr_adc.t1.xaea
        t1_vaea = mr_adc.t1.vaea

        t1_xaae = mr_adc.t1.xaae
        t1_vaae = mr_adc.t1.vaae

        t1_xa = mr_adc.t1.xa
        t1_va = mr_adc.t1.va

        t1_xaaa = mr_adc.t1.xaaa
        t1_vaaa = mr_adc.t1.vaaa

        t1_xvaa = mr_adc.t1.xvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        ## Terms removed by neglecting T2 amplitudes
        # T_a_cve  = einsum('JKXB->XJKB', t2_xvae, optimize = einsum_type).copy()
        # T_a_cve -= einsum('KJXB->XJKB', t2_vxae, optimize = einsum_type).copy()

        T_a_cve =- 1/2 * einsum('JxBX,Kx->XJKB', t1_xaea, t1_va, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('JxXB,Kx->XJKB', t1_xaae, t1_va, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('KxBX,Jx->XJKB', t1_vaea, t1_xa, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('KxXB,Jx->XJKB', t1_vaae, t1_xa, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('xB,JKXx->XJKB', t1_ae, t1_xvaa, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('xB,JKxX->XJKB', t1_ae, t1_xvaa, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('xyXB,JKxy->XJKB', t1_aaae, t1_xvaa, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('xyXB,JKyx->XJKB', t1_aaae, t1_xvaa, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('JxBX,Kyxz,yz->XJKB', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('JxBX,Kyzx,yz->XJKB', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('JxBy,KyXz,xz->XJKB', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('JxBy,KyzX,xz->XJKB', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('JxBy,KzXx,yz->XJKB', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('JxBy,KzxX,yz->XJKB', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('JxXB,Kyxz,yz->XJKB', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('JxXB,Kyzx,yz->XJKB', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('JxyB,KyXz,xz->XJKB', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('JxyB,KyzX,xz->XJKB', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('JxyB,KzXx,yz->XJKB', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('JxyB,KzxX,yz->XJKB', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('KxBX,Jyxz,yz->XJKB', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('KxBX,Jyzx,yz->XJKB', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('KxBy,JyXz,xz->XJKB', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('KxBy,JyzX,xz->XJKB', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('KxBy,JzXx,yz->XJKB', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('KxBy,JzxX,yz->XJKB', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('KxXB,Jyxz,yz->XJKB', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('KxXB,Jyzx,yz->XJKB', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('KxyB,JyXz,xz->XJKB', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('KxyB,JyzX,xz->XJKB', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('KxyB,JzXx,yz->XJKB', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('KxyB,JzxX,yz->XJKB', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('xyXB,JKxz,yz->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('xyXB,JKyz,xz->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('xyXB,JKzx,yz->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('xyXB,JKzy,xz->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('xyzB,JKXx,zy->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('xyzB,JKXy,zx->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('xyzB,JKxX,zy->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('xyzB,JKyX,zx->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            T_a_cve += 1/2 * einsum('JKBa,Xa->XJKB', t1_xvee, t1_ae, optimize = einsum_type)
            T_a_cve -= 1/4 * einsum('JKBa,Xxya,xy->XJKB', t1_xvee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_a_cve += 1/2 * einsum('JKBa,xXya,xy->XJKB', t1_xvee, t1_aaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_ae, t1_aaae, t1_xvee)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            T_a_cve -= 1/2 * einsum('KJBa,Xa->XJKB', t1_vxee, t1_ae, optimize = einsum_type)
            T_a_cve += 1/4 * einsum('KJBa,Xxya,xy->XJKB', t1_vxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_a_cve -= 1/2 * einsum('KJBa,xXya,xy->XJKB', t1_vxee, t1_aaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_ae, t1_aaae, t1_vxee)

        T[:, s_cve__aaa:f_cve__aaa] += T_a_cve.reshape(ncas, -1)


        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        ## Terms removed by neglecting T2 amplitudes
        # T_a_cve  = einsum('JKXB->XJKB', t2_xvae, optimize = einsum_type).copy()

        T_a_cve  = 1/2 * einsum('JxXB,Kx->XJKB', t1_xaae, t1_va, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('KxBX,Jx->XJKB', t1_vaea, t1_xa, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('xB,JKXx->XJKB', t1_ae, t1_xvaa, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('xyXB,JKxy->XJKB', t1_aaae, t1_xvaa, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('JxXB,Kyxz,yz->XJKB', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('JxXB,Kyzx,yz->XJKB', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('JxyB,KyzX,xz->XJKB', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('JxyB,KzxX,yz->XJKB', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('KxBX,Jyxz,yz->XJKB', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('KxBX,Jyzx,yz->XJKB', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('KxBy,JyXz,xz->XJKB', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('KxBy,JyzX,xz->XJKB', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('KxBy,JzXx,yz->XJKB', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('KxBy,JzxX,yz->XJKB', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('KxyB,JyXz,xz->XJKB', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('KxyB,JzXx,yz->XJKB', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('xyXB,JKxz,yz->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('xyXB,JKzy,xz->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('xyzB,JKXx,zy->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('xyzB,JKXy,zx->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            T_a_cve -= 1/2 * einsum('KJBa,Xa->XJKB', t1_vxee, t1_ae, optimize = einsum_type)
            T_a_cve += 1/4 * einsum('KJBa,Xxya,xy->XJKB', t1_vxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_a_cve -= 1/2 * einsum('KJBa,xXya,xy->XJKB', t1_vxee, t1_aaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_ae, t1_aaae, t1_vxee)

        T[:, s_cve__abb:f_cve__abb] += T_a_cve.reshape(ncas, -1)


        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        ## Terms removed by neglecting T2 amplitudes
        # T_a_cve =- einsum('KJXB->XJKB', t2_vxae, optimize = einsum_type).copy()

        T_a_cve =- 1/2 * einsum('JxBX,Kx->XJKB', t1_xaea, t1_va, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('KxXB,Jx->XJKB', t1_vaae, t1_xa, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('xB,JKxX->XJKB', t1_ae, t1_xvaa, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('xyXB,JKyx->XJKB', t1_aaae, t1_xvaa, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('JxBX,Kyxz,yz->XJKB', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('JxBX,Kyzx,yz->XJKB', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('JxBy,KyXz,xz->XJKB', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('JxBy,KyzX,xz->XJKB', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('JxBy,KzXx,yz->XJKB', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('JxBy,KzxX,yz->XJKB', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('JxyB,KyXz,xz->XJKB', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('JxyB,KzXx,yz->XJKB', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/2 * einsum('KxXB,Jyxz,yz->XJKB', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('KxXB,Jyzx,yz->XJKB', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('KxyB,JyzX,xz->XJKB', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('KxyB,JzxX,yz->XJKB', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('xyXB,JKyz,xz->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/4 * einsum('xyXB,JKzx,yz->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve -= 1/4 * einsum('xyzB,JKxX,zy->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_a_cve += 1/2 * einsum('xyzB,JKyX,zx->XJKB', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            T_a_cve += 1/2 * einsum('JKBa,Xa->XJKB', t1_xvee, t1_ae, optimize = einsum_type)
            T_a_cve -= 1/4 * einsum('JKBa,Xxya,xy->XJKB', t1_xvee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_a_cve += 1/2 * einsum('JKBa,xXya,xy->XJKB', t1_xvee, t1_aaae, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_ae, t1_aaae, t1_xvee)

        T[:, s_cve__bab:f_cve__bab] += T_a_cve.reshape(ncas, -1)

        mr_adc.log.timer_debug("computing T q2-h1 A-CVE", *cput1)

    def compute_T__q2_h1__A_CVA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        t1_xa = mr_adc.t1.xa
        t1_va = mr_adc.t1.va

        t1_xaaa = mr_adc.t1.xaaa
        t1_vaaa = mr_adc.t1.vaaa

        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        ## Terms removed by neglecting T2 amplitudes
        # T_a_cva  = einsum('JKXY->XJKY', t2_xvaa, optimize = einsum_type).copy()
        # T_a_cva -= einsum('JKYX->XJKY', t2_xvaa, optimize = einsum_type).copy()
        # T_a_cva -= 1/2 * einsum('JKXx,Yx->XJKY', t2_xvaa, rdm_ca, optimize = einsum_type)
        # T_a_cva += 1/2 * einsum('JKxX,Yx->XJKY', t2_xvaa, rdm_ca, optimize = einsum_type)

        T_a_cva  = 1/2 * einsum('JKXa,Ya->XJKY', t1_xvae, t1_ae, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JKYa,Xa->XJKY', t1_xvae, t1_ae, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('JKxa,XYxa->XJKY', t1_xvae, t1_aaae, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JKxa,YXxa->XJKY', t1_xvae, t1_aaae, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('Jx,KxXY->XJKY', t1_xa, t1_vaaa, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('Jx,KxYX->XJKY', t1_xa, t1_vaaa, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JxXY,Kx->XJKY', t1_xaaa, t1_va, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('JxYX,Kx->XJKY', t1_xaaa, t1_va, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('KJXa,Ya->XJKY', t1_vxae, t1_ae, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('KJYa,Xa->XJKY', t1_vxae, t1_ae, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('KJxa,XYxa->XJKY', t1_vxae, t1_aaae, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('KJxa,YXxa->XJKY', t1_vxae, t1_aaae, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKXa,Yxya,xy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JKXa,xYya,xy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKXa,xa,Yx->XJKY', t1_xvae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKXa,xyza,Yzyx->XJKY', t1_xvae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKYa,Xxya,xy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JKYa,xXya,xy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JKxa,XYya,xy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKxa,Xa,Yx->XJKY', t1_xvae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JKxa,Xyxa,Yy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/12 * einsum('JKxa,Xyza,Yzxy->XJKY', t1_xvae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/12 * einsum('JKxa,Xyza,Yzyx->XJKY', t1_xvae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKxa,YXya,xy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKxa,yXxa,Yy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKxa,yXza,Yzxy->XJKY', t1_xvae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('Jx,KxXy,Yy->XJKY', t1_xa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('Jx,KxyX,Yy->XJKY', t1_xa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JxXY,Kyxz,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxXY,Kyzx,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxXy,Kx,Yy->XJKY', t1_xaaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('JxXy,KyYz,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxXy,KyzY,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxXy,Kyzw,Yxzw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JxXy,KzYx,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxXy,Kzwx,Yzwy->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxXy,KzxY,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxXy,Kzxw,Yzyw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('JxYX,Kyxz,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxYX,Kyzx,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('JxYy,KyXz,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxYy,KyzX,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JxYy,KzXx,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxYy,KzxX,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxyX,Kx,Yy->XJKY', t1_xaaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxyX,KyYz,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxyX,KyzY,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/12 * einsum('JxyX,Kyzw,Yxwz->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/12 * einsum('JxyX,Kyzw,Yxzw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxyX,KzYx,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/12 * einsum('JxyX,Kzwx,Yzwy->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/12 * einsum('JxyX,Kzwx,Yzyw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxyX,KzxY,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxyX,Kzxw,Yzyw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxyY,KyXz,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxyY,KyzX,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxyY,KzXx,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxyY,KzxX,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('Jxyz,KwXx,Ywyz->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/12 * einsum('Jxyz,KwxX,Ywyz->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/12 * einsum('Jxyz,KwxX,Ywzy->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('Jxyz,KyXY,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('Jxyz,KyXw,Yxwz->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('Jxyz,KyYX,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('Jxyz,KywX,Yxwz->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('Jxyz,KzXY,xy->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('Jxyz,KzXw,Yxyw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('Jxyz,KzYX,xy->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/12 * einsum('Jxyz,KzwX,Yxwy->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/12 * einsum('Jxyz,KzwX,Yxyw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJXa,Yxya,xy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('KJXa,xYya,xy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJXa,xa,Yx->XJKY', t1_vxae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJXa,xyza,Yzyx->XJKY', t1_vxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJYa,Xxya,xy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('KJYa,xXya,xy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('KJxa,XYya,xy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJxa,Xa,Yx->XJKY', t1_vxae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('KJxa,Xyxa,Yy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/12 * einsum('KJxa,Xyza,Yzxy->XJKY', t1_vxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/12 * einsum('KJxa,Xyza,Yzyx->XJKY', t1_vxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJxa,YXya,xy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJxa,yXxa,Yy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJxa,yXza,Yzxy->XJKY', t1_vxae, t1_aaae, rdm_ccaa, optimize = einsum_type)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, nval, nextern],
                                                                           [ncas, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_a_cva -= 1/2 * einsum('JKab,XYab->XJKY', t1_xvee, t1_aaee, optimize = einsum_type)
            T_a_cva += 1/4 * einsum('JKab,Xxab,Yx->XJKY', t1_xvee, t1_aaee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,:,s_chunk:f_chunk]

            T_a_cva += 1/2 * einsum('JKab,XYba->XJKY', t1_xvee, t1_aaee, optimize = einsum_type)
            T_a_cva -= 1/4 * einsum('JKab,Xxba,Yx->XJKY', t1_xvee, t1_aaee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee t1.aaee", *cput2)
            del(t1_xvee, t1_aaee)

        T[:, s_cva__aaa:f_cva__aaa] += T_a_cva.reshape(ncas, -1)


        ## Terms removed by neglecting T2 amplitudes
        # T_a_cva  = einsum('JKXY->XJKY', t2_xvaa, optimize = einsum_type).copy()
        # T_a_cva -= 1/2 * einsum('JKXx,Yx->XJKY', t2_xvaa, rdm_ca, optimize = einsum_type)

        T_a_cva += 1/2 * einsum('JKXa,Ya->XJKY', t1_xvae, t1_ae, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('JKxa,XYxa->XJKY', t1_xvae, t1_aaae, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('Jx,KxYX->XJKY', t1_xa, t1_vaaa, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JxXY,Kx->XJKY', t1_xaaa, t1_va, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('KJYa,Xa->XJKY', t1_vxae, t1_ae, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('KJxa,YXxa->XJKY', t1_vxae, t1_aaae, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKXa,Yxya,xy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JKXa,xYya,xy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKXa,xa,Yx->XJKY', t1_xvae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKXa,xyza,Yzyx->XJKY', t1_xvae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JKxa,XYya,xy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JKxa,Xyxa,Yy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/12 * einsum('JKxa,Xyza,Yzxy->XJKY', t1_xvae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/6 * einsum('JKxa,Xyza,Yzyx->XJKY', t1_xvae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('Jx,KxyX,Yy->XJKY', t1_xa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JxXY,Kyxz,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxXY,Kyzx,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxXy,Kx,Yy->XJKY', t1_xaaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('JxXy,KyYz,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxXy,KyzY,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxXy,Kyzw,Yxzw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JxXy,KzYx,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxXy,Kzwx,Yzwy->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxXy,KzxY,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxXy,Kzxw,Yzyw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxyX,KyYz,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/12 * einsum('JxyX,Kyzw,Yxwz->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/6 * einsum('JxyX,Kyzw,Yxzw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxyX,KzYx,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/6 * einsum('JxyX,Kzwx,Yzwy->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/12 * einsum('JxyX,Kzwx,Yzyw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxyY,KyzX,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxyY,KzxX,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/12 * einsum('Jxyz,KwxX,Ywyz->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/6 * einsum('Jxyz,KwxX,Ywzy->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('Jxyz,KyYX,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('Jxyz,KywX,Yxwz->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('Jxyz,KzYX,xy->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/6 * einsum('Jxyz,KzwX,Yxwy->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/12 * einsum('Jxyz,KzwX,Yxyw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJYa,Xxya,xy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('KJYa,xXya,xy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJxa,Xa,Yx->XJKY', t1_vxae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/6 * einsum('KJxa,Xyza,Yzxy->XJKY', t1_vxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/12 * einsum('KJxa,Xyza,Yzyx->XJKY', t1_vxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJxa,YXya,xy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJxa,yXxa,Yy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJxa,yXza,Yzxy->XJKY', t1_vxae, t1_aaae, rdm_ccaa, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_a_cva -= 1/2 * einsum('JKab,XYab->XJKY', t1_xvee, t1_aaee, optimize = einsum_type)
            T_a_cva += 1/4 * einsum('JKab,Xxab,Yx->XJKY', t1_xvee, t1_aaee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee t1.aaee", *cput2)

        T[:, s_cva__abb:f_cva__abb] += T_a_cva.reshape(ncas, -1)


        ## Terms removed by neglecting T2 amplitudes
        # T_a_cva =- einsum('JKYX->XJKY', t2_xvaa, optimize = einsum_type).copy()
        # T_a_cva += 1/2 * einsum('JKxX,Yx->XJKY', t2_xvaa, rdm_ca, optimize = einsum_type)

        T_a_cva  = 1/2 * einsum('JKYa,Xa->XJKY', t1_xvae, t1_ae, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JKxa,YXxa->XJKY', t1_xvae, t1_aaae, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('Jx,KxXY->XJKY', t1_xa, t1_vaaa, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('JxYX,Kx->XJKY', t1_xaaa, t1_va, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('KJXa,Ya->XJKY', t1_vxae, t1_ae, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('KJxa,XYxa->XJKY', t1_vxae, t1_aaae, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKYa,Xxya,xy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JKYa,xXya,xy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKxa,Xa,Yx->XJKY', t1_xvae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/6 * einsum('JKxa,Xyza,Yzxy->XJKY', t1_xvae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/12 * einsum('JKxa,Xyza,Yzyx->XJKY', t1_xvae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKxa,YXya,xy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKxa,yXxa,Yy->XJKY', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JKxa,yXza,Yzxy->XJKY', t1_xvae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('Jx,KxXy,Yy->XJKY', t1_xa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('JxYX,Kyxz,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxYX,Kyzx,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('JxYy,KyXz,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxYy,KyzX,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/2 * einsum('JxYy,KzXx,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxYy,KzxX,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxyX,Kx,Yy->XJKY', t1_xaaa, t1_va, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxyX,KyzY,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/6 * einsum('JxyX,Kyzw,Yxwz->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/12 * einsum('JxyX,Kyzw,Yxzw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/12 * einsum('JxyX,Kzwx,Yzwy->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/6 * einsum('JxyX,Kzwx,Yzyw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxyX,KzxY,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxyX,Kzxw,Yzyw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('JxyY,KyXz,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('JxyY,KzXx,yz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('Jxyz,KwXx,Ywyz->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/6 * einsum('Jxyz,KwxX,Ywyz->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/12 * einsum('Jxyz,KwxX,Ywzy->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('Jxyz,KyXY,xz->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('Jxyz,KyXw,Yxwz->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('Jxyz,KzXY,xy->XJKY', t1_xaaa, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('Jxyz,KzXw,Yxyw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/12 * einsum('Jxyz,KzwX,Yxwy->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/6 * einsum('Jxyz,KzwX,Yxyw->XJKY', t1_xaaa, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJXa,Yxya,xy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/2 * einsum('KJXa,xYya,xy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJXa,xa,Yx->XJKY', t1_vxae, t1_ae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/4 * einsum('KJXa,xyza,Yzyx->XJKY', t1_vxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('KJxa,XYya,xy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva -= 1/4 * einsum('KJxa,Xyxa,Yy->XJKY', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
        T_a_cva += 1/12 * einsum('KJxa,Xyza,Yzxy->XJKY', t1_vxae, t1_aaae, rdm_ccaa, optimize = einsum_type)
        T_a_cva += 1/6 * einsum('KJxa,Xyza,Yzyx->XJKY', t1_vxae, t1_aaae, rdm_ccaa, optimize = einsum_type)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]
            t1_aaee = mr_adc.t1.aaee[:,:,:,s_chunk:f_chunk]

            T_a_cva += 1/2 * einsum('JKab,XYba->XJKY', t1_xvee, t1_aaee, optimize = einsum_type)
            T_a_cva -= 1/4 * einsum('JKab,Xxba,Yx->XJKY', t1_xvee, t1_aaee, rdm_ca, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee t1.aaee", *cput2)

        T[:, s_cva__bab:f_cva__bab] += T_a_cva.reshape(ncas, -1)

        mr_adc.log.timer_debug("computing T q2-h1 A-CVA", *cput1)

    def compute_T__q1_h0__E_C(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Amplitudes
        t1_xe = mr_adc.t1.xe

        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_c = mr_adc.h0.s_c
        f_c = mr_adc.h0.f_c

        T_e_c  = einsum('JA->AJ', t1_xe, optimize = einsum_type).copy()
        T_e_c += einsum('JxAy,yx->AJ', t1_xaea, rdm_ca, optimize = einsum_type)
        T_e_c -= 1/2 * einsum('JxyA,yx->AJ', t1_xaae, rdm_ca, optimize = einsum_type)
        T[:, s_c:f_c] = T_e_c.copy()

        mr_adc.log.timer_debug("computing T q1-h0 E-C", *cput1)

    def compute_T__q1_h1__E_CAA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xe = mr_adc.t1.xe

        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        T_e_caa  = 1/2 * einsum('JA,YZ->AJYZ', t1_xe, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('JxAZ,Yx->AJYZ', t1_xaea, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('JxAy,YyZx->AJYZ', t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/2 * einsum('JxZA,Yx->AJYZ', t1_xaae, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('JxyA,YyZx->AJYZ', t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('JxyA,YyxZ->AJYZ', t1_xaae, rdm_ccaa, optimize = einsum_type)
        if nextern > 0:
            T[:, s_caa__aaa:f_caa__aaa] += T_e_caa.reshape(nextern, -1)

        T_e_caa  = 1/2 * einsum('JA,YZ->AJYZ', t1_xe, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('JxAZ,Yx->AJYZ', t1_xaea, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('JxAy,YyZx->AJYZ', t1_xaea, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/3 * einsum('JxyA,YyZx->AJYZ', t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('JxyA,YyxZ->AJYZ', t1_xaae, rdm_ccaa, optimize = einsum_type)
        if nextern > 0:
            T[:, s_caa__abb:f_caa__abb] += T_e_caa.reshape(nextern, -1)

        T_e_caa =- 1/2 * einsum('JxZA,Yx->AJYZ', t1_xaae, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('JxyA,YyZx->AJYZ', t1_xaae, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/3 * einsum('JxyA,YyxZ->AJYZ', t1_xaae, rdm_ccaa, optimize = einsum_type)
        if nextern > 0:
            T[:, s_caa__bab:f_caa__bab] += T_e_caa.reshape(nextern, -1)

        mr_adc.log.timer_debug("computing T q1-h1 E-CAA", *cput1)

    def compute_T__q1_h1__E_CCE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nocc = mr_adc.nocc
        nextern = mr_adc.nextern

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            ## Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            T_e_cce  = einsum('JKAB->AJKB', t1_xxee, optimize = einsum_type).copy()
            T_e_cce -= einsum('KJAB->AJKB', t1_xxee, optimize = einsum_type).copy()

            dim_chunk = T_e_cce.shape[0]
            T[s_chunk:f_chunk, s_cce__aaa:f_cce__aaa] += T_e_cce[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(dim_chunk, -1)

            T_e_cce  = einsum('JKAB->AJKB', t1_xxee, optimize = einsum_type).copy()
            T[s_chunk:f_chunk, s_cce__abb:f_cce__abb] += T_e_cce.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)

        mr_adc.log.timer_debug("computing T q1-h1 E-CCE", *cput1)

    def compute_T__q1_h1__E_CAE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_e_cae  = 1/2 * einsum('JxAB,Yx->AJYB', t1_xaee, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_e_cae -= 1/2 * einsum('JxBA,Yx->AJYB', t1_xaee, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__aaa:f_cae__aaa] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)


        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_e_cae  = 1/2 * einsum('JxAB,Yx->AJYB', t1_xaee, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__abb:f_cae__abb] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)


        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_e_cae =- 1/2 * einsum('JxBA,Yx->AJYB', t1_xaee, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__bab:f_cae__bab] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)

        mr_adc.log.timer_debug("computing T q1-h1 E-CAE", *cput1)

    def compute_T__q1_h1__E_CCA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xxae = mr_adc.t1.xxae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        T_e_cca =- einsum('JKYA->AJKY', t1_xxae, optimize = einsum_type).copy()
        T_e_cca += einsum('KJYA->AJKY', t1_xxae, optimize = einsum_type).copy()
        T_e_cca += 1/2 * einsum('JKxA,Yx->AJKY', t1_xxae, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/2 * einsum('KJxA,Yx->AJKY', t1_xxae, rdm_ca, optimize = einsum_type)
        if nextern > 0:
            T[:, s_cca__aaa:f_cca__aaa] += T_e_cca[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(nextern, -1)

        T_e_cca  = einsum('KJYA->AJKY', t1_xxae, optimize = einsum_type).copy()
        T_e_cca -= 1/2 * einsum('KJxA,Yx->AJKY', t1_xxae, rdm_ca, optimize = einsum_type)
        if nextern > 0:
            T[:, s_cca__abb:f_cca__abb] += T_e_cca.reshape(nextern, -1)

        mr_adc.log.timer_debug("computing T q1-h1 E-CCA", *cput1)

    def compute_T__q1_h1__E_CVE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        nocc = mr_adc.nocc
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xvee = mr_adc.t1.xvee
        t1_vxee = mr_adc.t1.vxee

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_e_cve  = einsum('JKAB->AJKB', t1_xvee, optimize = einsum_type).copy()
            del(t1_xvee)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,s_chunk:f_chunk]

            T_e_cve -= einsum('KJAB->AJKB', t1_vxee, optimize = einsum_type).copy()
            del(t1_vxee)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__aaa:f_cve__aaa] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)


        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_e_cve  = einsum('JKAB->AJKB', t1_xvee, optimize = einsum_type).copy()
            del(t1_xvee)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__abb:f_cve__abb] += T_e_cve.reshape(dim_chunk, -1)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,s_chunk:f_chunk]

            T_e_cve =- einsum('KJAB->AJKB', t1_vxee, optimize = einsum_type).copy()
            del(t1_vxee)

            T[s_chunk:f_chunk, s_cve__bab:f_cve__bab] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)

        mr_adc.log.timer_debug("computing T q1-h1 E-CVE", *cput1)

    def compute_T__q1_h1__E_CVA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        T_e_cva =- einsum('JKYA->AJKY', t1_xvae, optimize = einsum_type).copy()
        T_e_cva += einsum('KJYA->AJKY', t1_vxae, optimize = einsum_type).copy()
        T_e_cva += 1/2 * einsum('JKxA,Yx->AJKY', t1_xvae, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('KJxA,Yx->AJKY', t1_vxae, rdm_ca, optimize = einsum_type)
        if nextern > 0:
            T[:, s_cva__aaa:f_cva__aaa] += T_e_cva.reshape(nextern, -1)

        T_e_cva  = einsum('KJYA->AJKY', t1_vxae, optimize = einsum_type).copy()
        T_e_cva -= 1/2 * einsum('KJxA,Yx->AJKY', t1_vxae, rdm_ca, optimize = einsum_type)
        if nextern > 0:
            T[:, s_cva__abb:f_cva__abb] += T_e_cva.reshape(nextern, -1)

        T_e_cva =- einsum('JKYA->AJKY', t1_xvae, optimize = einsum_type).copy()
        T_e_cva += 1/2 * einsum('JKxA,Yx->AJKY', t1_xvae, rdm_ca, optimize = einsum_type)
        if nextern > 0:
            T[:, s_cva__bab:f_cva__bab] += T_e_cva.reshape(nextern, -1)

        mr_adc.log.timer_debug("computing T q1-h1 E-CVA", *cput1)

    def compute_T__q2_h0__E_C(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        t1_xa = mr_adc.t1.xa
        t1_va = mr_adc.t1.va

        t1_xaaa = mr_adc.t1.xaaa
        t1_vaaa = mr_adc.t1.vaaa

        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        t1_xe = mr_adc.t1.xe

        t1_xaae = mr_adc.t1.xaae
        t1_xaea = mr_adc.t1.xaea

        t1_ve = mr_adc.t1.ve

        t1_vaae = mr_adc.t1.vaae
        t1_vaea = mr_adc.t1.vaea

        t2_xe = mr_adc.t2.xe

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_c = mr_adc.h0.s_c
        f_c = mr_adc.h0.f_c

        ## Terms removed by neglecting T2 amplitudes
        # T_e_c  = einsum('JxAy,yx->AJ', t2_xaea, rdm_ca, optimize = einsum_type)
        # T_e_c -= 1/2 * einsum('JxyA,yx->AJ', t2_xaae, rdm_ca, optimize = einsum_type)

        T_e_c  = einsum('JA->AJ', t2_xe, optimize = einsum_type).copy()
        T_e_c -= 1/2 * einsum('JixA,ix->AJ', t1_xxae, t1_xa, optimize = einsum_type)
        T_e_c -= 1/2 * einsum('JixA,ix->AJ', t1_xvae, t1_va, optimize = einsum_type)
        T_e_c += einsum('iJxA,ix->AJ', t1_xxae, t1_xa, optimize = einsum_type)
        T_e_c += einsum('iJxA,ix->AJ', t1_vxae, t1_va, optimize = einsum_type)
        T_e_c += 1/2 * einsum('xA,Jx->AJ', t1_ae, t1_xa, optimize = einsum_type)
        T_e_c += 1/4 * einsum('JixA,iy,xy->AJ', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_c -= 1/2 * einsum('JixA,iyxz,zy->AJ', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_c += 1/4 * einsum('JixA,iyzw,xyzw->AJ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_c += 1/4 * einsum('JixA,iyzx,zy->AJ', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_c += 1/4 * einsum('JixA,iy,xy->AJ', t1_xvae, t1_va, rdm_ca, optimize = einsum_type)
        T_e_c -= 1/2 * einsum('JixA,iyxz,zy->AJ', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_c += 1/4 * einsum('JixA,iyzw,xyzw->AJ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_c += 1/4 * einsum('JixA,iyzx,zy->AJ', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_c -= 1/2 * einsum('iJxA,iy,xy->AJ', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_c += einsum('iJxA,iyxz,zy->AJ', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_c -= 1/2 * einsum('iJxA,iyzw,xyzw->AJ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_c -= 1/2 * einsum('iJxA,iyzx,zy->AJ', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_c -= 1/2 * einsum('iJxA,iy,xy->AJ', t1_vxae, t1_va, rdm_ca, optimize = einsum_type)
        T_e_c += einsum('iJxA,iyxz,zy->AJ', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_c -= 1/2 * einsum('iJxA,iyzw,xyzw->AJ', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_c -= 1/2 * einsum('iJxA,iyzx,zy->AJ', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_c += 1/2 * einsum('xA,Jyxz,yz->AJ', t1_ae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_c -= 1/4 * einsum('xA,Jyzx,yz->AJ', t1_ae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_c -= 1/4 * einsum('xyzA,Jwux,zuwy->AJ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_c -= 1/4 * einsum('xyzA,Jwuy,zuxw->AJ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_c -= 1/4 * einsum('xyzA,Jwxu,zuyw->AJ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_c -= 1/4 * einsum('xyzA,Jwxy,zw->AJ', t1_aaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_c += 1/2 * einsum('xyzA,Jwyu,zuxw->AJ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_c += 1/2 * einsum('xyzA,Jwyx,zw->AJ', t1_aaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_c -= 1/4 * einsum('xyzA,Jx,zy->AJ', t1_aaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_c += 1/2 * einsum('xyzA,Jy,zx->AJ', t1_aaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_c += 1/4 * einsum('xyzA,Jzwu,yxwu->AJ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T[:, s_c:f_c] += T_e_c.copy()

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            T_e_c  = einsum('JiAa,ia->AJ', t1_xxee, t1_xe, optimize = einsum_type)
            T_e_c -= 1/2 * einsum('iJAa,ia->AJ', t1_xxee, t1_xe, optimize = einsum_type)
            T_e_c += einsum('JiAa,ixay,yx->AJ', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_c -= 1/2 * einsum('JiAa,ixya,yx->AJ', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_c -= 1/2 * einsum('iJAa,ixay,yx->AJ', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_c += 1/4 * einsum('iJAa,ixya,yx->AJ', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_c.shape[0]
            T[s_chunk:f_chunk, s_c:f_c] += T_e_c.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_e_c  = einsum('JiAa,ia->AJ', t1_xvee, t1_ve, optimize = einsum_type)
            T_e_c += einsum('JiAa,ixay,yx->AJ', t1_xvee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_c -= 1/2 * einsum('JiAa,ixya,yx->AJ', t1_xvee, t1_vaae, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_c.shape[0]
            T[s_chunk:f_chunk, s_c:f_c] += T_e_c.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,s_chunk:f_chunk]

            T_e_c =- 1/2 * einsum('iJAa,ia->AJ', t1_vxee, t1_ve, optimize = einsum_type)
            T_e_c -= 1/2 * einsum('iJAa,ixay,yx->AJ', t1_vxee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_c += 1/4 * einsum('iJAa,ixya,yx->AJ', t1_vxee, t1_vaae, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_c.shape[0]
            T[s_chunk:f_chunk, s_c:f_c] += T_e_c.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_e_c  = 1/2 * einsum('JxAa,ya,xy->AJ', t1_xaee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_c += 1/2 * einsum('JxAa,yzwa,xwzy->AJ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_e_c -= 1/4 * einsum('JxaA,ya,xy->AJ', t1_xaee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_c -= 1/4 * einsum('JxaA,yzwa,xwzy->AJ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_c.shape[0]
            T[s_chunk:f_chunk, s_c:f_c] += T_e_c.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee)

        mr_adc.log.timer_debug("computing T q2-h0 E-C", *cput1)

    def compute_T__q2_h1__E_CAA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        t1_xa = mr_adc.t1.xa
        t1_va = mr_adc.t1.va

        t1_xaaa = mr_adc.t1.xaaa
        t1_vaaa = mr_adc.t1.vaaa

        t1_xxae = mr_adc.t1.xxae
        t1_xvae = mr_adc.t1.xvae
        t1_vxae = mr_adc.t1.vxae

        t2_xe = mr_adc.t2.xe

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa
        rdm_cccaaa = mr_adc.rdm.cccaaa

        ## Excitation Manifolds
        s_caa__aaa = mr_adc.h1.s_caa__aaa
        f_caa__aaa = mr_adc.h1.f_caa__aaa
        s_caa__abb = mr_adc.h1.s_caa__abb
        f_caa__abb = mr_adc.h1.f_caa__abb
        s_caa__bab = mr_adc.h1.s_caa__bab
        f_caa__bab = mr_adc.h1.f_caa__bab

        ## Terms removed by neglecting T2 amplitudes
        # T_e_caa  = 1/2 * einsum('JxAZ,Yx->AJYZ', t2_xaea, rdm_ca, optimize = einsum_type)
        # T_e_caa += 1/2 * einsum('JxAy,YyZx->AJYZ', t2_xaea, rdm_ccaa, optimize = einsum_type)
        # T_e_caa -= 1/2 * einsum('JxZA,Yx->AJYZ', t2_xaae, rdm_ca, optimize = einsum_type)
        # T_e_caa -= 1/6 * einsum('JxyA,YyZx->AJYZ', t2_xaae, rdm_ccaa, optimize = einsum_type)
        # T_e_caa += 1/6 * einsum('JxyA,YyxZ->AJYZ', t2_xaae, rdm_ccaa, optimize = einsum_type)

        T_e_caa  = 1/2 * einsum('JA,YZ->AJYZ', t2_xe, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('JiZA,ix,Yx->AJYZ', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('JiZA,ixyz,Yxyz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('JixA,iZxy,Yy->AJYZ', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('JixA,iZyx,Yy->AJYZ', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iZyz,Yxyz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iZyz,Yxzy->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('JixA,ix,YZ->AJYZ', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iy,YxZy->AJYZ', t1_xxae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iy,YxyZ->AJYZ', t1_xxae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('JixA,iyxz,YyZz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzw,YxyZzw->AJYZ', t1_xxae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iyzw,YxyzZw->AJYZ', t1_xxae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzx,YyZz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iyzx,YyzZ->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('JiZA,ix,Yx->AJYZ', t1_xvae, t1_va, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('JiZA,ixyz,Yxyz->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('JixA,iZxy,Yy->AJYZ', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('JixA,iZyx,Yy->AJYZ', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iZyz,Yxyz->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iZyz,Yxzy->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('JixA,ix,YZ->AJYZ', t1_xvae, t1_va, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iy,YxZy->AJYZ', t1_xvae, t1_va, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iy,YxyZ->AJYZ', t1_xvae, t1_va, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('JixA,iyxz,YyZz->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzw,YxyZzw->AJYZ', t1_xvae, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iyzw,YxyzZw->AJYZ', t1_xvae, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzx,YyZz->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iyzx,YyzZ->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJZA,ix,Yx->AJYZ', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJZA,ixyz,Yxyz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('iJxA,iZxy,Yy->AJYZ', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iZyx,Yy->AJYZ', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iZyz,Yxzy->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('iJxA,ix,YZ->AJYZ', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iy,YxZy->AJYZ', t1_xxae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('iJxA,iyxz,YyZz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iyzw,YxyZzw->AJYZ', t1_xxae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iyzx,YyZz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJZA,ix,Yx->AJYZ', t1_vxae, t1_va, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJZA,ixyz,Yxyz->AJYZ', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('iJxA,iZxy,Yy->AJYZ', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iZyx,Yy->AJYZ', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iZyz,Yxzy->AJYZ', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('iJxA,ix,YZ->AJYZ', t1_vxae, t1_va, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iy,YxZy->AJYZ', t1_vxae, t1_va, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('iJxA,iyxz,YyZz->AJYZ', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iyzw,YxyZzw->AJYZ', t1_vxae, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iyzx,YyZz->AJYZ', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xA,Jx,YZ->AJYZ', t1_ae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('xA,JyZx,Yy->AJYZ', t1_ae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xA,JyxZ,Yy->AJYZ', t1_ae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xA,Jyxz,YzZy->AJYZ', t1_ae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xA,Jyzx,YzZy->AJYZ', t1_ae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xA,Jyzx,YzyZ->AJYZ', t1_ae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('xyZA,Jx,Yy->AJYZ', t1_aaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyZA,Jy,Yx->AJYZ', t1_aaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyZA,Jzwx,Ywyz->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyZA,Jzwx,Ywzy->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyZA,Jzwy,Ywxz->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyZA,Jzwy,Ywzx->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('xyZA,Jzxw,Ywyz->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('xyZA,Jzxy,Yz->AJYZ', t1_aaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyZA,Jzyw,Ywxz->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyZA,Jzyx,Yz->AJYZ', t1_aaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('xyzA,JwZx,Yzyw->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('xyzA,JwZy,Yzwx->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwux,YzuZwy->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jwux,YzuywZ->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwuy,YzuZxw->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jwuy,YzuwxZ->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,JwxZ,Yzwy->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,JwxZ,Yzyw->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwxu,YzuZyw->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jwxu,YzuyZw->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwxy,YzZw->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jwxy,YzwZ->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyzA,JwyZ,Yzwx->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyzA,Jwyu,YzuZxw->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyzA,Jwyx,YzZw->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jx,YzZy->AJYZ', t1_aaae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jx,YzyZ->AJYZ', t1_aaae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyzA,Jy,YzZx->AJYZ', t1_aaae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyzA,JzZw,Ywyx->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,JzwZ,Ywxy->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,JzwZ,Ywyx->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jzwu,YwuZyx->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jzwu,YwuyZx->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xe = mr_adc.t1.xe[:,s_chunk:f_chunk]
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_e_caa =+ 1/2 * einsum('JiAa,iZax,Yx->AJYZ', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('JiAa,iZxa,Yx->AJYZ', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/2 * einsum('JiAa,ia,YZ->AJYZ', t1_xxee, t1_xe, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/2 * einsum('JiAa,ixay,YxZy->AJYZ', t1_xxee, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('JiAa,ixya,YxZy->AJYZ', t1_xxee, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('iJAa,iZax,Yx->AJYZ', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/4 * einsum('iJAa,iZxa,Yx->AJYZ', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('iJAa,ia,YZ->AJYZ', t1_xxee, t1_xe, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('iJAa,ixay,YxZy->AJYZ', t1_xxee, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/12 * einsum('iJAa,ixya,YxZy->AJYZ', t1_xxee, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('iJAa,ixya,YxyZ->AJYZ', t1_xxee, t1_xaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xe, t1_xxee, t1_xaae, t1_xaea)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_e_caa += 1/2 * einsum('JiAa,iZax,Yx->AJYZ', t1_xvee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('JiAa,iZxa,Yx->AJYZ', t1_xvee, t1_vaae, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/2 * einsum('JiAa,ia,YZ->AJYZ', t1_xvee, t1_ve, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/2 * einsum('JiAa,ixay,YxZy->AJYZ', t1_xvee, t1_vaea, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('JiAa,ixya,YxZy->AJYZ', t1_xvee, t1_vaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_ve, t1_xvee, t1_vaae, t1_vaea)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_e_caa -= 1/4 * einsum('iJAa,iZax,Yx->AJYZ', t1_vxee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/4 * einsum('iJAa,iZxa,Yx->AJYZ', t1_vxee, t1_vaae, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('iJAa,ia,YZ->AJYZ', t1_vxee, t1_ve, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('iJAa,ixay,YxZy->AJYZ', t1_vxee, t1_vaea, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/12 * einsum('iJAa,ixya,YxZy->AJYZ', t1_vxee, t1_vaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('iJAa,ixya,YxyZ->AJYZ', t1_vxee, t1_vaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_ve, t1_vxee, t1_vaae, t1_vaea)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_e_caa += 1/4 * einsum('JxAa,Za,Yx->AJYZ', t1_xaee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/4 * einsum('JxAa,Zyza,Yyzx->AJYZ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/4 * einsum('JxAa,yZza,Yyxz->AJYZ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/4 * einsum('JxAa,ya,YyZx->AJYZ', t1_xaee, t1_ae, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/4 * einsum('JxAa,yzwa,YzyZxw->AJYZ', t1_xaee, t1_aaae, rdm_cccaaa, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_e_caa -= 1/4 * einsum('JxaA,Za,Yx->AJYZ', t1_xaee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/12 * einsum('JxaA,Zyza,Yyxz->AJYZ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('JxaA,Zyza,Yyzx->AJYZ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('JxaA,yZza,Yyxz->AJYZ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('JxaA,ya,YyZx->AJYZ', t1_xaee, t1_ae, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/12 * einsum('JxaA,ya,YyxZ->AJYZ', t1_xaee, t1_ae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('JxaA,yzwa,YzyZxw->AJYZ', t1_xaee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
            T_e_caa += 1/12 * einsum('JxaA,yzwa,YzyxZw->AJYZ', t1_xaee, t1_aaae, rdm_cccaaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee, t1_ae, t1_aaae)

        if nextern > 0:
            T[:, s_caa__aaa:f_caa__aaa] += T_e_caa.reshape(nextern, -1)


        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        ## Terms removed by neglecting T2 amplitudes
        # T_e_caa += 1/2 * einsum('JxAZ,Yx->AJYZ', t2_xaea, rdm_ca, optimize = einsum_type)
        # T_e_caa += 1/2 * einsum('JxAy,YyZx->AJYZ', t2_xaea, rdm_ccaa, optimize = einsum_type)
        # T_e_caa -= 1/3 * einsum('JxyA,YyZx->AJYZ', t2_xaae, rdm_ccaa, optimize = einsum_type)
        # T_e_caa -= 1/6 * einsum('JxyA,YyxZ->AJYZ', t2_xaae, rdm_ccaa, optimize = einsum_type)

        T_e_caa  = 1/2 * einsum('JA,YZ->AJYZ', t2_xe, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('JixA,iZxy,Yy->AJYZ', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iZyz,Yxyz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('JixA,iZyz,Yxzy->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('JixA,ix,YZ->AJYZ', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('JixA,iy,YxZy->AJYZ', t1_xxae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iy,YxyZ->AJYZ', t1_xxae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('JixA,iyxz,YyZz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('JixA,iyzw,YxyZzw->AJYZ', t1_xxae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzw,YxyzZw->AJYZ', t1_xxae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('JixA,iyzx,YyZz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzx,YyzZ->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('JixA,iZxy,Yy->AJYZ', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iZyz,Yxyz->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('JixA,iZyz,Yxzy->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('JixA,ix,YZ->AJYZ', t1_xvae, t1_va, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('JixA,iy,YxZy->AJYZ', t1_xvae, t1_va, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iy,YxyZ->AJYZ', t1_xvae, t1_va, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('JixA,iyxz,YyZz->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('JixA,iyzw,YxyZzw->AJYZ', t1_xvae, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzw,YxyzZw->AJYZ', t1_xvae, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('JixA,iyzx,YyZz->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzx,YyzZ->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJZA,ix,Yx->AJYZ', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJZA,ixyz,Yxyz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('iJxA,iZxy,Yy->AJYZ', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iZyx,Yy->AJYZ', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iZyz,Yxzy->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('iJxA,ix,YZ->AJYZ', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iy,YxZy->AJYZ', t1_xxae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('iJxA,iyxz,YyZz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iyzw,YxyZzw->AJYZ', t1_xxae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iyzx,YyZz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJZA,ix,Yx->AJYZ', t1_vxae, t1_va, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJZA,ixyz,Yxyz->AJYZ', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('iJxA,iZxy,Yy->AJYZ', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iZyx,Yy->AJYZ', t1_vxae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iZyz,Yxzy->AJYZ', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('iJxA,ix,YZ->AJYZ', t1_vxae, t1_va, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iy,YxZy->AJYZ', t1_vxae, t1_va, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/2 * einsum('iJxA,iyxz,YyZz->AJYZ', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iyzw,YxyZzw->AJYZ', t1_vxae, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('iJxA,iyzx,YyZz->AJYZ', t1_vxae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xA,Jx,YZ->AJYZ', t1_ae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xA,JyxZ,Yy->AJYZ', t1_ae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xA,Jyxz,YzZy->AJYZ', t1_ae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('xA,Jyzx,YzZy->AJYZ', t1_ae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xA,Jyzx,YzyZ->AJYZ', t1_ae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyZA,Jy,Yx->AJYZ', t1_aaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyZA,Jzwx,Ywyz->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('xyZA,Jzwx,Ywzy->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('xyZA,Jzwy,Ywxz->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyZA,Jzwy,Ywzx->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyZA,Jzyw,Ywxz->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyZA,Jzyx,Yz->AJYZ', t1_aaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwux,YzuZwy->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jwux,YzuZyw->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jwux,YzuwZy->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jwux,YzuwyZ->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jwux,YzuyZw->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('xyzA,Jwuy,YzuZxw->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwuy,YzuwxZ->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('xyzA,JwxZ,Yzwy->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,JwxZ,Yzyw->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('xyzA,Jwxu,YzuZyw->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwxu,YzuyZw->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('xyzA,Jwxy,YzZw->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwxy,YzwZ->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyzA,JwyZ,Yzwx->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyzA,Jwyu,YzuZxw->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyzA,Jwyx,YzZw->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('xyzA,Jx,YzZy->AJYZ', t1_aaae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jx,YzyZ->AJYZ', t1_aaae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyzA,Jy,YzZx->AJYZ', t1_aaae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('xyzA,JzwZ,Ywxy->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,JzwZ,Ywyx->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('xyzA,Jzwu,YwuZyx->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jzwu,YwuyZx->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xe = mr_adc.t1.xe[:,s_chunk:f_chunk]
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_e_caa += 1/2 * einsum('JiAa,iZax,Yx->AJYZ', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('JiAa,iZxa,Yx->AJYZ', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/2 * einsum('JiAa,ia,YZ->AJYZ', t1_xxee, t1_xe, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/2 * einsum('JiAa,ixay,YxZy->AJYZ', t1_xxee, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('JiAa,ixya,YxZy->AJYZ', t1_xxee, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('iJAa,iZax,Yx->AJYZ', t1_xxee, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('iJAa,ia,YZ->AJYZ', t1_xxee, t1_xe, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('iJAa,ixay,YxZy->AJYZ', t1_xxee, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/6 * einsum('iJAa,ixya,YxZy->AJYZ', t1_xxee, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/12 * einsum('iJAa,ixya,YxyZ->AJYZ', t1_xxee, t1_xaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xe, t1_xxee, t1_xaae, t1_xaea)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_xvee = mr_adc.t1.xvee[:,:,:,s_chunk:f_chunk]

            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_e_caa += 1/2 * einsum('JiAa,iZax,Yx->AJYZ', t1_xvee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('JiAa,iZxa,Yx->AJYZ', t1_xvee, t1_vaae, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/2 * einsum('JiAa,ia,YZ->AJYZ', t1_xvee, t1_ve, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/2 * einsum('JiAa,ixay,YxZy->AJYZ', t1_xvee, t1_vaea, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('JiAa,ixya,YxZy->AJYZ', t1_xvee, t1_vaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_ve, t1_xvee, t1_vaae, t1_vaea)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ve = mr_adc.t1.ve[:,s_chunk:f_chunk]
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]

            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_e_caa -= 1/4 * einsum('iJAa,iZax,Yx->AJYZ', t1_vxee, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('iJAa,ia,YZ->AJYZ', t1_vxee, t1_ve, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('iJAa,ixay,YxZy->AJYZ', t1_vxee, t1_vaea, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/6 * einsum('iJAa,ixya,YxZy->AJYZ', t1_vxee, t1_vaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/12 * einsum('iJAa,ixya,YxyZ->AJYZ', t1_vxee, t1_vaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_ve, t1_vxee, t1_vaae, t1_vaea)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_e_caa += 1/4 * einsum('JxAa,Za,Yx->AJYZ', t1_xaee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/4 * einsum('JxAa,Zyza,Yyzx->AJYZ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/4 * einsum('JxAa,yZza,Yyxz->AJYZ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/4 * einsum('JxAa,ya,YyZx->AJYZ', t1_xaee, t1_ae, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/4 * einsum('JxAa,yzwa,YzyZxw->AJYZ', t1_xaee, t1_aaae, rdm_cccaaa, optimize = einsum_type)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_e_caa -= 1/12 * einsum('JxaA,Zyza,Yyxz->AJYZ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/6 * einsum('JxaA,Zyza,Yyzx->AJYZ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/6 * einsum('JxaA,ya,YyZx->AJYZ', t1_xaee, t1_ae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('JxaA,ya,YyxZ->AJYZ', t1_xaee, t1_ae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/6 * einsum('JxaA,yzwa,YzyZxw->AJYZ', t1_xaee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('JxaA,yzwa,YzyxZw->AJYZ', t1_xaee, t1_aaae, rdm_cccaaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee, t1_ae, t1_aaae)

        if nextern > 0:
            T[:, s_caa__abb:f_caa__abb] += T_e_caa.reshape(nextern, -1)


        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        ## Terms removed by neglecting T2 amplitudes
        # T_e_caa =- 1/2 * einsum('JxZA,Yx->AJYZ', t2_xaae, rdm_ca, optimize = einsum_type)
        # T_e_caa += 1/6 * einsum('JxyA,YyZx->AJYZ', t2_xaae, rdm_ccaa, optimize = einsum_type)
        # T_e_caa += 1/3 * einsum('JxyA,YyxZ->AJYZ', t2_xaae, rdm_ccaa, optimize = einsum_type)

        T_e_caa  = 1/4 * einsum('JiZA,ix,Yx->AJYZ', t1_xxae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('JiZA,ixyz,Yxyz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('JixA,iZyx,Yy->AJYZ', t1_xxae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('JixA,iZyz,Yxyz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iZyz,Yxzy->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iy,YxZy->AJYZ', t1_xxae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('JixA,iy,YxyZ->AJYZ', t1_xxae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzw,YxyZwz->AJYZ', t1_xxae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzw,YxywZz->AJYZ', t1_xxae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzw,YxywzZ->AJYZ', t1_xxae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iyzw,YxyzZw->AJYZ', t1_xxae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzw,YxyzwZ->AJYZ', t1_xxae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iyzx,YyZz->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('JixA,iyzx,YyzZ->AJYZ', t1_xxae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('JiZA,ix,Yx->AJYZ', t1_xvae, t1_va, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('JiZA,ixyz,Yxyz->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('JixA,iZyx,Yy->AJYZ', t1_xvae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('JixA,iZyz,Yxyz->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iZyz,Yxzy->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iy,YxZy->AJYZ', t1_xvae, t1_va, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('JixA,iy,YxyZ->AJYZ', t1_xvae, t1_va, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzw,YxyZwz->AJYZ', t1_xvae, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzw,YxywZz->AJYZ', t1_xvae, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzw,YxywzZ->AJYZ', t1_xvae, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iyzw,YxyzZw->AJYZ', t1_xvae, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('JixA,iyzw,YxyzwZ->AJYZ', t1_xvae, t1_vaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('JixA,iyzx,YyZz->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('JixA,iyzx,YyzZ->AJYZ', t1_xvae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('xA,JyZx,Yy->AJYZ', t1_ae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xA,Jyzx,YzZy->AJYZ', t1_ae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('xA,Jyzx,YzyZ->AJYZ', t1_ae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('xyZA,Jx,Yy->AJYZ', t1_aaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('xyZA,Jzwx,Ywyz->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyZA,Jzwx,Ywzy->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyZA,Jzwy,Ywxz->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('xyZA,Jzwy,Ywzx->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('xyZA,Jzxw,Ywyz->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('xyZA,Jzxy,Yz->AJYZ', t1_aaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('xyzA,JwZx,Yzyw->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/4 * einsum('xyzA,JwZy,Yzwx->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jwux,YzuZwy->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('xyzA,Jwux,YzuywZ->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwuy,YzuZwx->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwuy,YzuwZx->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jwuy,YzuwxZ->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwuy,YzuxZw->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwuy,YzuxwZ->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,JwxZ,Yzwy->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('xyzA,JwxZ,Yzyw->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwxu,YzuZwy->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwxu,YzuwZy->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwxu,YzuwyZ->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jwxu,YzuyZw->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jwxu,YzuywZ->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jwxy,YzZw->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('xyzA,Jwxy,YzwZ->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jx,YzZy->AJYZ', t1_aaae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/6 * einsum('xyzA,Jx,YzyZ->AJYZ', t1_aaae, t1_xa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/4 * einsum('xyzA,JzZw,Ywyx->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,JzwZ,Ywxy->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa -= 1/6 * einsum('xyzA,JzwZ,Ywyx->AJYZ', t1_aaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jzwu,YwuZxy->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jzwu,YwuxZy->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jzwu,YwuxyZ->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa -= 1/12 * einsum('xyzA,Jzwu,YwuyZx->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)
        T_e_caa += 1/12 * einsum('xyzA,Jzwu,YwuyxZ->AJYZ', t1_aaae, t1_xaaa, rdm_cccaaa, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,:,s_chunk:f_chunk]

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]

            T_e_caa += 1/4 * einsum('iJAa,iZxa,Yx->AJYZ', t1_xxee, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('iJAa,ixya,YxZy->AJYZ', t1_xxee, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/6 * einsum('iJAa,ixya,YxyZ->AJYZ', t1_xxee, t1_xaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_xaae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,:,s_chunk:f_chunk]
            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]

            T_e_caa -= 1/4 * einsum('iJAa,iZxa,Yx->AJYZ', t1_vxee, t1_vaae, rdm_ca, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('iJAa,ixya,YxZy->AJYZ', t1_vxee, t1_vaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/6 * einsum('iJAa,ixya,YxyZ->AJYZ', t1_vxee, t1_vaae, rdm_ccaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee, t1_vaae)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_e_caa -= 1/4 * einsum('JxaA,Za,Yx->AJYZ', t1_xaee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_caa += 1/6 * einsum('JxaA,Zyza,Yyxz->AJYZ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/12 * einsum('JxaA,Zyza,Yyzx->AJYZ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/4 * einsum('JxaA,yZza,Yyxz->AJYZ', t1_xaee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/12 * einsum('JxaA,ya,YyZx->AJYZ', t1_xaee, t1_ae, rdm_ccaa, optimize = einsum_type)
            T_e_caa += 1/6 * einsum('JxaA,ya,YyxZ->AJYZ', t1_xaee, t1_ae, rdm_ccaa, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('JxaA,yzwa,YzyZwx->AJYZ', t1_xaee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('JxaA,yzwa,YzywZx->AJYZ', t1_xaee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('JxaA,yzwa,YzywxZ->AJYZ', t1_xaee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
            T_e_caa += 1/12 * einsum('JxaA,yzwa,YzyxZw->AJYZ', t1_xaee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
            T_e_caa -= 1/12 * einsum('JxaA,yzwa,YzyxwZ->AJYZ', t1_xaee, t1_aaae, rdm_cccaaa, optimize = einsum_type)

            mr_adc.log.timer_debug("contracting t1.xaee", *cput2)
            del(t1_xaee, t1_ae, t1_aaae)

        if nextern > 0:
            T[:, s_caa__bab:f_caa__bab] += T_e_caa.reshape(nextern, -1)

        mr_adc.log.timer_debug("computing T q2-h1 E-CAA", *cput1)

    def compute_T__q2_h1__E_CCE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xa = mr_adc.t1.xa
        t1_xaaa = mr_adc.t1.xaaa

        t1_xxaa = mr_adc.t1.xxaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cce__aaa = mr_adc.h1.s_cce__aaa
        f_cce__aaa = mr_adc.h1.f_cce__aaa
        s_cce__abb = mr_adc.h1.s_cce__abb
        f_cce__abb = mr_adc.h1.f_cce__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        ## Terms removed by neglecting T2 amplitudes
        # T_e_cce  = einsum('JKAB->AJKB', t2_xxee, optimize = einsum_type).copy()
        # T_e_cce -= einsum('KJAB->AJKB', t2_xxee, optimize = einsum_type).copy()

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cce [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_xxae = mr_adc.t1.xxae

            T_e_cce  = 1/2 * einsum('xA,JKxB->AJKB', t1_ae, t1_xxae, optimize = einsum_type)
            T_e_cce -= 1/2 * einsum('xA,KJxB->AJKB', t1_ae, t1_xxae, optimize = einsum_type)


            # Amplitudes
            t1_ae = mr_adc.t1.ae
            t1_aaae = mr_adc.t1.aaae

            t1_xxae = mr_adc.t1.xxae[:,:,:,s_chunk:f_chunk]

            T_e_cce += 1/2 * einsum('JKxA,xB->AJKB', t1_xxae, t1_ae, optimize = einsum_type)
            T_e_cce -= 1/2 * einsum('KJxA,xB->AJKB', t1_xxae, t1_ae, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('JKxA,xyzB,zy->AJKB', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/2 * einsum('JKxA,yxzB,zy->AJKB', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('KJxA,xyzB,zy->AJKB', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/2 * einsum('KJxA,yxzB,zy->AJKB', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_xxae = mr_adc.t1.xxae
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_e_cce -= 1/4 * einsum('xyzA,JKxB,zy->AJKB', t1_aaae, t1_xxae, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/2 * einsum('xyzA,JKyB,zx->AJKB', t1_aaae, t1_xxae, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('xyzA,KJxB,zy->AJKB', t1_aaae, t1_xxae, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/2 * einsum('xyzA,KJyB,zx->AJKB', t1_aaae, t1_xxae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_xaea = mr_adc.t1.xaea
            t1_xaae = mr_adc.t1.xaae
            t1_xaae_a = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]

            T_e_cce += 1/4 * einsum('JxyA,KyBz,xz->AJKB', t1_xaae_a, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('JxyA,KzBx,yz->AJKB', t1_xaae_a, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('KxyA,JyBz,xz->AJKB', t1_xaae_a, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('KxyA,JzBx,yz->AJKB', t1_xaae_a, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('JxyA,KyzB,xz->AJKB', t1_xaae_a, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('JxyA,KzxB,yz->AJKB', t1_xaae_a, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('KxyA,JyzB,xz->AJKB', t1_xaae_a, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('KxyA,JzxB,yz->AJKB', t1_xaae_a, t1_xaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_xaea_a = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_e_cce += 1/4 * einsum('JxAy,KyzB,xz->AJKB', t1_xaea_a, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('JxAy,KzxB,yz->AJKB', t1_xaea_a, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('KxAy,JyzB,xz->AJKB', t1_xaea_a, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('KxAy,JzxB,yz->AJKB', t1_xaea_a, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/2 * einsum('JxAy,KyBz,xz->AJKB', t1_xaea_a, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/2 * einsum('JxAy,KzBx,yz->AJKB', t1_xaea_a, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/2 * einsum('KxAy,JyBz,xz->AJKB', t1_xaea_a, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/2 * einsum('KxAy,JzBx,yz->AJKB', t1_xaea_a, t1_xaea, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cce.shape[0]
            T[s_chunk:f_chunk, s_cce__aaa:f_cce__aaa] += T_e_cce[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cce", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncvs, nextern],
                                                                           [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cce t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_e_cce  = 1/2 * einsum('JxAB,Kx->AJKB', t1_xaee, t1_xa, optimize = einsum_type)
            T_e_cce -= 1/2 * einsum('KxAB,Jx->AJKB', t1_xaee, t1_xa, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('JxAB,Kyzx,yz->AJKB', t1_xaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/2 * einsum('JxAB,Kyxz,yz->AJKB', t1_xaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/2 * einsum('KxAB,Jyxz,yz->AJKB', t1_xaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('KxAB,Jyzx,yz->AJKB', t1_xaee, t1_xaaa, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_e_cce -= 1/2 * einsum('JxBA,Kx->AJKB', t1_xaee, t1_xa, optimize = einsum_type)
            T_e_cce += 1/2 * einsum('KxBA,Jx->AJKB', t1_xaee, t1_xa, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('JxBA,Kyzx,yz->AJKB', t1_xaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('KxBA,Jyzx,yz->AJKB', t1_xaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/2 * einsum('JxBA,Kyxz,yz->AJKB', t1_xaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/2 * einsum('KxBA,Jyxz,yz->AJKB', t1_xaee, t1_xaaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cce.shape[0]
            T[s_chunk:f_chunk, s_cce__aaa:f_cce__aaa] += T_e_cce[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cce t1.xaee", *cput2)
            del(t1_xaee)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncvs, nextern],
                                                                           [ncas, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cce t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_e_cce  = 1/2 * einsum('xyAB,JKxy->AJKB', t1_aaee, t1_xxaa, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('xyAB,JKxz,yz->AJKB', t1_aaee, t1_xxaa, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/2 * einsum('xyAB,JKyx->AJKB', t1_aaee, t1_xxaa, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('xyAB,JKzx,yz->AJKB', t1_aaee, t1_xxaa, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('xyAB,JKyz,xz->AJKB', t1_aaee, t1_xxaa, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('xyAB,JKyz,xz->AJKB', t1_aaee, t1_xxaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cce.shape[0]
            T[s_chunk:f_chunk, s_cce__aaa:f_cce__aaa] += T_e_cce[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cce t1.aaee", *cput2)
            del(t1_aaee)


        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cce [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_xaae = mr_adc.t1.xaae

            T_e_cce  = 1/2 * einsum('xA,JKxB->AJKB', t1_ae, t1_xxae, optimize = einsum_type)


            # Amplitudes
            t1_ae = mr_adc.t1.ae
            t1_aaae = mr_adc.t1.aaae

            t1_xxae = mr_adc.t1.xxae[:,:,:,s_chunk:f_chunk]

            T_e_cce -= 1/2 * einsum('KJxA,xB->AJKB', t1_xxae, t1_ae, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('KJxA,xyzB,zy->AJKB', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/2 * einsum('KJxA,yxzB,zy->AJKB', t1_xxae, t1_aaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_xxae = mr_adc.t1.xxae
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_e_cce -= 1/4 * einsum('xyzA,JKxB,zy->AJKB', t1_aaae, t1_xxae, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/2 * einsum('xyzA,JKyB,zx->AJKB', t1_aaae, t1_xxae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_xaea = mr_adc.t1.xaea
            t1_xaae_a = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]

            T_e_cce += 1/4 * einsum('JxyA,KyBz,xz->AJKB', t1_xaae_a, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('JxyA,KzBx,yz->AJKB', t1_xaae_a, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('KxyA,JyzB,xz->AJKB', t1_xaae_a, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('KxyA,JzxB,yz->AJKB', t1_xaae_a, t1_xaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_xaea_a = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_e_cce -= 1/2 * einsum('JxAy,KyBz,xz->AJKB', t1_xaea_a, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/4 * einsum('JxAy,KyzB,xz->AJKB', t1_xaea_a, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/2 * einsum('JxAy,KzBx,yz->AJKB', t1_xaea_a, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('JxAy,KzxB,yz->AJKB', t1_xaea_a, t1_xaae, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cce.shape[0]
            T[s_chunk:f_chunk, s_cce__abb:f_cce__abb] += T_e_cce.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cce", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncvs, nextern],
                                                                             [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cce t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_e_cce  = 1/2 * einsum('JxAB,Kx->AJKB', t1_xaee, t1_xa, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('JxAB,Kyzx,yz->AJKB', t1_xaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/2 * einsum('JxAB,Kyxz,yz->AJKB', t1_xaee, t1_xaaa, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_e_cce += 1/2 * einsum('KxBA,Jx->AJKB', t1_xaee, t1_xa, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('KxBA,Jyzx,yz->AJKB', t1_xaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cce += 1/2 * einsum('KxBA,Jyxz,yz->AJKB', t1_xaee, t1_xaaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cce.shape[0]
            T[s_chunk:f_chunk, s_cce__abb:f_cce__abb] += T_e_cce.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cce t1.xaee", *cput2)
            del(t1_xaee)


        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncvs, nextern],
                                                                             [ncas, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cce t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_e_cce  = 1/2 * einsum('xyAB,JKxy->AJKB', t1_aaee, t1_xxaa, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('xyAB,JKxz,yz->AJKB', t1_aaee, t1_xxaa, rdm_ca, optimize = einsum_type)
            T_e_cce -= 1/4 * einsum('xyAB,JKzy,xz->AJKB', t1_aaee, t1_xxaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cce.shape[0]
            T[s_chunk:f_chunk, s_cce__abb:f_cce__abb] += T_e_cce.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cce t1.aaee", *cput2)
            del(t1_aaee)

        mr_adc.log.timer_debug("computing T q2-h1 E-CCE", *cput1)

    def compute_T__q2_h1__E_CAE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xa = mr_adc.t1.xa
        t1_xaaa = mr_adc.t1.xaaa

        t1_va = mr_adc.t1.va
        t1_vaaa = mr_adc.t1.vaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cae__aaa = mr_adc.h1.s_cae__aaa
        f_cae__aaa = mr_adc.h1.f_cae__aaa
        s_cae__abb = mr_adc.h1.s_cae__abb
        f_cae__abb = mr_adc.h1.f_cae__abb
        s_cae__bab = mr_adc.h1.s_cae__bab
        f_cae__bab = mr_adc.h1.f_cae__bab

        ## Terms removed by neglecting T2 amplitudes
        # T_e_cae  = 1/2 * einsum('JxAB,Yx->AJYB', t2_xaee, rdm_ca, optimize = einsum_type)
        # T_e_cae -= 1/2 * einsum('JxBA,Yx->AJYB', t2_xaee, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_xaae = mr_adc.t1.xaae
            t1_xaea = mr_adc.t1.xaea

            T_e_cae =- 1/4 * einsum('xA,JyBx,Yy->AJYB', t1_ae, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('xA,JyxB,Yy->AJYB', t1_ae, t1_xaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_ae = mr_adc.t1.ae
            t1_aaae = mr_adc.t1.aaae

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]

            T_e_cae += 1/4 * einsum('JxyA,yB,Yx->AJYB', t1_xaae, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_cae -= 1/12 * einsum('JxyA,yzwB,Ywxz->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/12 * einsum('JxyA,yzwB,Ywzx->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/12 * einsum('JxyA,zwxB,Yywz->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/12 * einsum('JxyA,zwxB,Yyzw->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('JxyA,zywB,Ywxz->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)


            # Amplitudes
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_e_cae -= 1/4 * einsum('JxAy,yB,Yx->AJYB', t1_xaea, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('JxAy,yzwB,Ywzx->AJYB', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('JxAy,zwxB,Yywz->AJYB', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('JxAy,zywB,Ywxz->AJYB', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)


            # Amplitudes
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea

            T_e_cae -= 1/4 * einsum('xyzA,JwBx,Yzyw->AJYB', t1_aaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('xyzA,JwBy,Yzwx->AJYB', t1_aaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/12 * einsum('xyzA,JwxB,Yzwy->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/12 * einsum('xyzA,JwxB,Yzyw->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('xyzA,JwyB,Yzwx->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('xyzA,JzBw,Ywyx->AJYB', t1_aaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/12 * einsum('xyzA,JzwB,Ywxy->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/12 * einsum('xyzA,JzwB,Ywyx->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__aaa:f_cae__aaa] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            T_e_cae =- 1/4 * einsum('JiAB,ix,Yx->AJYB', t1_xxee, t1_xa, rdm_ca, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('JiAB,ixyz,Yxyz->AJYB', t1_xxee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('iJAB,ix,Yx->AJYB', t1_xxee, t1_xa, rdm_ca, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('iJAB,ixyz,Yxyz->AJYB', t1_xxee, t1_xaaa, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__aaa:f_cae__aaa] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae t1.xxee", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_e_cae =- 1/4 * einsum('JiAB,ix,Yx->AJYB', t1_xvee, t1_va, rdm_ca, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('JiAB,ixyz,Yxyz->AJYB', t1_xvee, t1_vaaa, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__aaa:f_cae__aaa] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae t1.xvee", *cput2)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,s_chunk:f_chunk]

            T_e_cae  = 1/4 * einsum('iJAB,ix,Yx->AJYB', t1_vxee, t1_va, rdm_ca, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('iJAB,ixyz,Yxyz->AJYB', t1_vxee, t1_vaaa, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__aaa:f_cae__aaa] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae t1.vxee", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncas, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_e_cae  = 1/4 * einsum('xyAB,Jx,Yy->AJYB', t1_aaee, t1_xa, rdm_ca, optimize = einsum_type)
            T_e_cae -= 1/12 * einsum('xyAB,Jzwx,Ywyz->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/12 * einsum('xyAB,Jzwx,Ywzy->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('xyAB,Jzyx,Yz->AJYB', t1_aaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('xyAB,Jzxy,Yz->AJYB', t1_aaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('xyAB,Jzxw,Ywyz->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('xyAB,Jy,Yx->AJYB', t1_aaee, t1_xa, rdm_ca, optimize = einsum_type)
            T_e_cae += 1/12 * einsum('xyAB,Jzwy,Ywxz->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/12 * einsum('xyAB,Jzwy,Ywzx->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('xyAB,Jzyw,Ywxz->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__aaa:f_cae__aaa] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae t1.aaee", *cput2)


        ## Terms removed by neglecting T2 amplitudes
        # T_e_cae  = 1/2 * einsum('JxAB,Yx->AJYB', t2_xaee, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_xaae = mr_adc.t1.xaae

            T_e_cae  = 1/4 * einsum('xA,JyxB,Yy->AJYB', t1_ae, t1_xaae, rdm_ca, optimize = einsum_type)

            # Amplitudes
            t1_ae = mr_adc.t1.ae
            t1_aaae = mr_adc.t1.aaae

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]

            T_e_cae += 1/12 * einsum('JxyA,yzwB,Ywxz->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/6 * einsum('JxyA,yzwB,Ywzx->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/6 * einsum('JxyA,zwxB,Yywz->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/12 * einsum('JxyA,zwxB,Yyzw->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)


            # Amplitudes
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_e_cae -= 1/4 * einsum('JxAy,yB,Yx->AJYB', t1_xaea, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('JxAy,yzwB,Ywzx->AJYB', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('JxAy,zwxB,Yywz->AJYB', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('JxAy,zywB,Ywxz->AJYB', t1_xaea, t1_aaae, rdm_ccaa, optimize = einsum_type)


            # Amplitudes
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea

            T_e_cae -= 1/6 * einsum('xyzA,JwxB,Yzwy->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/12 * einsum('xyzA,JwxB,Yzyw->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('xyzA,JwyB,Yzwx->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/6 * einsum('xyzA,JzwB,Ywxy->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/12 * einsum('xyzA,JzwB,Ywyx->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__abb:f_cae__abb] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            T_e_cae =- 1/4 * einsum('JiAB,ix,Yx->AJYB', t1_xxee, t1_xa, rdm_ca, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('JiAB,ixyz,Yxyz->AJYB', t1_xxee, t1_xaaa, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__abb:f_cae__abb] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae t1.xxee", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_e_cae =- 1/4 * einsum('JiAB,ix,Yx->AJYB', t1_xvee, t1_va, rdm_ca, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('JiAB,ixyz,Yxyz->AJYB', t1_xvee, t1_vaaa, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__abb:f_cae__abb] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae t1.xvee", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncas, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_e_cae  = 1/4 * einsum('xyAB,Jx,Yy->AJYB', t1_aaee, t1_xa, rdm_ca, optimize = einsum_type)
            T_e_cae -= 1/6 * einsum('xyAB,Jzwx,Ywyz->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/12 * einsum('xyAB,Jzwx,Ywzy->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('xyAB,Jzxw,Ywyz->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('xyAB,Jzxy,Yz->AJYB', t1_aaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cae -= 1/12 * einsum('xyAB,Jzwy,Ywxz->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/6 * einsum('xyAB,Jzwy,Ywzx->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__abb:f_cae__abb] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae t1.aaee", *cput2)


        ## Terms removed by neglecting T2 amplitudes
        # T_e_cae =- 1/2 * einsum('JxBA,Yx->AJYB', t2_xaee, rdm_ca, optimize = einsum_type)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_xaea = mr_adc.t1.xaea

            T_e_cae =- 1/4 * einsum('xA,JyBx,Yy->AJYB', t1_ae, t1_xaea, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_ae = mr_adc.t1.ae
            t1_aaae = mr_adc.t1.aaae
            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]

            T_e_cae += 1/4 * einsum('JxyA,yB,Yx->AJYB', t1_xaae, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_cae -= 1/6 * einsum('JxyA,yzwB,Ywxz->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/12 * einsum('JxyA,yzwB,Ywzx->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/12 * einsum('JxyA,zwxB,Yywz->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/6 * einsum('JxyA,zwxB,Yyzw->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('JxyA,zywB,Ywxz->AJYB', t1_xaae, t1_aaae, rdm_ccaa, optimize = einsum_type)


            # Amplitudes
            t1_xaae = mr_adc.t1.xaae
            t1_xaea = mr_adc.t1.xaea
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_e_cae -= 1/4 * einsum('xyzA,JwBx,Yzyw->AJYB', t1_aaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('xyzA,JwBy,Yzwx->AJYB', t1_aaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/12 * einsum('xyzA,JwxB,Yzwy->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/6 * einsum('xyzA,JwxB,Yzyw->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('xyzA,JzBw,Ywyx->AJYB', t1_aaae, t1_xaea, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/12 * einsum('xyzA,JzwB,Ywxy->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/6 * einsum('xyzA,JzwB,Ywyx->AJYB', t1_aaae, t1_xaae, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__bab:f_cae__bab] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            T_e_cae  = 1/4 * einsum('iJAB,ix,Yx->AJYB', t1_xxee, t1_xa, rdm_ca, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('iJAB,ixyz,Yxyz->AJYB', t1_xxee, t1_xaaa, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__bab:f_cae__bab] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae t1.xxee", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_e_cae  = 1/4 * einsum('iJAB,ix,Yx->AJYB', t1_vxee, t1_va, rdm_ca, optimize = einsum_type)
            T_e_cae += 1/4 * einsum('iJAB,ixyz,Yxyz->AJYB', t1_vxee, t1_vaaa, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__bab:f_cae__bab] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae t1.xvee", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncas, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cae t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_e_cae  = 1/12 * einsum('xyAB,Jzwx,Ywyz->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/6 * einsum('xyAB,Jzwx,Ywzy->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('xyAB,Jzyx,Yz->AJYB', t1_aaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('xyAB,Jy,Yx->AJYB', t1_aaee, t1_xa, rdm_ca, optimize = einsum_type)
            T_e_cae += 1/6 * einsum('xyAB,Jzwy,Ywxz->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae += 1/12 * einsum('xyAB,Jzwy,Ywzx->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)
            T_e_cae -= 1/4 * einsum('xyAB,Jzyw,Ywxz->AJYB', t1_aaee, t1_xaaa, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cae.shape[0]
            T[s_chunk:f_chunk, s_cae__bab:f_cae__bab] += T_e_cae.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cae t1.aaee", *cput2)

    def compute_T__q2_h1__E_CCA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nocc = mr_adc.nocc
        nextern = mr_adc.nextern

        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        t1_xaea = mr_adc.t1.xaea
        t1_xaae = mr_adc.t1.xaae

        t1_xa = mr_adc.t1.xa

        t1_xaaa = mr_adc.t1.xaaa

        t1_xxaa = mr_adc.t1.xxaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cca__aaa = mr_adc.h1.s_cca__aaa
        f_cca__aaa = mr_adc.h1.f_cca__aaa
        s_cca__abb = mr_adc.h1.s_cca__abb
        f_cca__abb = mr_adc.h1.f_cca__abb

        ## Indices
        cvs_tril_ind = np.tril_indices(ncvs, k=-1)

        ## Terms removed by neglecting T2 amplitudes
        # T_e_cca =- einsum('JKYA->AJKY', t2_xxae, optimize = einsum_type).copy()
        # T_e_cca += einsum('KJYA->AJKY', t2_xxae, optimize = einsum_type).copy()
        # T_e_cca += 1/2 * einsum('JKxA,Yx->AJKY', t2_xxae, rdm_ca, optimize = einsum_type)
        # T_e_cca -= 1/2 * einsum('KJxA,Yx->AJKY', t2_xxae, rdm_ca, optimize = einsum_type)

        T_e_cca  = 1/2 * einsum('JxAY,Kx->AJKY', t1_xaea, t1_xa, optimize = einsum_type)
        T_e_cca -= 1/2 * einsum('JxYA,Kx->AJKY', t1_xaae, t1_xa, optimize = einsum_type)
        T_e_cca -= 1/2 * einsum('KxAY,Jx->AJKY', t1_xaea, t1_xa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('KxYA,Jx->AJKY', t1_xaae, t1_xa, optimize = einsum_type)
        T_e_cca -= 1/2 * einsum('xA,JKYx->AJKY', t1_ae, t1_xxaa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('xA,JKxY->AJKY', t1_ae, t1_xxaa, optimize = einsum_type)
        T_e_cca -= 1/2 * einsum('xyYA,JKxy->AJKY', t1_aaae, t1_xxaa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('xyYA,JKyx->AJKY', t1_aaae, t1_xxaa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('JxAY,Kyxz,yz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxAY,Kyzx,yz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxAy,Kx,Yy->AJKY', t1_xaea, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/2 * einsum('JxAy,KyYz,xz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('JxAy,KyzY,xz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('JxAy,Kyzw,Yxzw->AJKY', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('JxAy,KzYx,yz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxAy,Kzwx,Yzwy->AJKY', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxAy,KzxY,yz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxAy,Kzxw,Yzyw->AJKY', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/2 * einsum('JxYA,Kyxz,yz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('JxYA,Kyzx,yz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('JxyA,Kx,Yy->AJKY', t1_xaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('JxyA,KyYz,xz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxyA,KyzY,xz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/12 * einsum('JxyA,Kyzw,Yxwz->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/12 * einsum('JxyA,Kyzw,Yxzw->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxyA,KzYx,yz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/12 * einsum('JxyA,Kzwx,Yzwy->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/12 * einsum('JxyA,Kzwx,Yzyw->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('JxyA,KzxY,yz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('JxyA,Kzxw,Yzyw->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/2 * einsum('KxAY,Jyxz,yz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('KxAY,Jyzx,yz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('KxAy,Jx,Yy->AJKY', t1_xaea, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('KxAy,JyYz,xz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('KxAy,JyzY,xz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('KxAy,Jyzw,Yxzw->AJKY', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/2 * einsum('KxAy,JzYx,yz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('KxAy,Jzwx,Yzwy->AJKY', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('KxAy,JzxY,yz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('KxAy,Jzxw,Yzyw->AJKY', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('KxYA,Jyxz,yz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('KxYA,Jyzx,yz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('KxyA,Jx,Yy->AJKY', t1_xaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('KxyA,JyYz,xz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('KxyA,JyzY,xz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/12 * einsum('KxyA,Jyzw,Yxwz->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/12 * einsum('KxyA,Jyzw,Yxzw->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('KxyA,JzYx,yz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/12 * einsum('KxyA,Jzwx,Yzwy->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/12 * einsum('KxyA,Jzwx,Yzyw->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('KxyA,JzxY,yz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('KxyA,Jzxw,Yzyw->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('xA,JKxy,Yy->AJKY', t1_ae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('xA,JKyx,Yy->AJKY', t1_ae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('xyYA,JKxz,yz->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('xyYA,JKyz,xz->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('xyYA,JKzx,yz->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('xyYA,JKzy,xz->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('xyzA,JKYx,zy->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/2 * einsum('xyzA,JKYy,zx->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/12 * einsum('xyzA,JKwx,Yywz->AJKY', t1_aaae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/12 * einsum('xyzA,JKwx,Yyzw->AJKY', t1_aaae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('xyzA,JKwy,Yxwz->AJKY', t1_aaae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('xyzA,JKxY,zy->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/12 * einsum('xyzA,JKxw,Yywz->AJKY', t1_aaae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/12 * einsum('xyzA,JKxw,Yyzw->AJKY', t1_aaae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('xyzA,JKxy,Yz->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('xyzA,JKyY,zx->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('xyzA,JKyw,Yxwz->AJKY', t1_aaae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('xyzA,JKyx,Yz->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        if nextern > 0:
            T[:, s_cca__aaa:f_cca__aaa] += T_e_cca[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(nextern, -1)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            T_e_cca  = 1/2 * einsum('JKAa,Ya->AJKY', t1_xxee, t1_ae, optimize = einsum_type)
            T_e_cca -= 1/2 * einsum('KJAa,Ya->AJKY', t1_xxee, t1_ae, optimize = einsum_type)
            T_e_cca -= 1/4 * einsum('JKAa,Yxya,xy->AJKY', t1_xxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cca += 1/2 * einsum('JKAa,xYya,xy->AJKY', t1_xxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cca -= 1/4 * einsum('JKAa,xa,Yx->AJKY', t1_xxee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_cca -= 1/4 * einsum('JKAa,xyza,Yzyx->AJKY', t1_xxee, t1_aaae, rdm_ccaa, optimize = einsum_type)
            T_e_cca += 1/4 * einsum('KJAa,Yxya,xy->AJKY', t1_xxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cca -= 1/2 * einsum('KJAa,xYya,xy->AJKY', t1_xxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cca += 1/4 * einsum('KJAa,xa,Yx->AJKY', t1_xxee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_cca += 1/4 * einsum('KJAa,xyza,Yzyx->AJKY', t1_xxee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cca.shape[0]
            T[s_chunk:f_chunk, s_cca__aaa:f_cca__aaa] += T_e_cca[:, cvs_tril_ind[0], cvs_tril_ind[1]].reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_ae, t1_aaae)


        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        ## Terms removed by neglecting T2 amplitudes
        # T_e_cca  = einsum('KJYA->AJKY', t2_xxae, optimize = einsum_type).copy()
        # T_e_cca -= 1/2 * einsum('KJxA,Yx->AJKY', t2_xxae, rdm_ca, optimize = einsum_type)

        T_e_cca  = 1/2 * einsum('JxAY,Kx->AJKY', t1_xaea, t1_xa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('KxYA,Jx->AJKY', t1_xaae, t1_xa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('xA,JKxY->AJKY', t1_ae, t1_xxaa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('xyYA,JKyx->AJKY', t1_aaae, t1_xxaa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('JxAY,Kyxz,yz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxAY,Kyzx,yz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxAy,Kx,Yy->AJKY', t1_xaea, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/2 * einsum('JxAy,KyYz,xz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('JxAy,KyzY,xz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('JxAy,Kyzw,Yxzw->AJKY', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('JxAy,KzYx,yz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxAy,Kzwx,Yzwy->AJKY', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxAy,KzxY,yz->AJKY', t1_xaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxAy,Kzxw,Yzyw->AJKY', t1_xaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('JxyA,KyYz,xz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/12 * einsum('JxyA,Kyzw,Yxwz->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/6 * einsum('JxyA,Kyzw,Yxzw->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('JxyA,KzYx,yz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/6 * einsum('JxyA,Kzwx,Yzwy->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/12 * einsum('JxyA,Kzwx,Yzyw->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('KxYA,Jyxz,yz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('KxYA,Jyzx,yz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('KxyA,Jx,Yy->AJKY', t1_xaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/4 * einsum('KxyA,JyzY,xz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/6 * einsum('KxyA,Jyzw,Yxwz->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/12 * einsum('KxyA,Jyzw,Yxzw->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/12 * einsum('KxyA,Jzwx,Yzwy->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/6 * einsum('KxyA,Jzwx,Yzyw->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('KxyA,JzxY,yz->AJKY', t1_xaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('KxyA,Jzxw,Yzyw->AJKY', t1_xaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('xA,JKxy,Yy->AJKY', t1_ae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('xyYA,JKyz,xz->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('xyYA,JKzx,yz->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/12 * einsum('xyzA,JKwx,Yywz->AJKY', t1_aaae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/6 * einsum('xyzA,JKwx,Yyzw->AJKY', t1_aaae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('xyzA,JKxY,zy->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca += 1/6 * einsum('xyzA,JKxw,Yywz->AJKY', t1_aaae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/12 * einsum('xyzA,JKxw,Yyzw->AJKY', t1_aaae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca += 1/2 * einsum('xyzA,JKyY,zx->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('xyzA,JKyw,Yxwz->AJKY', t1_aaae, t1_xxaa, rdm_ccaa, optimize = einsum_type)
        T_e_cca -= 1/4 * einsum('xyzA,JKyx,Yz->AJKY', t1_aaae, t1_xxaa, rdm_ca, optimize = einsum_type)
        if nextern > 0:
            T[:, s_cca__abb:f_cca__abb] += T_e_cca.reshape(nextern, -1)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, ncvs, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xxee = mr_adc.t1.xxee[:,:,s_chunk:f_chunk]

            T_e_cca  = 1/2 * einsum('JKAa,Ya->AJKY', t1_xxee, t1_ae, optimize = einsum_type)
            T_e_cca -= 1/4 * einsum('JKAa,Yxya,xy->AJKY', t1_xxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cca += 1/2 * einsum('JKAa,xYya,xy->AJKY', t1_xxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cca -= 1/4 * einsum('JKAa,xa,Yx->AJKY', t1_xxee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_cca -= 1/4 * einsum('JKAa,xyza,Yzyx->AJKY', t1_xxee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cca.shape[0]
            T[s_chunk:f_chunk, s_cca__abb:f_cca__abb] += T_e_cca.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xxee", *cput2)
            del(t1_xxee, t1_ae, t1_aaae)

        mr_adc.log.timer_debug("computing T q2-h1 E-CCA", *cput1)

    def compute_T__q2_h1__E_CVE(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        nocc = mr_adc.nocc
        ncas = mr_adc.ncas
        nextern = mr_adc.nextern

        # Amplitudes
        t1_xa = mr_adc.t1.xa
        t1_xaaa = mr_adc.t1.xaaa

        t1_xvaa = mr_adc.t1.xvaa

        t1_va = mr_adc.t1.va
        t1_vaaa = mr_adc.t1.vaaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca

        ## Excitation Manifolds
        s_cve__aaa = mr_adc.h1.s_cve__aaa
        f_cve__aaa = mr_adc.h1.f_cve__aaa
        s_cve__abb = mr_adc.h1.s_cve__abb
        f_cve__abb = mr_adc.h1.f_cve__abb
        s_cve__bab = mr_adc.h1.s_cve__bab
        f_cve__bab = mr_adc.h1.f_cve__bab

        ## Terms removed by neglecting T2 amplitudes
        # T_e_cve  = einsum('JKAB->AJKB', t2_xvee, optimize = einsum_type).copy()
        # T_e_cve -= einsum('KJAB->AJKB', t2_vxee, optimize = einsum_type).copy()

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_xvae = mr_adc.t1.xvae
            t1_vxae = mr_adc.t1.vxae

            T_e_cve  = 1/2 * einsum('xA,JKxB->AJKB', t1_ae, t1_xvae, optimize = einsum_type)
            T_e_cve -= 1/2 * einsum('xA,KJxB->AJKB', t1_ae, t1_vxae, optimize = einsum_type)


            # Amplitudes
            t1_vaae = mr_adc.t1.vaae
            t1_vaea = mr_adc.t1.vaea

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]

            T_e_cve += 1/4 * einsum('JxyA,KyBz,xz->AJKB', t1_xaae, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('JxyA,KyzB,xz->AJKB', t1_xaae, t1_vaae, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('JxyA,KzBx,yz->AJKB', t1_xaae, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('JxyA,KzxB,yz->AJKB', t1_xaae, t1_vaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_ae = mr_adc.t1.ae
            t1_aaae = mr_adc.t1.aaae

            t1_xvae = mr_adc.t1.xvae[:,:,:,s_chunk:f_chunk]

            T_e_cve += 1/2 * einsum('JKxA,xB->AJKB', t1_xvae, t1_ae, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('JKxA,xyzB,zy->AJKB', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/2 * einsum('JKxA,yxzB,zy->AJKB', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_vxae = mr_adc.t1.vxae[:,:,:,s_chunk:f_chunk]

            T_e_cve -= 1/2 * einsum('KJxA,xB->AJKB', t1_vxae, t1_ae, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('KJxA,xyzB,zy->AJKB', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/2 * einsum('KJxA,yxzB,zy->AJKB', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_e_cve -= 1/2 * einsum('JxAy,KyBz,xz->AJKB', t1_xaea, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('JxAy,KyzB,xz->AJKB', t1_xaea, t1_vaae, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/2 * einsum('JxAy,KzBx,yz->AJKB', t1_xaea, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('JxAy,KzxB,yz->AJKB', t1_xaea, t1_vaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]

            T_e_cve -= 1/4 * einsum('KxyA,JyBz,xz->AJKB', t1_vaae, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('KxyA,JyzB,xz->AJKB', t1_vaae, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('KxyA,JzBx,yz->AJKB', t1_vaae, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('KxyA,JzxB,yz->AJKB', t1_vaae, t1_xaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_e_cve += 1/2 * einsum('KxAy,JyBz,xz->AJKB', t1_vaea, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('KxAy,JyzB,xz->AJKB', t1_vaea, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/2 * einsum('KxAy,JzBx,yz->AJKB', t1_vaea, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('KxAy,JzxB,yz->AJKB', t1_vaea, t1_xaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_e_cve -= 1/4 * einsum('xyzA,JKxB,zy->AJKB', t1_aaae, t1_xvae, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/2 * einsum('xyzA,JKyB,zx->AJKB', t1_aaae, t1_xvae, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('xyzA,KJxB,zy->AJKB', t1_aaae, t1_vxae, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/2 * einsum('xyzA,KJyB,zx->AJKB', t1_aaae, t1_vxae, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__aaa:f_cve__aaa] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_e_cve  = 1/2 * einsum('JxAB,Kx->AJKB', t1_xaee, t1_va, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('JxAB,Kyzx,yz->AJKB', t1_xaee, t1_vaaa, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/2 * einsum('JxAB,Kyxz,yz->AJKB', t1_xaee, t1_vaaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__aaa:f_cve__aaa] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve t1.xaee", *cput2)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_e_cve =- 1/2 * einsum('JxBA,Kx->AJKB', t1_xaee, t1_va, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('JxBA,Kyzx,yz->AJKB', t1_xaee, t1_vaaa, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/2 * einsum('JxBA,Kyxz,yz->AJKB', t1_xaee, t1_vaaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__aaa:f_cve__aaa] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve t1.xaee", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [nval, ncas, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve t1.vaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]

            T_e_cve =- 1/2 * einsum('KxAB,Jx->AJKB', t1_vaee, t1_xa, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('KxAB,Jyzx,yz->AJKB', t1_vaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/2 * einsum('KxAB,Jyxz,yz->AJKB', t1_vaee, t1_xaaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__aaa:f_cve__aaa] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve t1.vaee", *cput2)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve t1.vaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,:,s_chunk:f_chunk]

            T_e_cve  = 1/2 * einsum('KxBA,Jx->AJKB', t1_vaee, t1_xa, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('KxBA,Jyzx,yz->AJKB', t1_vaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/2 * einsum('KxBA,Jyxz,yz->AJKB', t1_vaee, t1_xaaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__aaa:f_cve__aaa] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve t1.vaee", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncas, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_e_cve  = 1/4 * einsum('xyAB,JKzx,yz->AJKB', t1_aaee, t1_xvaa, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/2 * einsum('xyAB,JKyx->AJKB', t1_aaee, t1_xvaa, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('xyAB,JKxz,yz->AJKB', t1_aaee, t1_xvaa, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('xyAB,JKzy,xz->AJKB', t1_aaee, t1_xvaa, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/2 * einsum('xyAB,JKxy->AJKB', t1_aaee, t1_xvaa, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('xyAB,JKyz,xz->AJKB', t1_aaee, t1_xvaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__aaa:f_cve__aaa] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve t1.aaee", *cput2)


        ## Terms removed by neglecting T2 amplitudes
        # T_e_cve  = einsum('JKAB->AJKB', t2_xvee, optimize = einsum_type).copy()

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_xvae = mr_adc.t1.xvae
            t1_vxae = mr_adc.t1.vxae

            T_e_cve  = 1/2 * einsum('xA,JKxB->AJKB', t1_ae, t1_xvae, optimize = einsum_type)


            # Amplitudes
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_e_cve -= 1/4 * einsum('xyzA,JKxB,zy->AJKB', t1_aaae, t1_xvae, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/2 * einsum('xyzA,JKyB,zx->AJKB', t1_aaae, t1_xvae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_vaae = mr_adc.t1.vaae
            t1_vaea = mr_adc.t1.vaea

            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]

            T_e_cve += 1/4 * einsum('JxyA,KyBz,xz->AJKB', t1_xaae, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('JxyA,KzBx,yz->AJKB', t1_xaae, t1_vaea, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_xaae = mr_adc.t1.xaae

            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]

            T_e_cve += 1/4 * einsum('KxyA,JyzB,xz->AJKB', t1_vaae, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('KxyA,JzxB,yz->AJKB', t1_vaae, t1_xaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_xaea = mr_adc.t1.xaea[:,:,s_chunk:f_chunk]

            T_e_cve -= 1/2 * einsum('JxAy,KyBz,xz->AJKB', t1_xaea, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('JxAy,KyzB,xz->AJKB', t1_xaea, t1_vaae, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/2 * einsum('JxAy,KzBx,yz->AJKB', t1_xaea, t1_vaea, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('JxAy,KzxB,yz->AJKB', t1_xaea, t1_vaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_ae = mr_adc.t1.ae
            t1_aaae = mr_adc.t1.aaae

            t1_vxae = mr_adc.t1.vxae[:,:,:,s_chunk:f_chunk]

            T_e_cve -= 1/2 * einsum('KJxA,xB->AJKB', t1_vxae, t1_ae, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('KJxA,xyzB,zy->AJKB', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/2 * einsum('KJxA,yxzB,zy->AJKB', t1_vxae, t1_aaae, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__abb:f_cve__abb] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, nval, nextern],
                                                                           [ncvs, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,s_chunk:f_chunk]

            T_e_cve  = 1/2 * einsum('JxAB,Kx->AJKB', t1_xaee, t1_va, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('JxAB,Kyzx,yz->AJKB', t1_xaee, t1_vaaa, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/2 * einsum('JxAB,Kyxz,yz->AJKB', t1_xaee, t1_vaaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__abb:f_cve__abb] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve t1.xaee", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, nval, nextern],
                                                                           [nval, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve t1.vaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,:,s_chunk:f_chunk]

            T_e_cve  = 1/2 * einsum('KxBA,Jx->AJKB', t1_vaee, t1_xa, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('KxBA,Jyzx,yz->AJKB', t1_vaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/2 * einsum('KxBA,Jyxz,yz->AJKB', t1_vaee, t1_xaaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__abb:f_cve__abb] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve t1.vaee", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, nval, nextern],
                                                                           [ncas, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_e_cve  = 1/2 * einsum('xyAB,JKxy->AJKB', t1_aaee, t1_xvaa, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('xyAB,JKzy,xz->AJKB', t1_aaee, t1_xvaa, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('xyAB,JKxz,yz->AJKB', t1_aaee, t1_xvaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__abb:f_cve__abb] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve t1.aaee", *cput2)


        ## Terms removed by neglecting T2 amplitudes
        # T_e_cve =- einsum('KJAB->AJKB', t2_vxee, optimize = einsum_type).copy()

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_ae = mr_adc.t1.ae[:,s_chunk:f_chunk]
            t1_vxae = mr_adc.t1.vxae

            T_e_cve =- 1/2 * einsum('xA,KJxB->AJKB', t1_ae, t1_vxae, optimize = einsum_type)


            # Amplitudes
            t1_xaae = mr_adc.t1.xaae[:,:,:,s_chunk:f_chunk]
            t1_vaae = mr_adc.t1.vaae

            T_e_cve -= 1/4 * einsum('JxyA,KyzB,xz->AJKB', t1_xaae, t1_vaae, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('JxyA,KzxB,yz->AJKB', t1_xaae, t1_vaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_ae = mr_adc.t1.ae
            t1_aaae = mr_adc.t1.aaae

            t1_xvae = mr_adc.t1.xvae[:,:,:,s_chunk:f_chunk]

            T_e_cve += 1/2 * einsum('JKxA,xB->AJKB', t1_xvae, t1_ae, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('JKxA,xyzB,zy->AJKB', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/2 * einsum('JKxA,yxzB,zy->AJKB', t1_xvae, t1_aaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_xaae = mr_adc.t1.xaae
            t1_xaea = mr_adc.t1.xaea

            t1_vaea = mr_adc.t1.vaea[:,:,s_chunk:f_chunk]

            T_e_cve += 1/2 * einsum('KxAy,JyBz,xz->AJKB', t1_vaea, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/4 * einsum('KxAy,JyzB,xz->AJKB', t1_vaea, t1_xaae, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/2 * einsum('KxAy,JzBx,yz->AJKB', t1_vaea, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('KxAy,JzxB,yz->AJKB', t1_vaea, t1_xaae, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_vaae = mr_adc.t1.vaae[:,:,:,s_chunk:f_chunk]

            T_e_cve -= 1/4 * einsum('KxyA,JyBz,xz->AJKB', t1_vaae, t1_xaea, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('KxyA,JzBx,yz->AJKB', t1_vaae, t1_xaea, rdm_ca, optimize = einsum_type)


            # Amplitudes
            t1_aaae = mr_adc.t1.aaae[:,:,:,s_chunk:f_chunk]

            T_e_cve += 1/4 * einsum('xyzA,KJxB,zy->AJKB', t1_aaae, t1_vxae, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/2 * einsum('xyzA,KJyB,zx->AJKB', t1_aaae, t1_vxae, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__bab:f_cve__bab] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve t1.xaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xaee = mr_adc.t1.xaee[:,:,:,s_chunk:f_chunk]

            T_e_cve =- 1/2 * einsum('JxBA,Kx->AJKB', t1_xaee, t1_va, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('JxBA,Kyzx,yz->AJKB', t1_xaee, t1_vaaa, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/2 * einsum('JxBA,Kyxz,yz->AJKB', t1_xaee, t1_vaaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__bab:f_cve__bab] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve t1.xaee", *cput2)

        chunks = tools.calculate_double_chunks(mr_adc, nextern, [nval, ncas, nextern],
                                                                           [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve t1.vaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vaee = mr_adc.t1.vaee[:,:,s_chunk:f_chunk]

            T_e_cve =- 1/2 * einsum('KxAB,Jx->AJKB', t1_vaee, t1_xa, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('KxAB,Jyzx,yz->AJKB', t1_vaee, t1_xaaa, rdm_ca, optimize = einsum_type)
            T_e_cve -= 1/2 * einsum('KxAB,Jyxz,yz->AJKB', t1_vaee, t1_xaaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__bab:f_cve__bab] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve t1.vaee", *cput2)


        chunks = tools.calculate_double_chunks(mr_adc, nextern, [ncvs, ncas, nextern],
                                                                           [ncas, ncas, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("T_e_cve t1.aaee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_aaee = mr_adc.t1.aaee[:,:,s_chunk:f_chunk]

            T_e_cve =- 1/2 * einsum('xyAB,JKyx->AJKB', t1_aaee, t1_xvaa, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('xyAB,JKzx,yz->AJKB', t1_aaee, t1_xvaa, rdm_ca, optimize = einsum_type)
            T_e_cve += 1/4 * einsum('xyAB,JKyz,xz->AJKB', t1_aaee, t1_xvaa, rdm_ca, optimize = einsum_type)

            dim_chunk = T_e_cve.shape[0]
            T[s_chunk:f_chunk, s_cve__bab:f_cve__bab] += T_e_cve.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting T_e_cve t1.aaee", *cput2)

        mr_adc.log.timer_debug("computing T q2-h1 E-CVE", *cput1)

    def compute_T__q2_h1__E_CVA(mr_adc, T):

        cput1 = (logger.process_clock(), logger.perf_counter())

        # Einsum definition from kernel
        einsum = mr_adc.interface.einsum
        einsum_type = mr_adc.interface.einsum_type

        # Variables from kernel
        ncvs = mr_adc.ncvs
        nval = mr_adc.nval
        nocc = mr_adc.nocc
        nextern = mr_adc.nextern

        # Amplitudes
        t1_ae = mr_adc.t1.ae
        t1_aaae = mr_adc.t1.aaae

        t1_xaea = mr_adc.t1.xaea
        t1_vaea = mr_adc.t1.vaea

        t1_xaae = mr_adc.t1.xaae
        t1_vaae = mr_adc.t1.vaae

        t1_xa = mr_adc.t1.xa
        t1_va = mr_adc.t1.va

        t1_xaaa = mr_adc.t1.xaaa
        t1_vaaa = mr_adc.t1.vaaa

        t1_xvaa = mr_adc.t1.xvaa

        # Reduced Density Matrices
        rdm_ca = mr_adc.rdm.ca
        rdm_ccaa = mr_adc.rdm.ccaa

        ## Excitation Manifolds
        s_cva__aaa = mr_adc.h1.s_cva__aaa
        f_cva__aaa = mr_adc.h1.f_cva__aaa
        s_cva__abb = mr_adc.h1.s_cva__abb
        f_cva__abb = mr_adc.h1.f_cva__abb
        s_cva__bab = mr_adc.h1.s_cva__bab
        f_cva__bab = mr_adc.h1.f_cva__bab

        ## Terms removed by neglecting T2 amplitudes
        # T_e_cva =- einsum('JKYA->AJKY', t2_xvae, optimize = einsum_type).copy()
        # T_e_cva += einsum('KJYA->AJKY', t2_vxae, optimize = einsum_type).copy()
        # T_e_cva += 1/2 * einsum('JKxA,Yx->AJKY', t2_xvae, rdm_ca, optimize = einsum_type)
        # T_e_cva -= 1/2 * einsum('KJxA,Yx->AJKY', t2_vxae, rdm_ca, optimize = einsum_type)

        T_e_cva  = 1/2 * einsum('JxAY,Kx->AJKY', t1_xaea, t1_va, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('JxYA,Kx->AJKY', t1_xaae, t1_va, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('KxAY,Jx->AJKY', t1_vaea, t1_xa, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('KxYA,Jx->AJKY', t1_vaae, t1_xa, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('xA,JKYx->AJKY', t1_ae, t1_xvaa, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('xA,JKxY->AJKY', t1_ae, t1_xvaa, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('xyYA,JKxy->AJKY', t1_aaae, t1_xvaa, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('xyYA,JKyx->AJKY', t1_aaae, t1_xvaa, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('JxAY,Kyxz,yz->AJKY', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxAY,Kyzx,yz->AJKY', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxAy,Kx,Yy->AJKY', t1_xaea, t1_va, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('JxAy,KyYz,xz->AJKY', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxAy,KyzY,xz->AJKY', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxAy,Kyzw,Yxzw->AJKY', t1_xaea, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('JxAy,KzYx,yz->AJKY', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxAy,Kzwx,Yzwy->AJKY', t1_xaea, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxAy,KzxY,yz->AJKY', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxAy,Kzxw,Yzyw->AJKY', t1_xaea, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('JxYA,Kyxz,yz->AJKY', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxYA,Kyzx,yz->AJKY', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxyA,Kx,Yy->AJKY', t1_xaae, t1_va, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxyA,KyYz,xz->AJKY', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxyA,KyzY,xz->AJKY', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/12 * einsum('JxyA,Kyzw,Yxwz->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/12 * einsum('JxyA,Kyzw,Yxzw->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxyA,KzYx,yz->AJKY', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/12 * einsum('JxyA,Kzwx,Yzwy->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/12 * einsum('JxyA,Kzwx,Yzyw->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxyA,KzxY,yz->AJKY', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxyA,Kzxw,Yzyw->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('KxAY,Jyxz,yz->AJKY', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxAY,Jyzx,yz->AJKY', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxAy,Jx,Yy->AJKY', t1_vaea, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('KxAy,JyYz,xz->AJKY', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxAy,JyzY,xz->AJKY', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxAy,Jyzw,Yxzw->AJKY', t1_vaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('KxAy,JzYx,yz->AJKY', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxAy,Jzwx,Yzwy->AJKY', t1_vaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxAy,JzxY,yz->AJKY', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxAy,Jzxw,Yzyw->AJKY', t1_vaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('KxYA,Jyxz,yz->AJKY', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxYA,Jyzx,yz->AJKY', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxyA,Jx,Yy->AJKY', t1_vaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxyA,JyYz,xz->AJKY', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxyA,JyzY,xz->AJKY', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/12 * einsum('KxyA,Jyzw,Yxwz->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/12 * einsum('KxyA,Jyzw,Yxzw->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxyA,JzYx,yz->AJKY', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/12 * einsum('KxyA,Jzwx,Yzwy->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/12 * einsum('KxyA,Jzwx,Yzyw->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxyA,JzxY,yz->AJKY', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxyA,Jzxw,Yzyw->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('xA,JKxy,Yy->AJKY', t1_ae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('xA,JKyx,Yy->AJKY', t1_ae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('xyYA,JKxz,yz->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('xyYA,JKyz,xz->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('xyYA,JKzx,yz->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('xyYA,JKzy,xz->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('xyzA,JKYx,zy->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('xyzA,JKYy,zx->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/12 * einsum('xyzA,JKwx,Yywz->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/12 * einsum('xyzA,JKwx,Yyzw->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('xyzA,JKwy,Yxwz->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('xyzA,JKxY,zy->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/12 * einsum('xyzA,JKxw,Yywz->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/12 * einsum('xyzA,JKxw,Yyzw->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('xyzA,JKxy,Yz->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('xyzA,JKyY,zx->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('xyzA,JKyw,Yxwz->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('xyzA,JKyx,Yz->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        if nextern > 0:
            T[:, s_cva__aaa:f_cva__aaa] += T_e_cva.reshape(nextern, -1)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_e_cva  = 1/2 * einsum('JKAa,Ya->AJKY', t1_xvee, t1_ae, optimize = einsum_type)
            T_e_cva -= 1/4 * einsum('JKAa,Yxya,xy->AJKY', t1_xvee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cva += 1/2 * einsum('JKAa,xYya,xy->AJKY', t1_xvee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cva -= 1/4 * einsum('JKAa,xa,Yx->AJKY', t1_xvee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_cva -= 1/4 * einsum('JKAa,xyza,Yzyx->AJKY', t1_xvee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cva.shape[0]
            T[s_chunk:f_chunk, s_cva__aaa:f_cva__aaa] += T_e_cva.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee)

        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,s_chunk:f_chunk]

            T_e_cva =- 1/2 * einsum('KJAa,Ya->AJKY', t1_vxee, t1_ae, optimize = einsum_type)
            T_e_cva += 1/4 * einsum('KJAa,Yxya,xy->AJKY', t1_vxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cva -= 1/2 * einsum('KJAa,xYya,xy->AJKY', t1_vxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cva += 1/4 * einsum('KJAa,xa,Yx->AJKY', t1_vxee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_cva += 1/4 * einsum('KJAa,xyza,Yzyx->AJKY', t1_vxee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cva.shape[0]
            T[s_chunk:f_chunk, s_cva__aaa:f_cva__aaa] += T_e_cva.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)
            del(t1_vxee)


        ## Terms removed by neglecting T2 amplitudes
        # T_e_cva  = einsum('KJYA->AJKY', t2_vxae, optimize = einsum_type).copy()
        # T_e_cva -= 1/2 * einsum('KJxA,Yx->AJKY', t2_vxae, rdm_ca, optimize = einsum_type)

        T_e_cva  = 1/2 * einsum('JxAY,Kx->AJKY', t1_xaea, t1_va, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('KxYA,Jx->AJKY', t1_vaae, t1_xa, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('xA,JKxY->AJKY', t1_ae, t1_xvaa, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('xyYA,JKyx->AJKY', t1_aaae, t1_xvaa, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('JxAY,Kyxz,yz->AJKY', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxAY,Kyzx,yz->AJKY', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxAy,Kx,Yy->AJKY', t1_xaea, t1_va, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('JxAy,KyYz,xz->AJKY', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxAy,KyzY,xz->AJKY', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxAy,Kyzw,Yxzw->AJKY', t1_xaea, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('JxAy,KzYx,yz->AJKY', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxAy,Kzwx,Yzwy->AJKY', t1_xaea, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxAy,KzxY,yz->AJKY', t1_xaea, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxAy,Kzxw,Yzyw->AJKY', t1_xaea, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxyA,KyYz,xz->AJKY', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/12 * einsum('JxyA,Kyzw,Yxwz->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/6 * einsum('JxyA,Kyzw,Yxzw->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxyA,KzYx,yz->AJKY', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/6 * einsum('JxyA,Kzwx,Yzwy->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/12 * einsum('JxyA,Kzwx,Yzyw->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('KxYA,Jyxz,yz->AJKY', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxYA,Jyzx,yz->AJKY', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxyA,Jx,Yy->AJKY', t1_vaae, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxyA,JyzY,xz->AJKY', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/6 * einsum('KxyA,Jyzw,Yxwz->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/12 * einsum('KxyA,Jyzw,Yxzw->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/12 * einsum('KxyA,Jzwx,Yzwy->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/6 * einsum('KxyA,Jzwx,Yzyw->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxyA,JzxY,yz->AJKY', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxyA,Jzxw,Yzyw->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('xA,JKxy,Yy->AJKY', t1_ae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('xyYA,JKyz,xz->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('xyYA,JKzx,yz->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/12 * einsum('xyzA,JKwx,Yywz->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/6 * einsum('xyzA,JKwx,Yyzw->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('xyzA,JKxY,zy->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/6 * einsum('xyzA,JKxw,Yywz->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/12 * einsum('xyzA,JKxw,Yyzw->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('xyzA,JKyY,zx->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('xyzA,JKyw,Yxwz->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('xyzA,JKyx,Yz->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        if nextern > 0:
            T[:, s_cva__abb:f_cva__abb] += T_e_cva.reshape(nextern, -1)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.xvee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_xvee = mr_adc.t1.xvee[:,:,s_chunk:f_chunk]

            T_e_cva  = 1/2 * einsum('JKAa,Ya->AJKY', t1_xvee, t1_ae, optimize = einsum_type)
            T_e_cva -= 1/4 * einsum('JKAa,Yxya,xy->AJKY', t1_xvee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cva += 1/2 * einsum('JKAa,xYya,xy->AJKY', t1_xvee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cva -= 1/4 * einsum('JKAa,xa,Yx->AJKY', t1_xvee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_cva -= 1/4 * einsum('JKAa,xyza,Yzyx->AJKY', t1_xvee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cva.shape[0]
            T[s_chunk:f_chunk, s_cva__abb:f_cva__abb] += T_e_cva.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.xvee", *cput2)
            del(t1_xvee)


        ## Terms removed by neglecting T2 amplitudes
        # T_e_cva =- einsum('JKYA->AJKY', t2_xvae, optimize = einsum_type).copy()
        # T_e_cva += 1/2 * einsum('JKxA,Yx->AJKY', t2_xvae, rdm_ca, optimize = einsum_type)

        T_e_cva =- 1/2 * einsum('JxYA,Kx->AJKY', t1_xaae, t1_va, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('KxAY,Jx->AJKY', t1_vaea, t1_xa, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('xA,JKYx->AJKY', t1_ae, t1_xvaa, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('xyYA,JKxy->AJKY', t1_aaae, t1_xvaa, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('JxYA,Kyxz,yz->AJKY', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxYA,Kyzx,yz->AJKY', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxyA,Kx,Yy->AJKY', t1_xaae, t1_va, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('JxyA,KyzY,xz->AJKY', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/6 * einsum('JxyA,Kyzw,Yxwz->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/12 * einsum('JxyA,Kyzw,Yxzw->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/12 * einsum('JxyA,Kzwx,Yzwy->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/6 * einsum('JxyA,Kzwx,Yzyw->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxyA,KzxY,yz->AJKY', t1_xaae, t1_vaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('JxyA,Kzxw,Yzyw->AJKY', t1_xaae, t1_vaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('KxAY,Jyxz,yz->AJKY', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxAY,Jyzx,yz->AJKY', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxAy,Jx,Yy->AJKY', t1_vaea, t1_xa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/2 * einsum('KxAy,JyYz,xz->AJKY', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxAy,JyzY,xz->AJKY', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxAy,Jyzw,Yxzw->AJKY', t1_vaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('KxAy,JzYx,yz->AJKY', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxAy,Jzwx,Yzwy->AJKY', t1_vaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxAy,JzxY,yz->AJKY', t1_vaea, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxAy,Jzxw,Yzyw->AJKY', t1_vaea, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/4 * einsum('KxyA,JyYz,xz->AJKY', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/12 * einsum('KxyA,Jyzw,Yxwz->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/6 * einsum('KxyA,Jyzw,Yxzw->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('KxyA,JzYx,yz->AJKY', t1_vaae, t1_xaaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/6 * einsum('KxyA,Jzwx,Yzwy->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/12 * einsum('KxyA,Jzwx,Yzyw->AJKY', t1_vaae, t1_xaaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('xA,JKyx,Yy->AJKY', t1_ae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('xyYA,JKxz,yz->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('xyYA,JKzy,xz->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('xyzA,JKYx,zy->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/2 * einsum('xyzA,JKYy,zx->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        T_e_cva -= 1/6 * einsum('xyzA,JKwx,Yywz->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/12 * einsum('xyzA,JKwx,Yyzw->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('xyzA,JKwy,Yxwz->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/12 * einsum('xyzA,JKxw,Yywz->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva -= 1/6 * einsum('xyzA,JKxw,Yyzw->AJKY', t1_aaae, t1_xvaa, rdm_ccaa, optimize = einsum_type)
        T_e_cva += 1/4 * einsum('xyzA,JKxy,Yz->AJKY', t1_aaae, t1_xvaa, rdm_ca, optimize = einsum_type)
        if nextern > 0:
            T[:, s_cva__bab:f_cva__bab] += T_e_cva.reshape(nextern, -1)

        chunks = tools.calculate_chunks(mr_adc, nextern, [ncvs, nval, nextern], ntensors = 2)
        for i_chunk, (s_chunk, f_chunk) in enumerate(chunks):
            cput2 = (logger.process_clock(), logger.perf_counter())
            mr_adc.log.debug("t1.vxee [%i/%i], chunk [%i:%i]", i_chunk + 1, len(chunks), s_chunk, f_chunk)

            # Amplitudes
            t1_vxee = mr_adc.t1.vxee[:,:,s_chunk:f_chunk]

            T_e_cva =- 1/2 * einsum('KJAa,Ya->AJKY', t1_vxee, t1_ae, optimize = einsum_type)
            T_e_cva += 1/4 * einsum('KJAa,Yxya,xy->AJKY', t1_vxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cva -= 1/2 * einsum('KJAa,xYya,xy->AJKY', t1_vxee, t1_aaae, rdm_ca, optimize = einsum_type)
            T_e_cva += 1/4 * einsum('KJAa,xa,Yx->AJKY', t1_vxee, t1_ae, rdm_ca, optimize = einsum_type)
            T_e_cva += 1/4 * einsum('KJAa,xyza,Yzyx->AJKY', t1_vxee, t1_aaae, rdm_ccaa, optimize = einsum_type)

            dim_chunk = T_e_cva.shape[0]
            T[s_chunk:f_chunk, s_cva__bab:f_cva__bab] += T_e_cva.reshape(dim_chunk, -1)

            mr_adc.log.timer_debug("contracting t1.vxee", *cput2)

        mr_adc.log.timer_debug("computing T q2-h1 E-CVA", *cput1)

    # Variables from kernel
    nmo = mr_adc.nmo
    nroots = mr_adc.nroots

    ncvs = mr_adc.ncvs
    nval = mr_adc.nval
    ncore = mr_adc.ncore
    ncas = mr_adc.ncas
    nocc = mr_adc.nocc
    nextern = mr_adc.nextern

    # MR-ADC(0) terms
    if mr_adc.method in ("mr-adc(2)", "mr-adc(2)-x"):
        dim = mr_adc.h0.dim + mr_adc.h1.dim
    else:
        dim = mr_adc.h0.dim

    X = np.zeros((nmo, nroots))

    # CORE terms
    T = np.zeros((ncvs, dim))

    ## < [ q^(0), h^(0)^\dag ] >
    ### CORE(0) - C
    compute_T__q0_h0__C_C(mr_adc, T)

    if mr_adc.method in ("mr-adc(2)", "mr-adc(2)-x"):
        ## < [ q^(0), h^(1)^\dag ] >
        ### CORE(0) - CAA
        compute_T__q0_h1__C_CAA(mr_adc, T)

        ## < [ q^(2), h^(0)^\dag ] >
        ### CORE(2) - C
        compute_T__q2_h0__C_C(mr_adc, T)

    # MR-ADC(2)-X terms
    ## {q^(2)| h^(1)^dag}
    if mr_adc.method == "mr-adc(2)-x":

        # CORE(2) - CAA
        compute_T__q2_h1__C_CAA(mr_adc, T)

        # CORE(2) - CCE
        compute_T__q2_h1__C_CCE(mr_adc, T)

        # CORE(2) - CAE
        compute_T__q2_h1__C_CAE(mr_adc, T)

        # CORE(2) - CCA
        compute_T__q2_h1__C_CCA(mr_adc, T)

        if nval > 0:
            # CORE(2) - CVE
            compute_T__q2_h1__C_CVE(mr_adc, T)

            # CORE(2) - CVA
            compute_T__q2_h1__C_CVA(mr_adc, T)

    # Transform to the orthogonal basis
    if mr_adc.method in ("mr-adc(2)", "mr-adc(2)-x"):
        T_ortho = np.zeros((T.shape[0], mr_adc.h_orth.dim))
        for p in range(T.shape[0]):
            T_ortho[p] = apply_S_12(mr_adc, T[p], transpose = True)
        T = T_ortho

    X[:ncvs, :] = np.dot(T, U.T)

    # VALENCE terms
    # MR-ADC(2) terms
    if nval > 0:
        T = np.zeros((nval, dim))

        if mr_adc.method in ("mr-adc(2)", "mr-adc(2)-x"):
            ## < [ q^(2), h^(0)^\dag ] >
            ### VALENCE(2) - C
            compute_T__q2_h0__V_C(mr_adc, T)

        # MR-ADC(2)-X terms
        ## {q^(2)| h^(1)^dag}
        if mr_adc.method == "mr-adc(2)-x":

            ### VALENCE(2) - CAA
            compute_T__q2_h1__V_CAA(mr_adc, T)

            ### VALENCE(2) - CCE
            compute_T__q2_h1__V_CCE(mr_adc, T)

            ### VALENCE(2) - CAE
            compute_T__q2_h1__V_CAE(mr_adc, T)

            ### VALENCE(2) - CCA
            compute_T__q2_h1__V_CCA(mr_adc, T)

            ### VALENCE(2) - CVE
            compute_T__q2_h1__V_CVE(mr_adc, T)

            ### VALENCE(2) - CVA
            compute_T__q2_h1__V_CVA(mr_adc, T)

        # Transform to the orthogonal basis
        if mr_adc.method in ("mr-adc(2)", "mr-adc(2)-x"):
            T_ortho = np.zeros((T.shape[0], mr_adc.h_orth.dim))
            for p in range(T.shape[0]):
                T_ortho[p] = apply_S_12(mr_adc, T[p], transpose = True)
            T = T_ortho

        X[ncvs:ncore, :] = np.dot(T, U.T)

    # ACTIVE terms
    T = np.zeros((ncas, dim))

    # MR-ADC(1) terms
    ## < [ q^(1), h^(0)^\dag ] >
    if mr_adc.method in ("mr-adc(1)", "mr-adc(2)", "mr-adc(2)-x"):

        ### ACTIVE(1) - C
        compute_T__q1_h0__A_C(mr_adc, T)

    # MR-ADC(2) terms
    if mr_adc.method in ("mr-adc(2)", "mr-adc(2)-x"):

        ## < [ q^(1), h^(1)^\dag ] >
        ### ACTIVE(1) - CAA
        compute_T__q1_h1__A_CAA(mr_adc, T)

        ### ACTIVE(1) - CCE
        compute_T__q1_h1__A_CCE(mr_adc, T)

        ### ACTIVE(1) - CAE
        compute_T__q1_h1__A_CAE(mr_adc, T)

        ### ACTIVE(1) - CCA
        compute_T__q1_h1__A_CCA(mr_adc, T)

        if nval > 0:
            ### ACTIVE(1) - CVE
            compute_T__q1_h1__A_CVE(mr_adc, T)

            ### ACTIVE(1) - CVA
            compute_T__q1_h1__A_CVA(mr_adc, T)

        ## < [ q^(1), h^(1)^\dag ] >
        ### ACTIVE(2) - C
        compute_T__q2_h0__A_C(mr_adc, T)

    # MR-ADC(2)-X terms
    ## {q^(2)| h^(1)^dag}
    if mr_adc.method == "mr-adc(2)-x":

        ### ACTIVE(2) - CAA
        compute_T__q2_h1__A_CAA(mr_adc, T)

        ### ACTIVE(2) - CCE
        compute_T__q2_h1__A_CCE(mr_adc, T)

        ### ACTIVE(2) - CAE
        compute_T__q2_h1__A_CAE(mr_adc, T)

        ### ACTIVE(2) - CCA
        compute_T__q2_h1__A_CCA(mr_adc, T)

        if nval > 0:
            ### ACTIVE(2) - CVE
            compute_T__q2_h1__A_CVE(mr_adc, T)

            ### ACTIVE(2) - CVA
            compute_T__q2_h1__A_CVA(mr_adc, T)

    # Transform to the orthogonal basis
    if mr_adc.method in ("mr-adc(2)", "mr-adc(2)-x"):
        T_ortho = np.zeros((T.shape[0], mr_adc.h_orth.dim))
        for p in range(T.shape[0]):
            T_ortho[p] = apply_S_12(mr_adc, T[p], transpose = True)
        T = T_ortho

    X[ncore:nocc, :] = np.dot(T, U.T)

    # EXTERNAL terms
    T = np.zeros((nextern, dim))

    # MR-ADC(1) terms
    ## < [ q^(1), h^(0)^\dag ] >
    if mr_adc.method in ("mr-adc(1)", "mr-adc(2)", "mr-adc(2)-x"):

        ### EXTERNAL(1) - C
        compute_T__q1_h0__E_C(mr_adc, T)

    # MR-ADC(2) terms
    if mr_adc.method in ("mr-adc(2)", "mr-adc(2)-x"):

        ## < [ q^(1), h^(1)^\dag ] >
        ### VIRTUAL(1) - CAA
        compute_T__q1_h1__E_CAA(mr_adc, T)

        ### VIRTUAL(1) - CCE
        compute_T__q1_h1__E_CCE(mr_adc, T)

        ### VIRTUAL(1) - CAE
        compute_T__q1_h1__E_CAE(mr_adc, T)

        ### VIRTUAL(1) - CCA
        compute_T__q1_h1__E_CCA(mr_adc, T)

        if nval > 0:
            ### VIRTUAL(1) - CVE
            compute_T__q1_h1__E_CVE(mr_adc, T)

            ### VIRTUAL(1) - CVA
            compute_T__q1_h1__E_CVA(mr_adc, T)

        ### EXTERNAL(2) - C
        compute_T__q2_h0__E_C(mr_adc, T)

    # MR-ADC(2)-X terms
    # {q^(2)| h^(1)^dag}
    if mr_adc.method == "mr-adc(2)-x":
        # VIRTUAL(2) - CAA
        compute_T__q2_h1__E_CAA(mr_adc, T)

        # VIRTUAL(2) - CCE
        compute_T__q2_h1__E_CCE(mr_adc, T)

        # VIRTUAL(2) - CAE
        compute_T__q2_h1__E_CAE(mr_adc, T)

        # VIRTUAL(2) - CCA
        compute_T__q2_h1__E_CCA(mr_adc, T)

        if nval > 0:
            # VIRTUAL(2) - CVE
            compute_T__q2_h1__E_CVE(mr_adc, T)

            # VIRTUAL(2) - CVA
            compute_T__q2_h1__E_CVA(mr_adc, T)

    # Transform to the orthogonal basis
    if mr_adc.method in ("mr-adc(2)", "mr-adc(2)-x"):
        T_ortho = np.zeros((T.shape[0], mr_adc.h_orth.dim))
        for p in range(T.shape[0]):
            T_ortho[p] = apply_S_12(mr_adc, T[p], transpose = True)
        T = T_ortho

    X[nocc:, :] = np.dot(T, U.T)

    mr_adc.log.timer("computing transition moments matrix", *cput0)

    return X

def analyze_spec_factor(mr_adc, X, spec_intensity):

    print("\nSpectroscopic Factors Analysis:")

    print_thresh = mr_adc.spec_factor_print_tol
    mr_adc.log.extra("Print spectroscopic factors > %e" %  print_thresh)

    X_2 = 2.0 * (X.T)**2

    for i in range(X_2.shape[0]):

        sort = np.argsort(-X_2[i,:])
        X_2_row = X_2[i,:]
        X_2_row = X_2_row[sort]

        if not mr_adc.symmetry:
            group_repr_symm = np.repeat(['A'], X_2_row.shape[0])
        else:
            group_repr_symm = mr_adc.group_repr_symm
            group_repr_symm = np.array(group_repr_symm)

            group_repr_symm = group_repr_symm[sort]

        spec_Contribution = X_2_row[X_2_row > print_thresh]
        index_orb = sort[X_2_row > print_thresh] + 1

        if np.sum(spec_Contribution) <= print_thresh:
            continue

        partial_Contribution = spec_Contribution / spec_intensity[i]

        spec_Contribution = spec_Contribution[partial_Contribution > 1e-6]
        index_orb = index_orb[partial_Contribution > 1e-6]
        partial_Contribution = partial_Contribution[partial_Contribution > 1e-6]

        print("\n%s | root %d \n" % (mr_adc.method, i))
        print("  MO          Spec. Contribution       Partial Contribution")
        print("-------------------------------------------------------------")

        for c in range(index_orb.shape[0]):
            print(" %3.d (%s)             %10.8f                 %10.8f" % (index_orb[c], group_repr_symm[c],
                                                                            spec_Contribution[c],
                                                                            partial_Contribution[c]))

def compute_dyson_mo(mr_adc, X):

    mr_adc.log.note("\nComputing Dyson molecular orbitals...")
    mo_dyson = np.dot(mr_adc.mo, X)
    mr_adc.log.note("Done!\n")

    return mo_dyson